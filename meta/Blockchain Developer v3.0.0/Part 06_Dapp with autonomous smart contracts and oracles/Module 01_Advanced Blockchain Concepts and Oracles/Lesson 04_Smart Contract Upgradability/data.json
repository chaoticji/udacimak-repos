{
  "data": {
    "lesson": {
      "id": 813849,
      "key": "13e85032-a45e-4213-b493-77b9814e9acc",
      "title": "Smart Contract Upgradability",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "Learn the scenarios where a Smart Contract needs to be upgraded, solutions for handling Smart Contract upgrades, how to separate data and application contracts, and securing calls between the two.",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/13e85032-a45e-4213-b493-77b9814e9acc/813849/1555417510839/Smart+Contract+Upgradability+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/13e85032-a45e-4213-b493-77b9814e9acc/813849/1555417506505/Smart+Contract+Upgradability+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 813809,
          "key": "ac6019b8-4025-453c-b5fa-ac257c7ec4ab",
          "title": "Why Contracts Should Be Upgradable",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "ac6019b8-4025-453c-b5fa-ac257c7ec4ab",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 813804,
              "key": "120fd463-be0e-41d5-8044-4e2f0b2df953",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Why Contracts Should Be Upgradable",
              "instructor_notes": ""
            },
            {
              "id": 813805,
              "key": "06af55d9-d7da-4a27-a00e-f5a0f6ccdc56",
              "title": "Why Upgrades Are Needed",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "G3JtAznX6UA",
                "china_cdn_id": "G3JtAznX6UA.mp4"
              }
            },
            {
              "id": 813806,
              "key": "892932c4-0a1f-497d-b893-aa94f6bb032c",
              "title": "Solutions for Upgrading Smart Contracts",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "pFNxl-SQRZc",
                "china_cdn_id": "pFNxl-SQRZc.mp4"
              }
            },
            {
              "id": 813807,
              "key": "bb2162ce-56ef-4a3d-b662-3396a5866c04",
              "title": "Migrating Data to New Contract?",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "bb2162ce-56ef-4a3d-b662-3396a5866c04",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What is the biggest challenge with migrating large amounts of contract data to a new contract?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "It uses a lot of bandwidth",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "Gas cost is high and risk of running up against block gas limits is also extremely high",
                    "is_correct": true
                  },
                  {
                    "id": "rbk3",
                    "text": "All indexes have to be regenerated",
                    "is_correct": false
                  },
                  {
                    "id": "rbk4",
                    "text": "All state variables using address mappings will lose the reference",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 813819,
          "key": "e306c832-0ffc-4e96-9479-cf1e1fb52cdb",
          "title": "Separate Data and Logic",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e306c832-0ffc-4e96-9479-cf1e1fb52cdb",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 813810,
              "key": "a715d5d7-0052-4b54-a462-80e6e0eda880",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Separate Data and Logic",
              "instructor_notes": ""
            },
            {
              "id": 813811,
              "key": "8909c53e-8f8d-456b-b7b7-843dd627d31f",
              "title": "Separate Data And Logic",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "j8CX7Vyw7Dw",
                "china_cdn_id": "j8CX7Vyw7Dw.mp4"
              }
            },
            {
              "id": 813812,
              "key": "6b96c420-9e27-4548-8dbe-ceea6a29ed46",
              "title": "Why Separate Data and Logic?",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "6b96c420-9e27-4548-8dbe-ceea6a29ed46",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Why is it advantageous to separate data and application logic into separate contracts?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "It makes the contracts easier to deploy",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "It lowers the gas cost of transactions",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "It makes it easier for the dev team to work with multiple source control repositories",
                    "is_correct": false
                  },
                  {
                    "id": "rbk4",
                    "text": "If a bug is discovered in the application logic, a new contract can be deployed without losing data",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 813814,
              "key": "cf6deed7-4392-4378-8127-08c054991bd5",
              "title": "Exercise 1 - Creating Separate Contracts - Intro",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "3MHlYS2Euy0",
                "china_cdn_id": "3MHlYS2Euy0.mp4"
              }
            },
            {
              "id": 813815,
              "key": "d79c9893-b467-4518-8cd6-f8b966c1595b",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "d79c9893-b467-4518-8cd6-f8b966c1595b",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Create application contract - Add file `contracts/ExerciseC6C/ExerciseC6CApp.sol` by copying the code from `snippets/C/ExerciseC6CApp.txt`",
                "Move application logic from `ExerciseC6C` to `ExerciseC6CApp` - Move the `calculateBonus()` function",
                "Move application logic from `ExerciseC6C` to `ExerciseC6CApp` - Move `addSale()` function",
                "Create temporary stub for `updateEmployee()` in `ExerciseC6CApp`",
                "Run `truffle compile` and ensure code compiles"
              ],
              "positive_feedback": "Nice work!",
              "video_feedback": null,
              "description": "```shell\ngit checkout ExerciseC6C && npm install\n```\n\n\n\nComplete each of the following to create separate contracts."
            },
            {
              "id": 813816,
              "key": "a262048a-fa8c-406f-b0db-3444bf88f489",
              "title": "Exercise 1 - Creating Separate Contracts - Solution",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "joPZKkx04_Q",
                "china_cdn_id": "joPZKkx04_Q.mp4"
              }
            },
            {
              "id": 813817,
              "key": "46e3e470-35d5-43f2-a0c1-1e1791624e42",
              "title": "Compiling While Transitioning?",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "46e3e470-35d5-43f2-a0c1-1e1791624e42",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "When separating a contract into separate Data and Application contracts, what development technique enables you to gradually perform the task while ensuring the code continues to compile?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Copy all Data contract functions into Application contract",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "Add and edit Application contract code to a temporary text file",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "Add Data contract function stubs to Application contract",
                    "is_correct": true
                  },
                  {
                    "id": "rbk4",
                    "text": "Move all Data contract functions into a library and reference it from the Application contract",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 813827,
          "key": "a591a4c7-6552-49cb-be70-ea02d86a2f3f",
          "title": "Add Data Contract Reference",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "a591a4c7-6552-49cb-be70-ea02d86a2f3f",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 813820,
              "key": "a9277ce7-40c2-429e-8f5f-e5a9e6e3cbad",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Add Data Contract Reference",
              "instructor_notes": ""
            },
            {
              "id": 813821,
              "key": "2d30bd8e-cf48-4497-8acd-bfef0df9b236",
              "title": "Exercise 2 - Add Data Contract Reference",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "f0kkDIcF2mo",
                "china_cdn_id": "f0kkDIcF2mo.mp4"
              }
            },
            {
              "id": 813822,
              "key": "ec0f2814-094a-4a0e-92a9-c77a7bd295f5",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "ec0f2814-094a-4a0e-92a9-c77a7bd295f5",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Add Data contract interface to end of `ExerciseC6CApp`",
                "Change visibility of `updateEmployee()` in `ExerciseC6C` from `internal` to `external`",
                "Delete temporary stub for `updateEmployee()` from `ExerciseC6CApp`",
                "Add state variable referencing Data contract in `ExerciseC6CApp`",
                "Prefix `updateEmployee()` with Data contract state variable in `ExerciseC6CApp`",
                "Run `truffle compile` and ensure code compiles"
              ],
              "positive_feedback": "Great work!",
              "video_feedback": null,
              "description": "Check off each of the following to add data contract reference:"
            },
            {
              "id": 813823,
              "key": "ed292108-4142-4f3d-bd7b-688903eef3c3",
              "title": "Exercise 2 - Add Data Contract Reference Solution",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "60bqh6iLJbk",
                "china_cdn_id": "60bqh6iLJbk.mp4"
              }
            },
            {
              "id": 813824,
              "key": "d7deb9b2-e785-47a1-a173-e2ed7137b487",
              "title": "Reference Data Contract from App Contract?",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "d7deb9b2-e785-47a1-a173-e2ed7137b487",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What is the correct way to reference Data contract functions from the Application contract?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Include an interface reference to the Data contract for each function that will be called from the Application contract",
                    "is_correct": true
                  },
                  {
                    "id": "rbk2",
                    "text": "Add stubs for Data contract functions",
                    "is_correct": false
                  },
                  {
                    "id": "rbk3",
                    "text": "Extract Data contract functions into a library and reference it from the Application contract",
                    "is_correct": false
                  },
                  {
                    "id": "rbk4",
                    "text": "Copy all Data contract functions to the Application contract",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 813826,
              "key": "a9f7c87f-b478-41ce-a093-ef17e1b303f3",
              "title": "Contract Architecture",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "TU2lJ3niA2s",
                "china_cdn_id": "TU2lJ3niA2s.mp4"
              }
            }
          ]
        },
        {
          "id": 813834,
          "key": "f6dd2f0e-7744-4de0-b988-81b43172ab6b",
          "title": "Set Data Contract Address",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f6dd2f0e-7744-4de0-b988-81b43172ab6b",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 813828,
              "key": "7f5ee7c3-e874-4ba6-a7d1-39f32fabc3bb",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Set Data Contract Address",
              "instructor_notes": ""
            },
            {
              "id": 813829,
              "key": "e9b46021-06f2-47b1-87f4-6a8620c922d9",
              "title": "Exercise 3 - Intro - Set Data Contract Address",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "uPOicjGyfW8",
                "china_cdn_id": "uPOicjGyfW8.mp4"
              }
            },
            {
              "id": 813830,
              "key": "2de415c0-76b1-4985-b705-e8d30ae99675",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "2de415c0-76b1-4985-b705-e8d30ae99675",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Add Data contract address parameter to `ExerciseC6CApp` constructor",
                "Initialize state variable referencing Data contract in `ExerciseC6CApp` constructor",
                "Remove requireContractOwner modifier from `updateEmployee()` in `ExerciseC6C`",
                "Run `truffle compile` and ensure code compiles"
              ],
              "positive_feedback": "Great work!",
              "video_feedback": null,
              "description": "Check off each of the following to set data contract address"
            },
            {
              "id": 813831,
              "key": "f6df6678-7462-45b3-8e4d-2c32d5938398",
              "title": "Exercise 3 - Solution - Set Data Contract Address",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "n84wo-FPGiA",
                "china_cdn_id": "n84wo-FPGiA.mp4"
              }
            },
            {
              "id": 813832,
              "key": "2a4d9030-aaf0-4032-aca8-97a7be2fe58c",
              "title": "Contract Instantiation?",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "2a4d9030-aaf0-4032-aca8-97a7be2fe58c",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "When referencing contract A from contract B, what address is required to instantiate contract A in contract B’s code?",
                "answers": [
                  {
                    "id": "rbk1",
                    "text": "Address of account from which A was deployed",
                    "is_correct": false
                  },
                  {
                    "id": "rbk2",
                    "text": "Address of A when it was deployed",
                    "is_correct": true
                  },
                  {
                    "id": "rbk3",
                    "text": "keccak256() hash of A’s address",
                    "is_correct": false
                  },
                  {
                    "id": "rbk4",
                    "text": "Deploy a new instance of A from B and use the new address",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 813840,
          "key": "5067e654-7c44-4a50-b84d-2208f3675b5b",
          "title": "Update Test Code",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "5067e654-7c44-4a50-b84d-2208f3675b5b",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 813835,
              "key": "70d247cb-45f9-4ffe-83c5-4d3b23d22bbc",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Update Test Code",
              "instructor_notes": ""
            },
            {
              "id": 813836,
              "key": "6678dc84-4738-44f3-8c1e-323439f55cf3",
              "title": "Exercise 4 - Intro - Update Test Code",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "om-i7-Kv_lE",
                "china_cdn_id": "om-i7-Kv_lE.mp4"
              }
            },
            {
              "id": 813837,
              "key": "8154d7d8-5f66-42ed-9ced-c011ed41a6d4",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "8154d7d8-5f66-42ed-9ced-c011ed41a6d4",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Add a reference to the App contract in `config/testConfig.js`",
                "Create a new instance of the App contract in `config/testConfig.js`",
                "Add a reference to the App contract instance in the return value in `config/testConfig.js`",
                "Change the contract reference for `addSale()` in `test/ExerciseC6C.js`",
                "Run `npm test` and ensure that the test passes"
              ],
              "positive_feedback": "Great work!",
              "video_feedback": null,
              "description": "Check off each of the following to update the test code."
            },
            {
              "id": 813838,
              "key": "e04966ec-bbf9-4f38-a8d6-007d5508e64a",
              "title": "Exercise 4 - Solution - Update Test Code",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "pkGbBWSThzQ",
                "china_cdn_id": "pkGbBWSThzQ.mp4"
              }
            },
            {
              "id": 813839,
              "key": "694fe1f0-3e3a-40a1-9df9-a4d022c01707",
              "title": "Security Between Contracts",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "JlhZEda-viM",
                "china_cdn_id": "JlhZEda-viM.mp4"
              }
            }
          ]
        },
        {
          "id": 813845,
          "key": "d3548a71-1a2c-482c-bf38-6c2c975e89cf",
          "title": "Restrict Data Contract Callers",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "d3548a71-1a2c-482c-bf38-6c2c975e89cf",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 813841,
              "key": "776b5c19-1eb0-4afb-bfcd-5be28df7e620",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Restrict Data Contract Callers",
              "instructor_notes": ""
            },
            {
              "id": 813842,
              "key": "9446436c-dc02-4ba5-8b79-a4284cadedd7",
              "title": "Exercise 5 - Intro - Restrict Data Contract Callers",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "nfMgI7V7wz4",
                "china_cdn_id": "nfMgI7V7wz4.mp4"
              }
            },
            {
              "id": 813843,
              "key": "118e1cc5-a82b-4398-aacb-1bb3f86a5b3f",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "118e1cc5-a82b-4398-aacb-1bb3f86a5b3f",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Add state variable for tracking authorized contracts to `ExerciseC6C`",
                "Add function `authorizeContract(address)` to `ExerciseC6C`",
                "Add function `deauthorizeContract(address)` to `ExerciseC6C`",
                "Add function modifier `isCallerAuthorized()` to `ExerciseC6C`"
              ],
              "positive_feedback": "Great work!",
              "video_feedback": null,
              "description": "Check off each of the following to restrict the data contract callers."
            },
            {
              "id": 813844,
              "key": "18490bfc-28a4-4e0d-8fdc-2a4ac5b829b7",
              "title": "Exercise 5 - Solution - Restrict Data Contract Callers",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "hn6nYZyJxeI",
                "china_cdn_id": "hn6nYZyJxeI.mp4"
              }
            }
          ]
        },
        {
          "id": 813848,
          "key": "44eae17d-bdab-4895-a8b9-236c9f38c381",
          "title": "Lesson Summary",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "44eae17d-bdab-4895-a8b9-236c9f38c381",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 813846,
              "key": "9367e475-53b6-4ec6-9c47-4b78540f9f94",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Lesson Summary",
              "instructor_notes": ""
            },
            {
              "id": 813847,
              "key": "2346acae-fec8-41b0-ac4f-31f17cb60627",
              "title": "Lesson Summary",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Eo2-NNtbioU",
                "china_cdn_id": "Eo2-NNtbioU.mp4"
              }
            }
          ]
        }
      ]
    }
  }
}