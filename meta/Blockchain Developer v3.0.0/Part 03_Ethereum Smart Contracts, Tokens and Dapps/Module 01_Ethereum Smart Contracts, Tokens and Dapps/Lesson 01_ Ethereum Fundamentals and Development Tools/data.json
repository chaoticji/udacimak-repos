{
  "data": {
    "lesson": {
      "id": 727854,
      "key": "a486c88b-a0d6-441a-b8c0-b7f62504d31e",
      "title": " Ethereum Fundamentals and Development Tools",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "Learn the basics of Ethereum, its tooling, developer ecosystem, and create your first decentralized application!",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/a486c88b-a0d6-441a-b8c0-b7f62504d31e/727854/1555417431083/+Ethereum+Fundamentals+and+Development+Tools+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/a486c88b-a0d6-441a-b8c0-b7f62504d31e/727854/1555417422418/+Ethereum+Fundamentals+and+Development+Tools+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 778678,
          "key": "71e5497a-fa38-49ab-9bd0-f12274c98981",
          "title": "Lesson Introduction",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "71e5497a-fa38-49ab-9bd0-f12274c98981",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 778859,
              "key": "b5bebad4-118c-4c17-8cb4-bbbb48abc7e5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Welcome to the Lesson!\n___\nWelcome to this lesson, **Introduction to Ethereum**! \n\nEthereum is the *world's leading platform* for developing decentralized applications on the blockchain. This lesson will introduce you to the basics of what Ethereum is and how to get started as an Ethereum blockchain developer.\n",
              "instructor_notes": ""
            },
            {
              "id": 780548,
              "key": "d90b8eb2-93fd-4d7a-9ab7-dd6d8ab07132",
              "title": "Lesson Introduction",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "J2ulDHMGXxE",
                "china_cdn_id": "J2ulDHMGXxE.mp4"
              }
            },
            {
              "id": 779952,
              "key": "c99193d7-964a-447f-8fb1-be3213d90273",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Lesson Objectives\n___\n\n*Our goal is to help you be able to do the following things by the end of this lesson.*\n\n* Understand what Ethereum is, why it's important, and how it's different from other Blockchain platforms.\n* Connect to the Ethereum tools and community available to you as an Ethereum blockchain developer.\n* Create a simple decentralized application that connects to the Ethereum blockchain.",
              "instructor_notes": ""
            },
            {
              "id": 779528,
              "key": "3c83f16e-0bc7-474c-ae3f-d3c155560bde",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/3c83f16e-0bc7-474c-ae3f-d3c155560bde",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779513,
              "key": "e391eebc-f86d-4b55-bf02-4810e4d8689e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Lesson Mini-Project\n___\n\nThroughout this lesson, we'll use the skills you learn to build your first **decentralized application**. The goal of this application is to create an **Ethereum Secret Messenger** that allows users to write a secret message to the Ethereum blockchain. \n\nThe concepts and tooling learned while building this mini project extremely valuable as you begin building more complex applications.",
              "instructor_notes": ""
            },
            {
              "id": 781983,
              "key": "2085fdf0-02ee-4fe8-99d3-e580d36aff9d",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5be5cd4e_screen-shot-2018-11-09-at-10.07.36-am/screen-shot-2018-11-09-at-10.07.36-am.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/2085fdf0-02ee-4fe8-99d3-e580d36aff9d",
              "caption": "",
              "alt": "",
              "width": 3104,
              "height": 2016,
              "instructor_notes": null
            },
            {
              "id": 779529,
              "key": "864bc0c3-578f-40c0-82f6-31fb8f4bcf78",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/864bc0c3-578f-40c0-82f6-31fb8f4bcf78",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 778860,
              "key": "2643cbae-e11f-4adb-88b0-ea2ff0b19e55",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### How this lesson relates to the project\n___\nTo complete the upcoming project, you'll need to understand the basics of Ethereum. You'll also need to know how to use the set of tools required to deploy your own decentralized applications. The goal of this lesson is to give you the skills needed to create and deploy applications on the Ethereum network so that you're well prepared to complete this project.\n\n### What is not in this lesson?\n___\n\nAs you'll see, a big part of working with Ethereum is knowing how to write what are known as **smart contracts** in a language named **Solidity**. You'll see the basics of this language throughout the lesson but the more intricate details of Solidity and smart contracts are not covered until the next lesson.\n\nDetails on this language are given in **Lesson 02: Introduction to Solidity.*\n\n\n### Let's get started!\n___\n\nHopefully you're excited to get started with Ethereum! When you're ready, come into the next section where we start by introducing the basics of the Ethereum platform.\n\n\n\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 778679,
          "key": "b55d206f-60f5-46e2-a251-e7d078a58325",
          "title": "Ethereum Basics",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "b55d206f-60f5-46e2-a251-e7d078a58325",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 778869,
              "key": "2ea061d9-0f87-4a14-a51b-86f8c0b28a2e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Ethereum Basics\n___\n\nHere you'll get a broad overview of Ethereum, some related terminology, and to get you connected to the Ethereum website, Ethereum.org\n\n## Objectives\n___\n\n*Our goal is to help you do the following things.*\n\n1. Describe how the Blockchain Framework relates to Ethereum.\n2. Define basic terminology used to get started with Ethereum.\n3. Navigate the Ethereum website and understand their basic values.\n\n",
              "instructor_notes": ""
            },
            {
              "id": 779530,
              "key": "18c726ce-18fb-405e-902e-37e2adf816c6",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/18c726ce-18fb-405e-902e-37e2adf816c6",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 778872,
              "key": "bbc9e97d-7cb5-4e02-b9f1-b9d58773b300",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 1. The Blockchain Framework and Ethereum\n___\n\nThe blockchain framework was introduced earlier in the program, and it's still extremely useful now! This framework is an effective way to also understand Ethereum. In the next video, we'll review this framework and describe how it relates to the Ethereum blockchain.\n",
              "instructor_notes": ""
            },
            {
              "id": 778729,
              "key": "25a03410-addd-4840-a796-b253e3bb5e1d",
              "title": "Blockchain Framework Refresher",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "B4bYtFQnTyM",
                "china_cdn_id": "B4bYtFQnTyM.mp4"
              }
            },
            {
              "id": 779532,
              "key": "9397c763-6bbd-4d5b-9358-f99fe9c184bd",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/9397c763-6bbd-4d5b-9358-f99fe9c184bd",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 778873,
              "key": "e4182ce5-ec64-4e54-b205-1e3cffe748c7",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 2. Ethereum Basic Terminology\n___\nWith any new platform, there are many new terms to learn. Ethereum is no different. To get you started, we'll go over many of the new terms you'll start hearing to ensure you're up to speed on your Ethereum lingo.",
              "instructor_notes": ""
            },
            {
              "id": 778730,
              "key": "e8c704e0-eff9-400f-9a4b-322af4a513a7",
              "title": "Ethereum Basic Terminology",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "wlcTQk_IFJA",
                "china_cdn_id": "wlcTQk_IFJA.mp4"
              }
            },
            {
              "id": 780501,
              "key": "0c1e6802-b83a-4f7e-92d3-5a735138b76c",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "0c1e6802-b83a-4f7e-92d3-5a735138b76c",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Match the following definitions to the terms they represent."
                },
                "concepts_label": "Definition",
                "answers_label": "Term",
                "concepts": [
                  {
                    "text": "Open source, programmable public blockchain platform.",
                    "correct_answer": {
                      "id": "a1541565666702",
                      "text": "Ethereum"
                    }
                  },
                  {
                    "text": "Executes logic, algorithms, and processes data inputs.",
                    "correct_answer": {
                      "id": "a1541565691188",
                      "text": "EVM"
                    }
                  },
                  {
                    "text": "The ability to solve a computational problem.",
                    "correct_answer": {
                      "id": "a1541565749287",
                      "text": "Turing Complete"
                    }
                  },
                  {
                    "text": "A contract written in code. An object on the Ethereum blockchain that contains EVM code functions.",
                    "correct_answer": {
                      "id": "a1541565824879",
                      "text": "Smart Contract"
                    }
                  },
                  {
                    "text": "A high level language for coding and deploying smart contracts.",
                    "correct_answer": {
                      "id": "a1541565831050",
                      "text": "Solidity"
                    }
                  },
                  {
                    "text": "A decentralized global network of computers that executes peer to peer transactions and contracts.",
                    "correct_answer": {
                      "id": "a1541565844530",
                      "text": "World Computer"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1541565831050",
                    "text": "Solidity"
                  },
                  {
                    "id": "a1541565749287",
                    "text": "Turing Complete"
                  },
                  {
                    "id": "a1541565691188",
                    "text": "EVM"
                  },
                  {
                    "id": "a1541565824879",
                    "text": "Smart Contract"
                  },
                  {
                    "id": "a1541565666702",
                    "text": "Ethereum"
                  },
                  {
                    "id": "a1541565844530",
                    "text": "World Computer"
                  }
                ]
              }
            },
            {
              "id": 779533,
              "key": "0df9bdc9-d554-4e17-9c9e-7b8f14014ba3",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/0df9bdc9-d554-4e17-9c9e-7b8f14014ba3",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779842,
              "key": "1538c79f-b778-49de-843f-74ad9a20d92e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 3. Ethereum Website\n___\n\nNow that you've been introduced to Ethereum, feel free to check out [ethereum.org](https://ethereum.org/). \n\nThis is the Ethereum home page and it has many interesting details to help get you started with Ethereum. If something isn't quite familiar to you yet, that's fine, you'll hear all about it in the upcoming lessons!\n",
              "instructor_notes": ""
            },
            {
              "id": 778789,
              "key": "3ee586e9-675e-4531-844d-981eb9031538",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5bdf5933_screen-shot-2018-11-04-at-12.40.09-pm/screen-shot-2018-11-04-at-12.40.09-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/3ee586e9-675e-4531-844d-981eb9031538",
              "caption": "",
              "alt": "",
              "width": 3104,
              "height": 2024,
              "instructor_notes": null
            },
            {
              "id": 780423,
              "key": "13033ecb-535e-4e8f-a34d-39e38a57a5ad",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Once on the site, note the main headlines like **build unstoppable applications**, **smart money smart wallet**, **issuing your own cryptocurrency**, and others. Exploring these further will help you better understand the value Ethereum hopes to bring it's users.\n\n",
              "instructor_notes": ""
            },
            {
              "id": 780502,
              "key": "19799948-f696-4564-9679-0903005ad088",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "19799948-f696-4564-9679-0903005ad088",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of the ideas that Ethereum presents on their website do you find interesting?",
                "answers": [
                  {
                    "id": "a1541565913308",
                    "text": "Build unstoppable applications",
                    "is_correct": true
                  },
                  {
                    "id": "a1541565978776",
                    "text": "Smart money, smart wallet",
                    "is_correct": false
                  },
                  {
                    "id": "a1541565985479",
                    "text": "Learn solidity, a new language for smart contracts",
                    "is_correct": false
                  },
                  {
                    "id": "a1541566000600",
                    "text": "Kickstart a project with a trustless crowdsale",
                    "is_correct": false
                  },
                  {
                    "id": "a1541566013936",
                    "text": "Create a democratic autonomous organization",
                    "is_correct": false
                  },
                  {
                    "id": "a1541566024944",
                    "text": "Build a new kind of decentralized application",
                    "is_correct": false
                  },
                  {
                    "id": "a1541566038385",
                    "text": "Get the command line tools",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 779841,
              "key": "fc11244d-8c43-4870-971d-989fd4cfc4b7",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Review\n___\n\nThe goal here was to give you a broad overview of Ethereum, some related terminology, and to get you connected to Ethereum.org",
              "instructor_notes": ""
            },
            {
              "id": 782947,
              "key": "770efbc5-cfcf-4b34-abec-7af3d2b4382a",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "770efbc5-cfcf-4b34-abec-7af3d2b4382a",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "1. Describe how the Blockchain Framework relates to Ethereum.",
                "2. Define basic terminology used to get started with Ethereum.",
                "3. Navigate the Ethereum website and understand their basic values."
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Track the objectives you've feel you've gained the skills to complete."
            }
          ]
        },
        {
          "id": 778732,
          "key": "fbd593e1-e75d-4486-b941-71efce4999c1",
          "title": "What makes Ethereum Special?",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "fbd593e1-e75d-4486-b941-71efce4999c1",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 778879,
              "key": "f6b1d89a-ae5d-4c79-b19f-fc2e366a606e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# What Makes Ethereum Special?\n___\n\nEthereum is an amazing platform for both it's developers and it's applications users.\n\nTo understand why, you'll need to dive a little further into the details of what makes Ethereum different from other platforms.\n\n## Objectives\n___\n\n*Our goal is to help you do the following things.*\n\n1. Describe why Ethereum was created and how it is different from other platforms.\n2.  Describe similarities and differences in how Bitcoin and Ethereum manage their blockchain states.\n3.  Define the high level differences between Bitcoin and Ethereum.\n4.  Describe what the Ethereum Virtual Machine is and why it is important.\n",
              "instructor_notes": ""
            },
            {
              "id": 779539,
              "key": "82621a13-e5c9-4331-a0c6-369efbd2b5b2",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/82621a13-e5c9-4331-a0c6-369efbd2b5b2",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 778880,
              "key": "9c6284f0-b2ad-4528-bf64-4674cafd0a9a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 1. Why Ethereum?\n___\n\nEthereum was built to improve existing blockchain platforms. Specifically, it's plans were first laid out in the [Ethereum yellowpaper](https://github.com/ethereum/yellowpaper). This was written by Vitalik Buterin, the founder of Ethereum. \n\nAt the time he was the co-founder and leading writer at Bitcoin Magazine. For that reason, there's a lot of intentional differences meant specifically to solve the problems Vitalik saw with Bitcoin. Throughout the next few videos, we'll describe how Ethereum set to differentiate itself from other blockchain platforms.\n",
              "instructor_notes": ""
            },
            {
              "id": 778733,
              "key": "fd9a1d66-69aa-4243-a5f4-25c2007806f2",
              "title": "Why Ethereum",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Mm4Hmy-nszI",
                "china_cdn_id": "Mm4Hmy-nszI.mp4"
              }
            },
            {
              "id": 780427,
              "key": "7e40172f-97bc-4e00-a2d8-dcce55a0ef85",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "7e40172f-97bc-4e00-a2d8-dcce55a0ef85",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of the following best describes the goals of the Ethereum platform?",
                "answers": [
                  {
                    "id": "a1541553152157",
                    "text": "A machine that is dedicated to perfecting a single application.",
                    "is_correct": false
                  },
                  {
                    "id": "a1541553211772",
                    "text": "A swiss army knife that can grow to fit the needs of it's users.",
                    "is_correct": false
                  },
                  {
                    "id": "a1541553244817",
                    "text": "An operating system that gives you the tools to build many types of applications.",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 779540,
              "key": "dc4ea99c-bceb-4d8c-a794-ab77aa93716e",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/dc4ea99c-bceb-4d8c-a794-ab77aa93716e",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779831,
              "key": "42ecf76e-aaa0-48dc-aa12-6884f4a83740",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 2. Ethereum vs Bitcoin State\n___\n\nAs you just saw, Ethereum is attempting to improve on earlier generation blockchain platforms. In the following section, we'll look at the similarities and differences in how Bitcoin and Ethereum handle the state of their blockchains.\n",
              "instructor_notes": ""
            },
            {
              "id": 778743,
              "key": "ef595d65-a061-4880-9a89-6b7f6a36308f",
              "title": "World State",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "jZ2EmFYNSUU",
                "china_cdn_id": "jZ2EmFYNSUU.mp4"
              }
            },
            {
              "id": 780431,
              "key": "1e58090b-289b-4aa1-864e-abf823bd92e7",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "1e58090b-289b-4aa1-864e-abf823bd92e7",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of the following best describes how state is managed on the Ethereum blockchain?",
                "answers": [
                  {
                    "id": "a1541553324022",
                    "text": "It manages the unspent transaction outputs on the network.",
                    "is_correct": false
                  },
                  {
                    "id": "a1541553368676",
                    "text": "It separates the blockchain state from the account state and creates a mapping between them.",
                    "is_correct": true
                  },
                  {
                    "id": "a1541553430351",
                    "text": "It hold the account balances of it's users.",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 779834,
              "key": "360094af-9691-4c4c-9b5d-98ee76617afa",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/360094af-9691-4c4c-9b5d-98ee76617afa",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779825,
              "key": "32c6b717-19fe-4242-899f-a098b8f95e33",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 3. Bitcoin vs Ethereum in detail\n___\n\nYou now know some of the core distinctions between Ethereum and Bitcoin. Let's go one step further to explore a bit more about how these blockchains differ. These details will continue to help give you a better perspective on how Ethereum works. ",
              "instructor_notes": ""
            },
            {
              "id": 778734,
              "key": "33b10c24-17b2-4979-8be8-5143b6145d20",
              "title": "Ethereum Vs Bitcoin",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "y3NmPR-sdgo",
                "china_cdn_id": "y3NmPR-sdgo.mp4"
              }
            },
            {
              "id": 780435,
              "key": "c4519d44-58ae-47ec-bc83-6a387aa73843",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "c4519d44-58ae-47ec-bc83-6a387aa73843",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Try placing each of the items below in their correct location as shown in the table from the video."
                },
                "concepts_label": "Categories",
                "answers_label": "Ethereum",
                "concepts": [
                  {
                    "text": "Permission Restrictions",
                    "correct_answer": {
                      "id": "a1541553591283",
                      "text": "Permissionless"
                    }
                  },
                  {
                    "text": "Consensus",
                    "correct_answer": {
                      "id": "a1541553603351",
                      "text": "Proof of Work"
                    }
                  },
                  {
                    "text": "Scalability",
                    "correct_answer": {
                      "id": "a1541553606127",
                      "text": "High node, low performance"
                    }
                  },
                  {
                    "text": "Regulation",
                    "correct_answer": {
                      "id": "a1541553609645",
                      "text": "Medium"
                    }
                  },
                  {
                    "text": "Anonymity",
                    "correct_answer": {
                      "id": "a1541553613178",
                      "text": "Pseudoanonymity"
                    }
                  },
                  {
                    "text": "Native currency",
                    "correct_answer": {
                      "id": "a1541553619116",
                      "text": "Ether"
                    }
                  },
                  {
                    "text": "Scripting",
                    "correct_answer": {
                      "id": "a1541553623314",
                      "text": "Turing complete"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1541553859009",
                    "text": "Low"
                  },
                  {
                    "id": "a1541553591283",
                    "text": "Permissionless"
                  },
                  {
                    "id": "a1541553609645",
                    "text": "Medium"
                  },
                  {
                    "id": "a1541553613178",
                    "text": "Pseudoanonymity"
                  },
                  {
                    "id": "a1541553853467",
                    "text": "Permissioned"
                  },
                  {
                    "id": "a1541553623314",
                    "text": "Turing complete"
                  },
                  {
                    "id": "a1541553861798",
                    "text": "Anonymous"
                  },
                  {
                    "id": "a1541553747845",
                    "text": "Bitcoin"
                  },
                  {
                    "id": "a1541553619116",
                    "text": "Ether"
                  },
                  {
                    "id": "a1541553606127",
                    "text": "High node, low performance"
                  },
                  {
                    "id": "a1541553603351",
                    "text": "Proof of Work"
                  }
                ]
              }
            },
            {
              "id": 779833,
              "key": "fc6d5b8e-3f90-460f-a5c8-b46174fef9a1",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/fc6d5b8e-3f90-460f-a5c8-b46174fef9a1",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779830,
              "key": "10b7808a-91fc-4560-879e-c9fd5e0f2573",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 4. Ethereum Virtual Machine\n___\n\nAt this point, you're done comparing Bitcoin with Ethereum. \n\nI'll take some time now to focus specifically on Ethereum and what is known as the **Ethereum Virtual Machine**. This is a really special part of Ethereum. No introduction to Ethereum is complete without it, so to wrap up this concept we'll introduce this important idea.",
              "instructor_notes": ""
            },
            {
              "id": 779821,
              "key": "6aa1576f-ca22-41f6-a311-b3b53626081c",
              "title": "Ethereum Virtual Machine",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "8zCytjpjyeU",
                "china_cdn_id": "8zCytjpjyeU.mp4"
              }
            },
            {
              "id": 779879,
              "key": "10c7cf6c-aaec-4771-874f-6c46a59ea8d3",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Resources\n___\n\nTo learn more about the Ethereum Virtual Machine, you can read through the description provided in their documentation.\n\n> [Ethereum Virtual Machine](http://ethdocs.org/en/latest/introduction/what-is-ethereum.html?highlight=EVM#ethereum-virtual-machine)\n\n",
              "instructor_notes": ""
            },
            {
              "id": 780437,
              "key": "49256be0-14cb-4fb1-ba60-936e4f880b8a",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "49256be0-14cb-4fb1-ba60-936e4f880b8a",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of these is something that the EVM is responsible for?",
                "answers": [
                  {
                    "id": "a1541553907747",
                    "text": "Managing the state of the blockchain.",
                    "is_correct": true
                  },
                  {
                    "id": "a1541553939266",
                    "text": "Managing Accounts",
                    "is_correct": true
                  },
                  {
                    "id": "a1541553944829",
                    "text": "Validating transactions",
                    "is_correct": true
                  },
                  {
                    "id": "a1541554032828",
                    "text": "Executing code on the network",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 779836,
              "key": "9ffb6837-78e6-49d0-9aa4-86df763c6d68",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/9ffb6837-78e6-49d0-9aa4-86df763c6d68",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 778886,
              "key": "1c444cf4-c62a-46f4-aec2-fd4363b10532",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Review\n___\n\nHere we described what makes the Ethereum platform so special, how it's different from other platforms, and how the Ethereum Virtual Machine plays a role in supporting the entire network. \n",
              "instructor_notes": ""
            },
            {
              "id": 782948,
              "key": "9a742164-cdfd-4a06-bac3-b7035a211129",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "9a742164-cdfd-4a06-bac3-b7035a211129",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "1. Describe why Ethereum was created and how it is different from other platforms.",
                "2. Describe similarities and differences in how Bitcoin and Ethereum manage their blockchain states.",
                "3. Define the high level differences between Bitcoin and Ethereum.",
                "4. Describe what the Ethereum Virtual Machine is and why it is important."
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Track the objectives you've feel you've gained the skills to complete."
            }
          ]
        },
        {
          "id": 778682,
          "key": "ee68982d-761e-44a0-86a3-c5b1ab44bcc0",
          "title": "Ethereum Tools and Community",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "ee68982d-761e-44a0-86a3-c5b1ab44bcc0",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 778888,
              "key": "02acb6ce-b1ec-41b9-b253-37de9cf12a2e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Ethereum Tools and Community\n___\n\nWhile making Ethereum decentralized applications, you'll encounter many new tools and communities. These will become an invaluable resource as you continue growing as an Ethereum Blockchain Developer. Here you'll see ways to get connected with this amazing network of tools and communities for yourself.\n\n## Objectives\n___\n\n*Our goal here is to help you do the following things.*\n\n1.  Describe the basics of tools you'll work with as you build Ethereum applications.\n2. Join the core Ethereum Blockchain Developer communities   \n",
              "instructor_notes": ""
            },
            {
              "id": 779546,
              "key": "18932710-4f81-4660-9087-911ab1159254",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/18932710-4f81-4660-9087-911ab1159254",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 778890,
              "key": "4ca16377-7fd4-4368-9cd0-71cd919a1796",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 1. Ethereum Tooling Ecosystem\n___\n\nThere are many tools meant to help you interact with the Ethereum blockchain. In the following video, we'll take a look at some of the tools you'll use to get started.\n",
              "instructor_notes": ""
            },
            {
              "id": 781931,
              "key": "597a3535-c6af-49d2-b0cd-c39b9e98f17d",
              "title": "5.1-Ethereum-Tooling-Ecosystem",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "bSIzFq6Kat4",
                "china_cdn_id": "bSIzFq6Kat4.mp4"
              }
            },
            {
              "id": 780504,
              "key": "e5a0a4fc-d81b-45cf-a085-05d89352a4d9",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "If you're still a bit shaky on these details of these tools, that's totally fine. We'll be introducing each of them throughout the following lessons in more detail as they become relevant to the applications you are building.\n\nHere's a link to the documentaiton for each of the tools I showed you in the previous video.\n\n- [Etherscan](https://etherscan.io/)\n- [Metamask](https://metamask.io/)\n- [Remix](https://remix.ethereum.org)\n- [web3.js](https://web3js.readthedocs.io/en/1.0/)\n- [Infura](https://infura.io/)\n- [Ganache](https://truffleframework.com/ganache)\n- [Truffle](https://truffleframework.com/)\n- [Geth](https://geth.ethereum.org/)\n",
              "instructor_notes": ""
            },
            {
              "id": 780503,
              "key": "fa03a57e-9939-4674-8488-902fb031a43b",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "fa03a57e-9939-4674-8488-902fb031a43b",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Match each of the following definitions with their correct tools."
                },
                "concepts_label": "Purpose",
                "answers_label": "Tool",
                "concepts": [
                  {
                    "text": "Block explorer used to search Ethereum analytics.",
                    "correct_answer": {
                      "id": "a1541566318816",
                      "text": "Etherscan"
                    }
                  },
                  {
                    "text": "Browser based plug-in that allows you to carry out Ethereum transactions.",
                    "correct_answer": {
                      "id": "a1541566322114",
                      "text": "Metamask"
                    }
                  },
                  {
                    "text": "A browser based IDE that allows you to write Solidity and deploy solidity contracts.",
                    "correct_answer": {
                      "id": "a1541566322730",
                      "text": "Remix"
                    }
                  },
                  {
                    "text": "A collection of libraries that allow you to interact with a local or remote Ethereum node.",
                    "correct_answer": {
                      "id": "a1541566323295",
                      "text": "web3.js"
                    }
                  },
                  {
                    "text": "A development environment, testing framework, and asset pipeline meant to make your life easier as an Ethereum developer",
                    "correct_answer": {
                      "id": "a1541566323897",
                      "text": "Truffle"
                    }
                  },
                  {
                    "text": "Application for launching local Ethereum blockchain instances.",
                    "correct_answer": {
                      "id": "a1541566353596",
                      "text": "Ganache"
                    }
                  },
                  {
                    "text": "Gives you access to the Ethereum network without running your own local node.",
                    "correct_answer": {
                      "id": "a1541566354243",
                      "text": "Infura"
                    }
                  },
                  {
                    "text": "A golang implementation of the Ethereum blockchain used to set up a local full Ethereum node.",
                    "correct_answer": {
                      "id": "a1541566354856",
                      "text": "Geth"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1541566353596",
                    "text": "Ganache"
                  },
                  {
                    "id": "a1541566323897",
                    "text": "Truffle"
                  },
                  {
                    "id": "a1541566354243",
                    "text": "Infura"
                  },
                  {
                    "id": "a1541566323295",
                    "text": "web3.js"
                  },
                  {
                    "id": "a1541566318816",
                    "text": "Etherscan"
                  },
                  {
                    "id": "a1541566322730",
                    "text": "Remix"
                  },
                  {
                    "id": "a1541566354856",
                    "text": "Geth"
                  },
                  {
                    "id": "a1541566322114",
                    "text": "Metamask"
                  }
                ]
              }
            },
            {
              "id": 778894,
              "key": "7783e983-8ec1-4697-ad03-cf3624028bc4",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 2. Ethereum Communities\n___\n\nEthereum has an extremely helpful and vibrant community of developers! \n\nConnecting with this community is a huge part of the Ethereum Blockchain Developer learning experience. Participating in these communities will take you a long way toward becoming a successful Ethereum developer. \n",
              "instructor_notes": ""
            },
            {
              "id": 781932,
              "key": "bd741c11-564c-4a2e-817e-473b28ddd739",
              "title": "5.2-Ethereum-Communities",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "MPWjm1W35LQ",
                "china_cdn_id": "MPWjm1W35LQ.mp4"
              }
            },
            {
              "id": 779847,
              "key": "3928d0d7-0aaf-4400-9fa3-d4a8e22ca31a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "As shown in the video, a great place to find Ethereum communities is on their home page. Go to [Ethereum.org](https://ethereum.org/) and scroll to the bottom of the page.",
              "instructor_notes": ""
            },
            {
              "id": 778786,
              "key": "78c6f03d-3570-4c40-a50f-12e0689723d6",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5bdf5870_screen-shot-2018-11-04-at-12.36.50-pm/screen-shot-2018-11-04-at-12.36.50-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/78c6f03d-3570-4c40-a50f-12e0689723d6",
              "caption": "",
              "alt": "",
              "width": 3104,
              "height": 2024,
              "instructor_notes": null
            },
            {
              "id": 778896,
              "key": "3b5f87fc-0b95-44e2-8078-c7e70e5af0e5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Here's a list of some of the community resources I find useful. Take some time to look through them and join a few of the communities when you get the chance.\n\n* [Github](https://github.com/ethereum)\n* [YouTube](https://www.youtube.com/user/ethereumproject)\n* [Gitter](https://gitter.im/ethereum/home)\n* [Twitter](https://twitter.com/ethereum)\n* [Stack Exchange](https://ethereum.stackexchange.com/)\n* [Reddit](https://www.reddit.com/r/ethereum)\n* [Meetups](https://www.meetup.com/topics/ethereum/)",
              "instructor_notes": ""
            },
            {
              "id": 780448,
              "key": "2a2421fd-2909-4df9-96b2-8f0a31607523",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "2a2421fd-2909-4df9-96b2-8f0a31607523",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of the following Ethereum communities would be great for you to go join right now?",
                "answers": [
                  {
                    "id": "a1541555326784",
                    "text": "Github",
                    "is_correct": true
                  },
                  {
                    "id": "a1541555344648",
                    "text": "YouTube",
                    "is_correct": true
                  },
                  {
                    "id": "a1541555348443",
                    "text": "Gitter",
                    "is_correct": true
                  },
                  {
                    "id": "a1541555351268",
                    "text": "Twitter",
                    "is_correct": true
                  },
                  {
                    "id": "a1541555353661",
                    "text": "Stack Exchange",
                    "is_correct": true
                  },
                  {
                    "id": "a1541555360926",
                    "text": "Reddit",
                    "is_correct": true
                  },
                  {
                    "id": "a1541566464906",
                    "text": "Meetups",
                    "is_correct": true
                  },
                  {
                    "id": "a1541694676325",
                    "text": "All of them! They're all great!",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 778898,
              "key": "286868e0-90f3-4edd-9066-d6078f328ae6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Review\n___\n",
              "instructor_notes": ""
            },
            {
              "id": 782953,
              "key": "5c846088-8ed9-4476-8a88-24a344d58036",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "5c846088-8ed9-4476-8a88-24a344d58036",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "1. Describe the basics of tools you'll work with as you build Ethereum applications.",
                "2. Join the core Ethereum Blockchain Developer communities"
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Track the objectives you've feel you've gained the skills to complete."
            }
          ]
        },
        {
          "id": 778681,
          "key": "613b8191-1895-442a-b2f5-f3399f169a7f",
          "title": "Introduction to DApps",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "613b8191-1895-442a-b2f5-f3399f169a7f",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 778868,
              "key": "7206345e-b071-4fe6-98f2-49144e7a3540",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Create Your First DApp!\n___\n\nDecentralized Applications, known as **DApps**, are the applications you'll be writing that run on the Ethereum Network. \n\nWhile it can take some time to write your first fully functional DApp, it's actually pretty easy to get started. Here we'll introduce you to DApps, deploy your first DApp for yourself, then introduce the structure of a more functional DApp we'll be building in this lesson.\n\n# Objectives\n___\n\n*Our goal is to help you do the following things.*\n\n1. Define DApps and Find existing DApps on the Ethereum Blockchain.\n2. Create and Deploy your first DApp.\n3. Explain the basic structure of a the DApp we'll be building in this lesson.\n",
              "instructor_notes": ""
            },
            {
              "id": 779545,
              "key": "821829d5-e300-4f62-95c7-2873d7b2e95a",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/821829d5-e300-4f62-95c7-2873d7b2e95a",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 778863,
              "key": "d6316d50-05e9-4811-868b-b7dc9e2e6bdb",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 1. Introduction to Dapps\n___\n\nTo start, let's explore DApps more closely and look through resources you can use to explore existing DApps for yourself.",
              "instructor_notes": ""
            },
            {
              "id": 781929,
              "key": "d30b7e47-224b-4e95-85c7-400be1a86d16",
              "title": "4.1-Introduction-To-Dapps",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "ejgnERviwQc",
                "china_cdn_id": "ejgnERviwQc.mp4"
              }
            },
            {
              "id": 778864,
              "key": "dc52ef3a-fb2b-4940-b3a2-250103ebe490",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Dapp Radar\n___\n\nIn the previous video, we explore a site known as [DApp radar](https://dappradar.com/). Try exploring this site for yourself to see if you can find your new favorite DApp. ",
              "instructor_notes": ""
            },
            {
              "id": 778787,
              "key": "faf3c2c8-c6a8-4937-9711-3b9f64eb6237",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5bdf58ca_screen-shot-2018-11-04-at-12.38.21-pm/screen-shot-2018-11-04-at-12.38.21-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/faf3c2c8-c6a8-4937-9711-3b9f64eb6237",
              "caption": "",
              "alt": "",
              "width": 3104,
              "height": 2024,
              "instructor_notes": null
            },
            {
              "id": 784241,
              "key": "e9feb85e-bc2e-4b16-9c83-e18d9c3f0810",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### State of the DApps\n___\nFor finding even more DApps, there is a similar and very well known site named [State of the DApps](https://www.stateofthedapps.com/). Check out this site to browse even more decentralized applications!",
              "instructor_notes": ""
            },
            {
              "id": 784243,
              "key": "64e1441c-85e0-495b-96b2-f757f7166f76",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5bf208a4_screen-shot-2018-11-18-at-4.48.37-pm/screen-shot-2018-11-18-at-4.48.37-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/64e1441c-85e0-495b-96b2-f757f7166f76",
              "caption": "",
              "alt": "",
              "width": 3064,
              "height": 1984,
              "instructor_notes": null
            },
            {
              "id": 780441,
              "key": "d0ac49c5-c02f-496a-b8d7-dcadd920cbfd",
              "title": "DApps verse Apps",
              "semantic_type": "ReflectAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "d0ac49c5-c02f-496a-b8d7-dcadd920cbfd",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "title": null,
                "semantic_type": "TextQuestion",
                "evaluation_id": null,
                "text": "In 3 sentences or less, describe the main difference between decentralized applications and standard applications."
              },
              "answer": {
                "text": "Thank you for your response! DApps run on decentralized networks powered by a network of computers. Standard Applications run on the computation of centralized networks owned by companies.",
                "video": null
              }
            },
            {
              "id": 779516,
              "key": "814fe0c2-b428-4379-9cb8-b5b56a83e5f1",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 2. Write your first DApp!\n___\n\nNow it's time to create your first DApp! In the following video, you'll learn how to write, compile, and deploy your first Decentralized Application.\n",
              "instructor_notes": ""
            },
            {
              "id": 781930,
              "key": "0f52597e-61ff-4d3e-8404-62f246d1df43",
              "title": "4.2-Write-Your-First-Dapp",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Hz8VgfW8p4Y",
                "china_cdn_id": "Hz8VgfW8p4Y.mp4"
              }
            },
            {
              "id": 779843,
              "key": "8f566d37-f069-471e-8af5-fce59ff8e6a0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Resources\n\nIn the previous video, we created and deployed a DApp using the Remix online editor. This tool is an excellent way to get started writing decentralized applications.\n\n> [Remix](https://remix.ethereum.org/#optimize=true&version=soljson-v0.4.24+commit.e67f0147.js)\n\nRemix can also be installed and accessed offline. If that would be valuable for you then you may be interested in the following GitHub page.\n> [Access Remix Offline](https://github.com/ethereum/remix-ide/)",
              "instructor_notes": ""
            },
            {
              "id": 779844,
              "key": "0c8322b1-346c-4ad7-aaa6-098d12aaca88",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Code\n\nHere is the code for the smart contract we deployed in the previous video.",
              "instructor_notes": ""
            },
            {
              "id": 779518,
              "key": "9071a180-cfd2-4910-826d-2705cbb7dff2",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "    pragma solidity ^0.4.24;\n\n    contract Message {\n        string myMessage;\n\n        function setMessage(string x) public {\n            myMessage = x;\n        }\n\n        function getMessage() public view returns (string) {\n            return myMessage;\n        }\n    }",
              "instructor_notes": ""
            },
            {
              "id": 780444,
              "key": "6982a0be-8662-4a67-aa6b-f8611e7fcae4",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "6982a0be-8662-4a67-aa6b-f8611e7fcae4",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "You just deployed your first DApp. More specifically you actually deployed a smart contract. What types of tasks are left for you to be able to create a full decentralized application on Ethereum?",
                "answers": [
                  {
                    "id": "a1541554476826",
                    "text": "Connect to an Ethereum blockchain",
                    "is_correct": true
                  },
                  {
                    "id": "a1541554554360",
                    "text": "Create a front end that users can interact with",
                    "is_correct": true
                  },
                  {
                    "id": "a1541554582104",
                    "text": "Allow users to use their Ethereum accounts with your DApp",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 779535,
              "key": "4205da82-4d01-4a2d-91ec-b9b7c25d093c",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/4205da82-4d01-4a2d-91ec-b9b7c25d093c",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 778865,
              "key": "87a0d866-20bc-4af6-8017-c6e9d59b1f39",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 3. DApp Stack\n___\n\nDeveloping DApps requires a new set of skills you'll learn throughout the upcoming lessons. To get you up and running effectively, we're going to take a step back from smart contracts, and turn our focus back to the Ethereum ecosystem. \n\nThe goal in this  lesson is to create a type of **full stack decentralized application** that users can interact with. Soon, you'll be building these applications for yourself. In the the following video, we'll explore how we plan to build our applications throughout each lesson.",
              "instructor_notes": ""
            },
            {
              "id": 783180,
              "key": "2d20200a-973f-4d42-8bcb-c1de35b794c0",
              "title": "Dapp-Overview-Replacement",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "KNrOBs4NK6E",
                "china_cdn_id": "KNrOBs4NK6E.mp4"
              }
            },
            {
              "id": 780446,
              "key": "ff937fc9-a7e5-46c4-a04e-5bf8391498ae",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "ff937fc9-a7e5-46c4-a04e-5bf8391498ae",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Match each tool below to the functionality it will provide for your first DApp"
                },
                "concepts_label": "Stack Layer",
                "answers_label": "Purpose",
                "concepts": [
                  {
                    "text": "Local Ethereum Blockchain",
                    "correct_answer": {
                      "id": "a1541554784860",
                      "text": "Back end data storage"
                    }
                  },
                  {
                    "text": "Web3",
                    "correct_answer": {
                      "id": "a1541554855977",
                      "text": "Javascript Ethereum API"
                    }
                  },
                  {
                    "text": "Metamask",
                    "correct_answer": {
                      "id": "a1541554862292",
                      "text": "Web3 provider "
                    }
                  },
                  {
                    "text": "Remix",
                    "correct_answer": {
                      "id": "a1541554875394",
                      "text": "In browser IDE"
                    }
                  },
                  {
                    "text": "Node.js",
                    "correct_answer": {
                      "id": "a1541554881775",
                      "text": "Javascript runtime environment"
                    }
                  },
                  {
                    "text": "Smart contract",
                    "correct_answer": {
                      "id": "a1541554919327",
                      "text": "Code executed on the EVM"
                    }
                  },
                  {
                    "text": "JS/HTML/CSS",
                    "correct_answer": {
                      "id": "a1541554940255",
                      "text": "Website front end"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1541554855977",
                    "text": "Javascript Ethereum API"
                  },
                  {
                    "id": "a1541554940255",
                    "text": "Website front end"
                  },
                  {
                    "id": "a1541554784860",
                    "text": "Back end data storage"
                  },
                  {
                    "id": "a1541554862292",
                    "text": "Web3 provider "
                  },
                  {
                    "id": "a1541554875394",
                    "text": "In browser IDE"
                  },
                  {
                    "id": "a1541554881775",
                    "text": "Javascript runtime environment"
                  },
                  {
                    "id": "a1541554919327",
                    "text": "Code executed on the EVM"
                  }
                ]
              }
            },
            {
              "id": 779536,
              "key": "b5ad5eb5-b26f-44c2-987b-484036aed8d5",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/b5ad5eb5-b26f-44c2-987b-484036aed8d5",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 778866,
              "key": "739413da-3ecf-4f93-a58f-2753d4050f35",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Review\n___\n\nHere you were introduced  to the world of DApps and got up and running with a small DApp of your own. \n\n",
              "instructor_notes": ""
            },
            {
              "id": 782954,
              "key": "466e535a-5b91-4fdf-9c62-fb42b20c41dc",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "466e535a-5b91-4fdf-9c62-fb42b20c41dc",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "1. Define DApps and Find existing DApps on the Ethereum Blockchain.",
                "2. Create and Deploy your first DApp.",
                "3. Explain the basic structure of a the DApp we'll be building in this lesson."
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Track the objectives you've feel you've gained the skills to complete."
            }
          ]
        },
        {
          "id": 778680,
          "key": "79d428aa-7702-47d8-817c-42cd87b93567",
          "title": "Scan the Ethereum Network",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "79d428aa-7702-47d8-817c-42cd87b93567",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 778900,
              "key": "16f44a02-44b9-4cfd-91ad-ef85ebc3d8fd",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Scan the Ethereum Network\n___\n\nIt's time to get your first look at the Ethereum network!\n\nTo do this, you'll use one of the tools that was introduced in the previous concept, [Etherscan](https://etherscan.io/). We'll use this tool to help explain the existing Ethereum networks, search for accounts, and find transactions on the main network.\n\n# Objectives\n___\n\n*Our goal is to help you do the following things.*\n\n1. Explore and describe the different Ethereum networks using Etherscan.\n2. Find large accounts on the main network and explore the details of their transactions.\n3. Find existing smart contracts that have been deployed to the Ethereum Network.",
              "instructor_notes": ""
            },
            {
              "id": 779547,
              "key": "00d97181-af45-4b79-85e3-3254ca97016c",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/00d97181-af45-4b79-85e3-3254ca97016c",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 778902,
              "key": "f6321b86-957c-454d-b3b3-7bcfd20751f6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 1-3. Explore Ethereum Networks Using Etherscan\n___\n\nTo follow along with the upcoming video, go to [etherscan.io](https://etherscan.io/). On this site, you'll walk navigate data across different Ethereum blockchain networks. All of objectives 1-3 are covered in the following video.",
              "instructor_notes": ""
            },
            {
              "id": 781933,
              "key": "0e21492c-54e0-467c-a373-a66f85f7a523",
              "title": "6.1-3-Explore-Ethereum-Networks-Using-Etherscan",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "NzJl9GntdnQ",
                "china_cdn_id": "NzJl9GntdnQ.mp4"
              }
            },
            {
              "id": 780451,
              "key": "7cc2c2b3-57bf-4f8e-a28e-82deacadae47",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 1. Ethereum Networks\n___",
              "instructor_notes": ""
            },
            {
              "id": 780452,
              "key": "7e9c9203-6fb9-4538-ac6f-679a5b76a6eb",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "7e9c9203-6fb9-4538-ac6f-679a5b76a6eb",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which Ethereum networks can you explore using Etherscan?",
                "answers": [
                  {
                    "id": "a1541555798954",
                    "text": "Ethereum Main Network",
                    "is_correct": true
                  },
                  {
                    "id": "a1541555841968",
                    "text": "Ropsten Test Network",
                    "is_correct": true
                  },
                  {
                    "id": "a1541555852462",
                    "text": "Local Ethereum Network",
                    "is_correct": false
                  },
                  {
                    "id": "a1541555861762",
                    "text": "Rinkeby Test Network",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 780454,
              "key": "e375ace6-5510-4993-8c49-d1c7a861c164",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 2. Ethereum Accounts\n___",
              "instructor_notes": ""
            },
            {
              "id": 780450,
              "key": "5643bfac-c623-4046-880e-993a1ed29846",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "5643bfac-c623-4046-880e-993a1ed29846",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of the following can't be seen from the overview of an account on Etherscan?",
                "answers": [
                  {
                    "id": "a1541555518958",
                    "text": "Balance",
                    "is_correct": false
                  },
                  {
                    "id": "a1541555571954",
                    "text": "Ether value",
                    "is_correct": false
                  },
                  {
                    "id": "a1541555577840",
                    "text": "Transactions",
                    "is_correct": false
                  },
                  {
                    "id": "a1541555581772",
                    "text": "Address Watch",
                    "is_correct": false
                  },
                  {
                    "id": "a1541555586565",
                    "text": "Token Balance",
                    "is_correct": false
                  },
                  {
                    "id": "a1541555593289",
                    "text": "Gas Cost",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 780457,
              "key": "2c29a249-97b0-49a3-a55e-02f7bb6d22c3",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 3. Ethereum Contracts\n___\n\n",
              "instructor_notes": ""
            },
            {
              "id": 780461,
              "key": "bd7ad307-1d02-4c0d-8086-4bfb1ff9328f",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "bd7ad307-1d02-4c0d-8086-4bfb1ff9328f",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of the following can be seen in the overview of a contract account on Etherscan?",
                "answers": [
                  {
                    "id": "a1541556038159",
                    "text": "Balance",
                    "is_correct": true
                  },
                  {
                    "id": "a1541556048561",
                    "text": "Ether Value",
                    "is_correct": true
                  },
                  {
                    "id": "a1541556055415",
                    "text": "Transactions",
                    "is_correct": true
                  },
                  {
                    "id": "a1541556060492",
                    "text": "Contract Code",
                    "is_correct": true
                  },
                  {
                    "id": "a1541556063193",
                    "text": "Address Watch",
                    "is_correct": true
                  },
                  {
                    "id": "a1541556066766",
                    "text": "Contract Creator",
                    "is_correct": true
                  },
                  {
                    "id": "a1541556071991",
                    "text": "Token Tracker",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 779549,
              "key": "d27ab4f4-54ef-4bf1-be88-f165fd5217c3",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/d27ab4f4-54ef-4bf1-be88-f165fd5217c3",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 778914,
              "key": "1f46562c-2b35-4d53-a338-a71699ad317c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Review\n___\n\nHere you explored the Ethereum networks using Etherscan. The data int this site will soon be available inside your programs as you learn even more about how to interact with the Ethereum blockchain.\n",
              "instructor_notes": ""
            },
            {
              "id": 782956,
              "key": "bc121edd-7863-4961-9cff-08b41f0cc732",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "bc121edd-7863-4961-9cff-08b41f0cc732",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "1. Explore and describe the different Ethereum networks using Etherscan.",
                "2. Find large accounts on the main network and explore the details of their transactions.",
                "3. Find existing smart contracts that have been deployed to the Ethereum Network."
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Track the objectives you've feel you've gained the skills to complete."
            }
          ]
        },
        {
          "id": 778747,
          "key": "f7a200ef-a531-4e75-a18b-d62bd427acdb",
          "title": "Deploy to the Test Network",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f7a200ef-a531-4e75-a18b-d62bd427acdb",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 778917,
              "key": "b9cbfca5-d633-4ef9-863c-330b280641fe",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Deploy to the Test Network\n___\n\nTo build and interact with decentralized applications you'll need  a tool known as Metamask. Metamask provides the connection between DApps and the Ethereum blockchain. \n\nHere we'll get you up and running with Metamask. Using this you'll deploy your DApp to the Ethereum Test Network. This will allow you to look up it's contract and transaction details using Etherscan.\n\n# Objectives\n___\n\n*Our goal is to help you do the following things.*\n\n1. Describe the importance of Metamask as a tool for Ethereum applications.\n2. Install and navigate Metamask\n3.  Use a public faucet to get your first test Ethereum into your account.\n4. Deploy a contract to the Ethereum Test Network and investigate it's transactions using Etherscan.",
              "instructor_notes": ""
            },
            {
              "id": 779551,
              "key": "7a8885b9-f520-4422-a3fd-46d74fd03f4a",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/7a8885b9-f520-4422-a3fd-46d74fd03f4a",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 778921,
              "key": "54e7c24a-2c2f-40a9-9851-fe2f9e9b40f9",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 1. Metamask Introduction\n___\n\nMetamask is an extension to the chrome and brave browsers. It allows you to interact with Ethereum applications. Understanding this tool is an extremely important part of becoming a blockchain developer. \n\nThe following video does an excellent job introducing Metamask. It was made by the creators of this tool and can also be found on their home page [metamask.io](https://metamask.io/) or on [YouTube](https://www.youtube.com/watch?v=6Gf_kRE4MJU).",
              "instructor_notes": ""
            },
            {
              "id": 778750,
              "key": "6a61c2f6-0cd6-4e15-a3b4-a00b33036d59",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/6Gf_kRE4MJU\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
              "instructor_notes": ""
            },
            {
              "id": 780505,
              "key": "5b68546d-effb-4247-85ce-bfc9ddbdf9fe",
              "title": "Reflect",
              "semantic_type": "ReflectAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "5b68546d-effb-4247-85ce-bfc9ddbdf9fe",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "title": null,
                "semantic_type": "TextQuestion",
                "evaluation_id": null,
                "text": "In 3 sentences or less, describe the main value that Metamask provides you as an Ethereum developer."
              },
              "answer": {
                "text": "Thanks for your answer! Many answers are correct, but here's my version. Metamask is a great tool for getting started with the blockchain. It provides a bridge into the Ethereum ecosystem that you can use to quickly get started with existing applications on the Ethereum network. It also provides this same functionality to users that will want to interact with the DApps that you create.",
                "video": null
              }
            },
            {
              "id": 778919,
              "key": "416e50c6-f587-4930-97b4-6a7db2907838",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 2. Install Metamask \n___\n\nTo interact with existing blockchain applications or build your own, you'll need to install the Metamask browser extension. Go to [Metamask.io](https://metamask.io/) to learn more and install it on your browser. ",
              "instructor_notes": ""
            },
            {
              "id": 778749,
              "key": "8792b2ab-9e13-4603-b005-1163e9050460",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5bdf436b_screen-shot-2018-11-02-at-8.21.31-pm/screen-shot-2018-11-02-at-8.21.31-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/8792b2ab-9e13-4603-b005-1163e9050460",
              "caption": "",
              "alt": "",
              "width": 3104,
              "height": 2016,
              "instructor_notes": null
            },
            {
              "id": 780506,
              "key": "d71b985f-cd4a-4f48-ab60-686b0ac32792",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "d71b985f-cd4a-4f48-ab60-686b0ac32792",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Install the Metamask extension for your browser."
              ],
              "positive_feedback": "Great! We'll be using this tool throughout many of the upcoming lessons. Try accessing some existing DApps with the functionality this tool provides.",
              "video_feedback": null,
              "description": "Install Metamask"
            },
            {
              "id": 779554,
              "key": "6044ba5b-7c26-4845-b0d4-fd595b029635",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/6044ba5b-7c26-4845-b0d4-fd595b029635",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 778922,
              "key": "737581bf-1960-473b-af87-b243a12692a9",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 3. Get Testnet Coins\n___\n\nNow that you've installed Metamask, it's time to get your first Ether! In the following video, \n\nTo do this, PK will walk you through a few more details to help get you started with Metamask. He'll also show you  a couple ways you can get your first test ether.  From there you'll be ready to use this ether as you will begin to use these these as you start to develop and test your Ethereum applications.",
              "instructor_notes": ""
            },
            {
              "id": 778748,
              "key": "b655b3e1-3eec-41c7-8133-c269b0258811",
              "title": "Network Types & Funding Wallets Using Faucets",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Fa-yr0PypPU",
                "china_cdn_id": "Fa-yr0PypPU.mp4"
              }
            },
            {
              "id": 780507,
              "key": "ccbc947c-7802-43ff-a001-bebb9c965550",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "> **Note:** Near the end of the previous video, PK uses the Ethereum wallet to make transactions. You don't yet have this and we don't cover it until the end of lesson 2. We won't be using it until then but feel free to jump to that section if you're excited to get started with your own Ethereum wallet.",
              "instructor_notes": ""
            },
            {
              "id": 780508,
              "key": "06de4ade-d622-402e-a0ed-aafba73d0914",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "06de4ade-d622-402e-a0ed-aafba73d0914",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Get some Ethereum testnet coins."
              ],
              "positive_feedback": "Awesome! You now have your first ether. Welcome to the Ethereum network :)",
              "video_feedback": null,
              "description": "Try getting some ether to your account by following the steps PK shows throughout the previous video."
            },
            {
              "id": 779555,
              "key": "728a37ad-cee5-4128-8e37-77e6ff22836f",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/728a37ad-cee5-4128-8e37-77e6ff22836f",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 782244,
              "key": "1260052d-15e2-4b12-aa45-bcfdd41045a2",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 4. Deploy to the Ethereum Test Network\n___\n",
              "instructor_notes": ""
            },
            {
              "id": 782657,
              "key": "ac7177b9-75d4-4e90-8274-222ca4361e3b",
              "title": "Remix-To-Test-Network",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "vOghpu1v_g0",
                "china_cdn_id": "vOghpu1v_g0.mp4"
              }
            },
            {
              "id": 778923,
              "key": "94d416bc-7bb6-4e9a-8ea6-9d78bc4d7aa3",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Review\n___\n\nHere you learned about Metamask, an important tool in the Ethereum developer ecosystem. Using this tool, you got some test ether into you account and deployed a contract to the Ethereum test network.\n",
              "instructor_notes": ""
            },
            {
              "id": 782970,
              "key": "187d9bd2-23da-4cb3-b014-cefb6e288de0",
              "title": "Skill Trakcer",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "187d9bd2-23da-4cb3-b014-cefb6e288de0",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "1. Describe the importance of Metamask as a tool for Ethereum applications.",
                "2. Install and navigate Metamask",
                "3. Use a public faucet to get your first test Ethereum into your account.",
                "4. Deploy a contract to the Ethereum Test Network and investigate it's transactions using Etherscan."
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Track the objectives you've feel you've gained the skills to complete."
            }
          ]
        },
        {
          "id": 778685,
          "key": "2d2042ca-c190-49c9-a1a4-032d42fda0ed",
          "title": "Prepare to Connect to the Network",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "2d2042ca-c190-49c9-a1a4-032d42fda0ed",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 778929,
              "key": "a9f3f952-cb88-411a-8b74-65b51ad90ccf",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Prepare to Connect to the Ethereum Network\n___\n\nHere you'll prepare to connect to the Ethereum network. \n\nTo do this, you'll learn about a tool known as web3.js. This tool is a set of libraries supporting the Ethereum Javascript API. You'll use this tool anytime you want to read or write data to the Ethereum blockchain. \n\n## Objectives\n___\n\n*Our goal is to help you do the following things.*\n\n1. Explain why web3 is important and explain how it is used to interact with the blockchain.\n2. Install and run web3 from your terminal\n3. Search the web3 documentation to explore its basic commands\n\n\n",
              "instructor_notes": ""
            },
            {
              "id": 779556,
              "key": "8594ca97-9ea7-483b-ad8f-3585bf7792b2",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/8594ca97-9ea7-483b-ad8f-3585bf7792b2",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779856,
              "key": "270c48d1-fdea-4225-ab52-558c3bd46bb0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 1. Overview of web3.js\n___",
              "instructor_notes": ""
            },
            {
              "id": 781934,
              "key": "7c925300-e5d8-43ae-b918-18c7659ed283",
              "title": "8.1-Overview-Of-Web3-Js",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "j81fO4sqXNw",
                "china_cdn_id": "j81fO4sqXNw.mp4"
              }
            },
            {
              "id": 780672,
              "key": "1f58dd2d-2b35-4c29-8ceb-0c460364669f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Resources\n___\n\nHere are some valuable resoures you can use to get introduced to web3.js.\n\n* [web3.js docs](https://web3js.readthedocs.io)\n\n* [web3.js GitHub](https://github.com/ethereum/web3.js/)\n\n* [Community Forum](https://forum.ethereum.org/categories/ethereum-js)\n* [Getting Started](https://github.com/ethereum/wiki/wiki/JavaScript-API#getting-started)\n",
              "instructor_notes": ""
            },
            {
              "id": 780509,
              "key": "769ee9ea-a937-440e-80d5-e8e4b3e4738c",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "769ee9ea-a937-440e-80d5-e8e4b3e4738c",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What is the main purpose of web3.js?",
                "answers": [
                  {
                    "id": "a1541567171289",
                    "text": "Create a local Ethereum blockchain",
                    "is_correct": false
                  },
                  {
                    "id": "a1541567188840",
                    "text": "Interact with data on the Ethereum network",
                    "is_correct": true
                  },
                  {
                    "id": "a1541567220916",
                    "text": "Allow you to easily deploy smart contracts",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 779560,
              "key": "c3601d57-ffff-4336-86a7-586e7ef7730e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 2. Get Started with web3.js\n___\n\nNow that you are more familiar with web3, we'll get you up and running with it in your local environment. From there we'll go over a few basic details about getting started.",
              "instructor_notes": ""
            },
            {
              "id": 781935,
              "key": "b9d3f31d-2d3d-4383-9d53-90a4b53215cc",
              "title": "8.2-Get-Started-With-Web3-Js",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "IuODykLkuUg",
                "china_cdn_id": "IuODykLkuUg.mp4"
              }
            },
            {
              "id": 779860,
              "key": "b00c3a0f-260c-407b-be27-5ad3f93d1e3a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "> **Note:** Commands and details from the video can be found below.",
              "instructor_notes": ""
            },
            {
              "id": 778933,
              "key": "9b5a68fd-5568-41b4-a049-0ddd4bfa37d6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Install and run web3\n___\n\nInstallation instructions for web3 can be found [here](https://www.npmjs.com/package/web3). It can be installed by running the following command in your terminal.\n\n    npm install web3\n\nOnce installed, you'll be ready to follow the steps listed below.\n",
              "instructor_notes": ""
            },
            {
              "id": 780510,
              "key": "962e41d9-6a4a-405a-82a7-8366020b08a9",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "962e41d9-6a4a-405a-82a7-8366020b08a9",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "**Step 1**: Open your terminal, make a directory, and cd into it.",
                "**Step 2:** Initialize node to create a package.json file",
                "**Step 3:** Install web3 and save it as a dependency to package.json",
                "**Step 4:** Open node from your terminal window.",
                "**Step 5:** Require web3 as Web3 variable.",
                "**Step 6:** Read the Web3 variable."
              ],
              "positive_feedback": "Great job completing these tasks! You're now up and running with your connection to the Ethereum blockchain.",
              "video_feedback": null,
              "description": "You can use this checklist to keep track of your progress on the steps listed below."
            },
            {
              "id": 778934,
              "key": "e1e9f70f-14fb-4f0c-874c-cf70d9faabd4",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### **Step 1:** Open your terminal, make a directory, and cd into it.\n___\n\n    mkdir projectFolder <----don't name this folder web3\n    cd projectFolder\n\n#### **Step 2:** Initialize node to create a package.json file (choose defaults)\n___\n\n    npm init\n\n#### **Step 3:** Install web3 and save it as a dependency to package.json\n___\n    \n    npm install web3 --save\n\n#### **Step 4:** Open node from your terminal window.\n___\n\n    node\n\n#### **Step 5:** Require web3 as Web3 variable. \n___\n\n    var Web3 = require('web3')\n\n#### **Step 6:** Read the Web3 variable.\n___\n\n    Web3\n",
              "instructor_notes": ""
            },
            {
              "id": 779600,
              "key": "566e038a-7111-4211-8282-35f0ca907742",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/566e038a-7111-4211-8282-35f0ca907742",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779850,
              "key": "b4d170c4-fc5a-49dc-8f73-e1e7d27fa492",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 3. web3.js Documentation\n___\n\nAn important part of getting started with any new tool is to run through it's documentation. Read through some of the commands that are available to you using the terminal and documentation to get more familiar with this tool.\n\n* [web3.js Documentation](https://web3js.readthedocs.io/en/1.0)\n\nWe'll continue using this tool throughout the rest of this lesson. You can follow along with us and use the documentation to help try interesting new ideas we might not cover in the lesson.",
              "instructor_notes": ""
            },
            {
              "id": 779852,
              "key": "c74fa424-ab10-478b-aa1b-a8c3b3269394",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5be132da_screen-shot-2018-11-05-at-10.20.58-pm/screen-shot-2018-11-05-at-10.20.58-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/c74fa424-ab10-478b-aa1b-a8c3b3269394",
              "caption": "",
              "alt": "",
              "width": 3064,
              "height": 1976,
              "instructor_notes": null
            },
            {
              "id": 780511,
              "key": "cd22339f-4d55-4f36-a3ae-162d48b1fbae",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "cd22339f-4d55-4f36-a3ae-162d48b1fbae",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Use the web3 documentation to help match the following definitions with the commands that accomplish them."
                },
                "concepts_label": "Purpose",
                "answers_label": "Library",
                "concepts": [
                  {
                    "text": "The main class of anything related Ethereum.",
                    "correct_answer": {
                      "id": "a1541567489199",
                      "text": "Web3"
                    }
                  },
                  {
                    "text": "Allows you to interact with an Ethereum blockchain and Ethereum smart contracts.",
                    "correct_answer": {
                      "id": "a1541567556418",
                      "text": "web3.eth"
                    }
                  },
                  {
                    "text": "Contains functions to generate Ethereum accounts and sign transactions and data.",
                    "correct_answer": {
                      "id": "a1541567586940",
                      "text": "web3.eth.accounts"
                    }
                  },
                  {
                    "text": "Allows you to interact with the Ethereum node’s accounts",
                    "correct_answer": {
                      "id": "a1541567605468",
                      "text": "web3.eth.personal"
                    }
                  },
                  {
                    "text": "Provides utility functions for Ethereum dapps and other web3.js packages",
                    "correct_answer": {
                      "id": "a1541567612588",
                      "text": "web3.utils"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1541567605468",
                    "text": "web3.eth.personal"
                  },
                  {
                    "id": "a1541567489199",
                    "text": "Web3"
                  },
                  {
                    "id": "a1541567556418",
                    "text": "web3.eth"
                  },
                  {
                    "id": "a1541567586940",
                    "text": "web3.eth.accounts"
                  },
                  {
                    "id": "a1541567612588",
                    "text": "web3.utils"
                  }
                ]
              }
            },
            {
              "id": 778946,
              "key": "4374908f-82ce-41c6-a438-fcd9abf4ea3f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Review\n___\n\nHere you learned about Web3, a tool used to programmatically interact with the Ethereum blockchain. At this point you should be able to do the following things.",
              "instructor_notes": ""
            },
            {
              "id": 782971,
              "key": "4296eacb-0c63-4cff-98fc-ad2815bbd5c1",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "4296eacb-0c63-4cff-98fc-ad2815bbd5c1",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "1. Explain why web3 is important and explain how it is used to interact with the blockchain.",
                "2. Install and run web3 from your terminal",
                "3. Search the web3 documentation to explore its basic commands"
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Track the objectives you've feel you've gained the skills to complete."
            }
          ]
        },
        {
          "id": 778686,
          "key": "cf2f9528-56c5-45b0-ae06-bc98f4a5d501",
          "title": "Connect to the Ethereum Network",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "cf2f9528-56c5-45b0-ae06-bc98f4a5d501",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 778958,
              "key": "c8ea9cf0-0636-416c-bbdd-774e1232a507",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Connect to the Ethereum Network\n___\n\nHere you'll make your connection to the Ethereum main network. Using this connection, you'll be able to run basic commands to search the network from your command line.\n\nThis will be done using a tool known as Infura. By connecting web3 to Infura, you will be able to access the Ethereum main and test networks using the Infura API.\n\n## Objectives\n___ \n\n*Our goal is to help you do the following things.*\n\n\n1. Define the importance of Infura and describe how it helps you develop DApps.\n2. Create an Infura account\n3. Establish a connection between web3 and an Ethereum network.\n4. Use your web3-infura connection to run basic commands that search the Ethereum network.\n\n",
              "instructor_notes": ""
            },
            {
              "id": 779861,
              "key": "f4975e99-6f5f-4172-aa1b-2082d3e690af",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/f4975e99-6f5f-4172-aa1b-2082d3e690af",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779864,
              "key": "abe5244b-6436-49c0-9c23-08601652309f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 1. Introduction to Infura\n___\n\nIn the following video I'll go over why Infura was created and the value it brings to your future blockchain applications.\n",
              "instructor_notes": ""
            },
            {
              "id": 781936,
              "key": "ee6373a3-4eef-4eba-8c55-861d75c2b0f7",
              "title": "9.1-Introduction-To-Infura",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "F5IyZG1uwoo",
                "china_cdn_id": "F5IyZG1uwoo.mp4"
              }
            },
            {
              "id": 780512,
              "key": "e98c4778-8eec-4cf1-95c2-d90e8f872846",
              "title": "Reflect",
              "semantic_type": "ReflectAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "e98c4778-8eec-4cf1-95c2-d90e8f872846",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "title": null,
                "semantic_type": "TextQuestion",
                "evaluation_id": null,
                "text": "In 3 sentences or less, describe the main benefits of using Infura."
              },
              "answer": {
                "text": "Infura allows you to connect to the Ethereum blockchain without running a full node. It's a lightweight alternative to downloading the entire blockchain to your local device. It makes the connection that allows you to use the functionality provided by web3.",
                "video": null
              }
            },
            {
              "id": 779564,
              "key": "070c5d1b-8c59-48e6-b5e0-7a6d979bb1a1",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/070c5d1b-8c59-48e6-b5e0-7a6d979bb1a1",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 778968,
              "key": "db4400d5-d1ab-43a5-b1fb-e1142fa8fd62",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 2. Up and Running with Infura\n___\n\nNow that you understand why infura such a useful tool, you can create an account to access the Ethereum network. To create an infura account, go to [infura.io](https://infura.io/dashboard). \n\nFrom there you can navigate to your dashboard and find the endpoints required to establish a connection to the blockchain. Below is a look at the Infura dashboard. If you can see this, you're all set!",
              "instructor_notes": ""
            },
            {
              "id": 782764,
              "key": "f741a5c5-77ea-4d80-93b3-9f6388e81127",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5be9cda1_screen-shot-2018-11-12-at-10.59.38-am/screen-shot-2018-11-12-at-10.59.38-am.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/f741a5c5-77ea-4d80-93b3-9f6388e81127",
              "caption": "",
              "alt": "",
              "width": 3104,
              "height": 2016,
              "instructor_notes": null
            },
            {
              "id": 780514,
              "key": "29afd53b-53d6-4954-921b-4054f1712870",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "29afd53b-53d6-4954-921b-4054f1712870",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which endpoints are available for you to connect to from the Infura dashboard?",
                "answers": [
                  {
                    "id": "a1541567913378",
                    "text": "Mainnet",
                    "is_correct": true
                  },
                  {
                    "id": "a1541567936535",
                    "text": "Ropsten",
                    "is_correct": true
                  },
                  {
                    "id": "a1541567939066",
                    "text": "Kovan",
                    "is_correct": true
                  },
                  {
                    "id": "a1541567940840",
                    "text": "Rinkeby",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 779568,
              "key": "964057c1-0f52-4292-a4f7-e5d6186143ff",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/964057c1-0f52-4292-a4f7-e5d6186143ff",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 778972,
              "key": "35144cb5-2057-4b32-a644-0a8d7a484bd9",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 3. Connect web3 with Infura\n___\n\nHaving set up both web3 and Infura, you're now ready to make your connection to the blockchain. In the next video, well quickly go over how to set up this connection.\n",
              "instructor_notes": ""
            },
            {
              "id": 781937,
              "key": "3ac00f7d-d09d-49c3-99b6-414f31291f56",
              "title": "9.3-Connect-Web3-To-Infura",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "WMqyUYt6C0w",
                "china_cdn_id": "WMqyUYt6C0w.mp4"
              }
            },
            {
              "id": 782763,
              "key": "01afc4ce-f18d-435e-8457-15dcd97edd00",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Connect to Infura text overview\n\n*Written below are the details outlined in the previous video.*",
              "instructor_notes": ""
            },
            {
              "id": 780515,
              "key": "af044618-a763-4dfa-bb0d-aded73171235",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "af044618-a763-4dfa-bb0d-aded73171235",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "**Step 1:** Choose a network from the list of endpoints in the Infura dashboard.",
                "**Step 2:** In your node terminal, set a variable url to a string containing this endpoint url.",
                "**Step 3:** Set a variable web3 = to a new instance of Web3 connected to the url.",
                "**Step 4:** Call this new web3 variable"
              ],
              "positive_feedback": "Great job! You're now connected to the Ethereum blockchain from your terminal.",
              "video_feedback": null,
              "description": "You can use this checklist to keep track of your progress on the steps written below."
            },
            {
              "id": 778992,
              "key": "91081b44-2fc2-42ca-b903-ca6417e6acdb",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### **Step 1:** Choose a network from the list of endpoints in the Infura dashboard.\n___",
              "instructor_notes": ""
            },
            {
              "id": 778973,
              "key": "02a481cb-55bc-490c-94c2-9c0750034fa1",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5bdfb06a_screen-shot-2018-11-04-at-6.52.10-pm/screen-shot-2018-11-04-at-6.52.10-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/02a481cb-55bc-490c-94c2-9c0750034fa1",
              "caption": "",
              "alt": "",
              "width": 400,
              "height": 238,
              "instructor_notes": null
            },
            {
              "id": 778983,
              "key": "e2d8cb9b-0f2a-4aee-ab1f-db75c574a29c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### **Step 2:** Set a variable url to a string containing this endpoint url.\n___\n\n    var url = 'YOUR ENDPOINT URL HERE'\n\n\n#### **Step 3:** Set a variable web3 = to a new instance of Web3 connected to the url.\n___\n\n    var web3 = new Web3(url)\n\n#### **Step 4:** Call this new web3 variable \n___\n\n    web3",
              "instructor_notes": ""
            },
            {
              "id": 778988,
              "key": "97005f43-61ed-4c49-81c6-40555a346f6c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "You are now connected to the Ethereum network.",
              "instructor_notes": ""
            },
            {
              "id": 779569,
              "key": "9daa3649-d0f5-4347-a905-017584d0d728",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/9daa3649-d0f5-4347-a905-017584d0d728",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779867,
              "key": "b288771d-7816-49cb-81f1-6e862ef1f51e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 4. Read an Ethereum Account\n___\n\nNow that you have a connection, you're able to run any of the web3 commands shown throughout the documentation. In the next video, I'll help get you started by showing you how to read account information using web3.",
              "instructor_notes": ""
            },
            {
              "id": 781939,
              "key": "c2a83387-4e99-4fc8-817e-3ad017e2a2d0",
              "title": "9.4-Read-An-Ethereum-Account",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "BKnBxASuSHI",
                "china_cdn_id": "BKnBxASuSHI.mp4"
              }
            },
            {
              "id": 780516,
              "key": "5ba37542-9d3c-44a0-9898-a3e88bec3552",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "5ba37542-9d3c-44a0-9898-a3e88bec3552",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "**Step 1:** Choose a transaction from Etherscan and select the account that submitted that transaction.",
                "**Step 2:** Set a variable equal to a string of the address you chose.",
                "**Step 3:** Use web3 to read the balance of this account and set it to the variable balance.",
                "**Step 4:** Read the variable balance to the terminal"
              ],
              "positive_feedback": "Great job! You're now reading data directly from the Ethereum blockchain.",
              "video_feedback": null,
              "description": "You can use this checklist to keep track of your progress on the steps listed above."
            },
            {
              "id": 778996,
              "key": "48b033db-953b-4825-af85-13799604a8db",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### **Step 1: ** Navigate to [etherscan.io](etherscan.io) \n___\n\nChoose a transaction. Next, choose the sender or receiver of that transaction. We can use this address as an example to search using web3.\n\nExample address: **'0x8E21D1CE02fD6Cec455Da473b9D969424bAa9678'**\n\n\n",
              "instructor_notes": ""
            },
            {
              "id": 778997,
              "key": "cbb4349b-10e7-473e-9bdc-2661222af37b",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5bdfb284_screen-shot-2018-11-04-at-6.59.08-pm/screen-shot-2018-11-04-at-6.59.08-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/cbb4349b-10e7-473e-9bdc-2661222af37b",
              "caption": "",
              "alt": "",
              "width": 3064,
              "height": 1976,
              "instructor_notes": null
            },
            {
              "id": 778998,
              "key": "cda5e9a7-d62b-4cf6-8cb8-4a74fd7f8b11",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### **Step 2:** Set a variable equal to a string of the address you chose.\n___\n\n    var address = '0x8E21D1CE02fD6Cec455Da473b9D969424bAa9678'\n\n#### **Step 3:** Use web3 to read the balance of this account and set it to the variable **balance.**\n___\n\n    web3.eth.getBalance(address, (err, bal) => { balance = bal })\n\nVisit the documentation for more information on [web3.eth.getBalance](https://web3js.readthedocs.io/en/1.0/web3-eth.html#getbalance).\n\n\n#### **Step 4:** Read the variable balance to the terminal\n___\n\n    balance\n\n\nIf done successfully, you should have a balance for this account read to your terminal as shown below.",
              "instructor_notes": ""
            },
            {
              "id": 778999,
              "key": "0965db52-3740-46b5-882c-383098f6153e",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5bdfb402_screen-shot-2018-11-04-at-7.07.01-pm/screen-shot-2018-11-04-at-7.07.01-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/0965db52-3740-46b5-882c-383098f6153e",
              "caption": "",
              "alt": "",
              "width": 1980,
              "height": 1292,
              "instructor_notes": null
            },
            {
              "id": 779003,
              "key": "13a4d4c1-d842-4e75-8b58-1937e47c4320",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Now that you've established your connection, feel free to read through the [web3](https://web3js.readthedocs.io/en/1.0/index.html) to experiment with more terminal commands. We'll continue walking through more of these commands as we learn more about the Ethereum blockchain in future concepts.",
              "instructor_notes": ""
            },
            {
              "id": 780517,
              "key": "bae19788-c8dd-4b65-bcee-a77eb6f4c145",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Exercise\n___\n\nEarlier in the lesson, you received your first ether on the Ethereum testnet. That account and transaction exist on the network, and you can now search that from your terminal. Try finding that transaction now by going through the following steps.",
              "instructor_notes": ""
            },
            {
              "id": 780518,
              "key": "ddb5c9bf-983f-440e-b2bf-3c17a71dda3c",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "ddb5c9bf-983f-440e-b2bf-3c17a71dda3c",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "**Step 1:** Open Metamask and find the transaction that sent you test ether",
                "**Step 2:** Search that transaction on the appropriate test network using etherscan",
                "**Step 3:** Search the balance of the address shown on for this transaction using web3",
                "**Step 4:** Compare the transaction amount with the balance shown to see if they are the same"
              ],
              "positive_feedback": "Awesome work! You're really getting good at working with data on the Ethereum blockchain.",
              "video_feedback": null,
              "description": "Find your Ether Transaction"
            },
            {
              "id": 779571,
              "key": "87770bc1-e145-405a-a8ac-4c783a45bd4b",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/87770bc1-e145-405a-a8ac-4c783a45bd4b",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779000,
              "key": "8bdffee7-ffdf-4fd5-828c-de669139266d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Review\n___ \n\nHere you learned about infura, made an infura account, connected it to web3, and searched the command Ethereum main network from your command line.\n\n",
              "instructor_notes": ""
            },
            {
              "id": 782974,
              "key": "db0b1c42-f9ea-48f8-bc6d-6f06e915a9b0",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "db0b1c42-f9ea-48f8-bc6d-6f06e915a9b0",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "1. Define the importance of Infura and describe how it helps you develop DApps.",
                "2. Create an Infura account",
                "3. Establish a connection between web3 and an Ethereum network.",
                "4. Use your web3-infura connection to run basic commands that search the Ethereum network."
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Select each of the objectives that you feel you have gained the skills to complete."
            }
          ]
        },
        {
          "id": 778688,
          "key": "9b6b5bad-cc6b-45d6-80c5-b9e0d498f27b",
          "title": "Investigate Ethereum Accounts",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "9b6b5bad-cc6b-45d6-80c5-b9e0d498f27b",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 779005,
              "key": "325d8c41-6c62-442b-8ba5-dd1a60585f85",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Investigate Ethereum Accounts\n___\n\nEthereum accounts are at the core of what makes Ethereum so powerful.  Here we'll focus on defining Ethereum accounts and go over how to access account information using  web3 and Infura.\n\n## Objectives\n\n*Our goal is to help you do the following things.*\n\n1. Define the differences between externally owned accounts (EOA's) and contract accounts (CA's).\n2. Read the account balance and transaction count of an EOA's from your terminal using web3 and Infura.\n3. Run functions on an existing CA from your terminal using web3 and Infura.\n\n",
              "instructor_notes": ""
            },
            {
              "id": 779572,
              "key": "7e8053d1-2200-4d57-9d75-6ebafa4d8131",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/7e8053d1-2200-4d57-9d75-6ebafa4d8131",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779010,
              "key": "9f2d69a5-e347-4ab1-b252-879d15aa9d9e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 1. Ethereum Accounts\n___\n\nTo get started I'll introduce you to the different Ethereum account types and describe the differences between them.",
              "instructor_notes": ""
            },
            {
              "id": 778736,
              "key": "27534f08-4640-4d8c-8579-14e193c664ae",
              "title": "Ethereum Accounts",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Q2xtKYLlD7s",
                "china_cdn_id": "Q2xtKYLlD7s.mp4"
              }
            },
            {
              "id": 780520,
              "key": "bdbaeef4-fb31-4c40-9d30-79d2be8e1467",
              "title": "Reflect",
              "semantic_type": "ReflectAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "bdbaeef4-fb31-4c40-9d30-79d2be8e1467",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "title": null,
                "semantic_type": "TextQuestion",
                "evaluation_id": null,
                "text": "In 3 sentences or less, describe the important similarities and differences between externally owned accounts and contract accounts."
              },
              "answer": {
                "text": "Thanks for your answer! There are many ways to answer this question, here's my attempt.\n\nExternally owned accounts are owned by users with private keys while contract accounts are held by smart contracts. Transaction counts on EOA's refer to the number of transactions that user made while on CA's it refers to the number of times it has deployed other smart contracts. Many of the contents of these accounts are the same but contract accounts also hold the code from the deployed contract.",
                "video": null
              }
            },
            {
              "id": 780519,
              "key": "a320074c-40ee-4e80-a1eb-516842ae6278",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "a320074c-40ee-4e80-a1eb-516842ae6278",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Match each of the account variables to their definitions as described in the video above."
                },
                "concepts_label": "Definition",
                "answers_label": "Account Variable",
                "concepts": [
                  {
                    "text": "Number of transactions on the account",
                    "correct_answer": {
                      "id": "a1541568654936",
                      "text": "Nonce"
                    }
                  },
                  {
                    "text": "Total value of Ether available on the account in Wei",
                    "correct_answer": {
                      "id": "a1541568679322",
                      "text": "Account balance"
                    }
                  },
                  {
                    "text": "Root node of the patricia tree",
                    "correct_answer": {
                      "id": "a1541568696583",
                      "text": "Storage hash"
                    }
                  },
                  {
                    "text": "Hash of the code within the smart contract",
                    "correct_answer": {
                      "id": "a1541568709384",
                      "text": "Code hash"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1541568654936",
                    "text": "Nonce"
                  },
                  {
                    "id": "a1541568679322",
                    "text": "Account balance"
                  },
                  {
                    "id": "a1541568696583",
                    "text": "Storage hash"
                  },
                  {
                    "id": "a1541568709384",
                    "text": "Code hash"
                  }
                ]
              }
            },
            {
              "id": 779573,
              "key": "1d3015f2-d423-4ad1-9a53-fc8c438beaf2",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/1d3015f2-d423-4ad1-9a53-fc8c438beaf2",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779012,
              "key": "ddf02a60-b0fa-4e3f-94c4-7ed39e3f72f9",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 2. Demonstration: Read an Externally Owned Account\n___\n\nNow that you understand the basics of externally owned accounts and contract accounts, let's focus on reading data from an externally owned account. We did this in the previous concept so this time you'll add a bit of extra functionality to our call and  also challenge yourself to make a new a brand new call.",
              "instructor_notes": ""
            },
            {
              "id": 781940,
              "key": "b2cfd6ff-f3e3-4b3c-8de7-331409d26026",
              "title": "10.2-Read-An-Externally-Owned-Account",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "DOSwz5DBT7A",
                "china_cdn_id": "DOSwz5DBT7A.mp4"
              }
            },
            {
              "id": 779023,
              "key": "8cbbd419-d2a0-4d08-9e66-7bc8608064c8",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": ">**Note:** All the steps from the video above are available in the text below.",
              "instructor_notes": ""
            },
            {
              "id": 780521,
              "key": "3fd7f529-5b87-4934-a8b9-2adbc2500849",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "3fd7f529-5b87-4934-a8b9-2adbc2500849",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "**Step 1:** Find an account using Etherscan",
                "**Step 2:** Read the account balance of this account",
                "**Step 3:** Convert the balance in wei to a balance in ether",
                "**Step 4:** Get the transaction count for a given address"
              ],
              "positive_feedback": "Great job!",
              "video_feedback": null,
              "description": "You can use this checklist to keep track of your progress on the steps listed below."
            },
            {
              "id": 779017,
              "key": "d6ec2adc-422c-491a-916c-963d9742acf7",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Text Description: Read an Externally Owned Account\n___\n\n#### **Step 1:** Find an account using Etherscan\n___\n\nTo read an externally owned account, you'll need to find one using [etherscan](https://etherscan.io/accounts/c). The link provided takes you to the top accounts based on the number of ether they hold. This is a great place to see the world's richest Ethereum holders.\n\n#### **Step 2:** Read the account balance of this account \n___\n\n> Note: check to the last concept for a refresher on how to do this)\n\nI'll choose, this account **'0x742d35Cc6634C0532925a3b844Bc454e4438f44e'**, which currently has 1,573,611 Ether!\n\nSee if you can get the account balance from your terminal similar to how we did in the last concept. Feel free to check back to that concept if you're not sure. \n\nOnce thing you might notice is that we're still getting wei returned to us in our terminal. \n\n##### **Example**\n\n      1573611090334021500000000 <----- Note: Your value may be different*\n\n#### **Step 3:** Convert the balance in wei to a balance in ether\n___\n\nIn some cases, you might prefer to have the value of Ethereum returned to us rather than the value of wei. In this case we can use the [web3.utils](https://web3js.readthedocs.io/en/1.0/web3-utils.html#web3-utils) library to make this conversion. \n\nTo do this, try passing the balance into [web3.utils.fromWei](https://web3js.readthedocs.io/en/1.0/web3-utils.html#fromwei) function as shown below.\n\n    web3.utils.fromWei(balance, 'ether')\n\n#### **Step 4:** Get Transaction Count\n___\n\nAnother value held in an EOA as described in the video is the transaction count. Using web3, see if you can get the transaction count for this account for yourself. \n\nHere is the example for [web3.eth.getTransactionCount](https://web3js.readthedocs.io/en/1.0/web3-eth.html#gettransactioncount) as shown in the documentation.\n\n    web3.eth.getTransactionCount(address [, defaultBlock] [, callback])\n\n##### Example\n\n    web3.eth.getTransactionCount(\"ACCOUNT NUMBER\")\n    .then(console.log);\n    > 1\n\n",
              "instructor_notes": ""
            },
            {
              "id": 779574,
              "key": "6c52eb0a-dbbe-4748-b6ad-fb7961b6dc6f",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/6c52eb0a-dbbe-4748-b6ad-fb7961b6dc6f",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779020,
              "key": "20c53118-a02e-4c55-a8b8-55ac01104155",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 3. Demonstration: Read a Contract Account\n___\n\nWhile CA's can be similar to EOA's in some ways, making calls to them from web3 is much different. To read the data from a contract account, you'll need some extra details. Once set up, you'll have the ability to do some pretty interesting things, like call the methods on a live contract! In the following video, you'll do that on a live contract from the main network.",
              "instructor_notes": ""
            },
            {
              "id": 781941,
              "key": "9cdbeccf-f117-4018-a151-c06cfd4ca31c",
              "title": "10.3-Read-A-Countract-Account",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "3F3RSCNyW1E",
                "china_cdn_id": "3F3RSCNyW1E.mp4"
              }
            },
            {
              "id": 779024,
              "key": "a0b4779c-da11-45a5-98f1-24de92785704",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "*Note: All the steps from the video above are available in the text below.*",
              "instructor_notes": ""
            },
            {
              "id": 780522,
              "key": "ec6e336f-82b0-49f3-998b-362ecae5fd9f",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "ec6e336f-82b0-49f3-998b-362ecae5fd9f",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "**Step 1:** Set a variable ABI to the value of the ABI in the contract code.",
                "**Step 2:** Set the address of the contract to a variable named contractAddress.",
                "**Step 3:**  ABI and Contract Address",
                "**Step 4:** View the details of the contract.",
                "**Step 5:** View the methods from the contract",
                "**Step 6:** Call methods for this contract from your terminal."
              ],
              "positive_feedback": "Great work! You can now call functions on a live smart contract from your terminal!",
              "video_feedback": null,
              "description": "You can use this checklist to keep track of your progress on the steps listed below."
            },
            {
              "id": 782766,
              "key": "9b2eec4f-7540-48dc-833b-82ff921cbeec",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Text Description: Read a Contract Account\n___\n\n#### **Step 1:** Set a variable ABI to the value of the ABI in the contract code. \n___\n\n    var abi = PASTE ABI FROM CONTRACT\n    abi\n\nYou can copy the ABI for the basic attention token from [this link](https://etherscan.io/address/0x0d8775f648430679a709e98d2b0cb6250d2887ef#code).\n\n\nCalling the **abi** variable will reformat the abi to look similar to the terminal image shown below.",
              "instructor_notes": ""
            },
            {
              "id": 779018,
              "key": "44248160-8142-4c57-b502-08d039881ef8",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5bdfc6cd_screen-shot-2018-11-04-at-8.27.34-pm/screen-shot-2018-11-04-at-8.27.34-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/44248160-8142-4c57-b502-08d039881ef8",
              "caption": "",
              "alt": "",
              "width": 990,
              "height": 646,
              "instructor_notes": null
            },
            {
              "id": 779019,
              "key": "e9799196-20cb-40bb-9d7a-7af9ae4ed04b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### **Step 2:** Set the address of the contract to a variable named ```contractAddress```.\n___\n\n    var contractAddress = '0x0D8775F648430679A709E98d2b0Cb6250d2887EF'\n\n#### **Step 3:**  ABI and Contract Address\n___\n\nPass the abi and contractAddress into the **web3.eth.Contract** function and assign it to a varialbe named **contract**.\n\n    var contract = new web3.eth.Contract(abi, contractAddress)\n\n#### **Step 4:** View the details of the contract.\n___\n\n    contract\n\n#### **Step 5:**  View the methods from the contract\n___\n\n    contract.methods\n\n#### **Step 6**: Call methods for this contract from your terminal. \n___\n\n*Here are a few examples. Try these in your terminal to see what response you get.*\n\n    contract.methods.name()\n    contract.methods.name().call((err, result) => { console.log(result )})\n    contract.methods.symbol().call((err, result) => { console.log(result )})\n    contract.methods.totalSupply().call((err, result) => { console.log(result )})",
              "instructor_notes": ""
            },
            {
              "id": 779575,
              "key": "92765da5-e4b3-40b8-9339-ba5f2a0566da",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/92765da5-e4b3-40b8-9339-ba5f2a0566da",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779025,
              "key": "5cbb5479-a2a5-4847-b079-049cdcac7937",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Review\n___\n\nHere we discussed Ethereum accounts; externally owned accounts (EOA) and contract accounts (CA). You also went through the steps needed to find information about each of these accounts from your terminal.\n\n",
              "instructor_notes": ""
            },
            {
              "id": 783000,
              "key": "b8deb0fd-f272-4ad1-9b8e-d0ecaed5b9e6",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "b8deb0fd-f272-4ad1-9b8e-d0ecaed5b9e6",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "1. Define the differences between externally owned accounts (EOA's) and contract accounts (CA's).",
                "2. Read the account balance and transaction count of an EOA's from your terminal using web3 and Infura.",
                "3. Run functions on an existing CA from your terminal using web3 and Infura."
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Track the objectives you've feel you've gained the skills to complete."
            }
          ]
        },
        {
          "id": 778687,
          "key": "64335186-445e-4dfb-9403-a6caa04d1dec",
          "title": "Create a Local Blockchain",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "64335186-445e-4dfb-9403-a6caa04d1dec",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 779026,
              "key": "d0f26ebb-5e9c-48de-8e3b-e2168a1c857e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Create a Local Blockchain\n___\n\nReading from the Ethereum live networks can be limiting when you start developing your own applications. Managing accounts and ether, even test ether, can definitely slow you down. Something extremely helpful in this case  is to have access to test accounts preloaded with ether. For that reason I'll show you how to do exactly that with a tool known as ganache.\n\n## Objectives\n___\n\n*Our goal is to help you do the following things.*\n\n1. Describe the importance of Ganache in developing blockchain applications.\n2. Install, run, and navigate the ganache graphical user interface.\n3. Install, run, and navigate the ganache command line interface.\n\n",
              "instructor_notes": ""
            },
            {
              "id": 779578,
              "key": "a4b1dea2-9acc-4e94-9698-79781a534daa",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/a4b1dea2-9acc-4e94-9698-79781a534daa",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779028,
              "key": "1c8672ca-b609-4df5-a7ea-a2f7031242a0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 1. Introduction to Ganache\n___\n\nGanache gives you a way to set up a local blockchain pre-loaded with accounts and ether. In the next video, I'll describe why this is such a useful tool for developing blockchain applications.\n\nTo learn more about Ganache you can go to their [homepage](https://truffleframework.com/ganache). \n",
              "instructor_notes": ""
            },
            {
              "id": 781942,
              "key": "62371aed-7b8e-48a4-8abe-d5801fccf7b3",
              "title": "11.1-Introduction-To-Ganache",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "iAIn4HAMF70",
                "china_cdn_id": "iAIn4HAMF70.mp4"
              }
            },
            {
              "id": 780523,
              "key": "78dac846-9501-4014-8930-e575360540d0",
              "title": "Reflect",
              "semantic_type": "ReflectAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "78dac846-9501-4014-8930-e575360540d0",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "title": null,
                "semantic_type": "TextQuestion",
                "evaluation_id": null,
                "text": "In 3 sentences or less, describe the value Ganache adds to your Ethereum toolset."
              },
              "answer": {
                "text": "Ganache allows you to set up your own local blockchain. It comes preloaded with 10 accounts, each containing 100 ether. This gives you a way to make test transactions between many accounts without needing to worry about stocking up on test ether or paying for real ether.",
                "video": null
              }
            },
            {
              "id": 779580,
              "key": "daeb3474-c122-432f-9f91-41403804a762",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/daeb3474-c122-432f-9f91-41403804a762",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 782124,
              "key": "1aae05c5-2141-43d7-b0e3-32034a00ac2f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 2. Ganache Installation and Overview\n___",
              "instructor_notes": ""
            },
            {
              "id": 782123,
              "key": "ef167f14-be46-47e2-9086-8841089ed9c3",
              "title": "11.2-3-Ganache-Installation",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "huJ5i3EZuf4",
                "china_cdn_id": "huJ5i3EZuf4.mp4"
              }
            },
            {
              "id": 779030,
              "key": "558eb131-ed0a-4c7a-bcd3-6ce79df4c114",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### 2.1 Ganache-gui Installation\n___\n",
              "instructor_notes": ""
            },
            {
              "id": 782770,
              "key": "2b11ee72-2890-4a2a-850a-4af4d414e250",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "To install the ganachi-gui go [here](https://truffleframework.com/ganache) and select the download button for your operating system.\n\nAfter following the installation process, you can open the application and you should see the following screen.",
              "instructor_notes": ""
            },
            {
              "id": 778727,
              "key": "7470b6be-0364-4d97-bcb4-c32194c8feb0",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5bdf3ae2_screen-shot-2018-11-04-at-10.29.35-am/screen-shot-2018-11-04-at-10.29.35-am.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/7470b6be-0364-4d97-bcb4-c32194c8feb0",
              "caption": "",
              "alt": "",
              "width": 2624,
              "height": 1824,
              "instructor_notes": null
            },
            {
              "id": 780524,
              "key": "865987dd-5378-4e6c-a964-36cd8f6ae4d1",
              "title": "Investigate your Installation",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "865987dd-5378-4e6c-a964-36cd8f6ae4d1",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "**Step 1:** Install the ganache GUI",
                "**Step 2:** Look through the accounts, blocks, transactions, logs, and details within each ganache installation.",
                "**Step 3:** Compare this to the functionality that was originally provided by Metamask"
              ],
              "positive_feedback": "Awesome work!",
              "video_feedback": null,
              "description": "Now that you have the ganache GUI installed, try exploring this tool for yourself."
            },
            {
              "id": 780525,
              "key": "e7041330-6961-4dcf-82d2-700da92e30c8",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "e7041330-6961-4dcf-82d2-700da92e30c8",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of the following is the correct RPC SERVER for the ganache CLI?",
                "answers": [
                  {
                    "id": "a1541569505842",
                    "text": "HTTP://127.0.0.1:8545",
                    "is_correct": false
                  },
                  {
                    "id": "a1541569553488",
                    "text": "HTTP://127.0.0.1:7545",
                    "is_correct": true
                  },
                  {
                    "id": "a1541569554267",
                    "text": "HTTP://127.0.0.1:9545",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 779581,
              "key": "9e8f678a-7b75-4661-9764-9080dfcdd3e1",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/9e8f678a-7b75-4661-9764-9080dfcdd3e1",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779031,
              "key": "dc8f230a-f2ec-453d-a29a-dde948dff225",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### 2.2 Ganache-cli Installation\n___\n\nThe ganache-cli has the same functionality as the ganache-gui in a command line interface. To install the ganache-cli follow the directions provided [here](https://github.com/trufflesuite/ganache-cli).\n",
              "instructor_notes": ""
            },
            {
              "id": 780526,
              "key": "233332f5-a951-4432-822e-9a5499e6c3a3",
              "title": "Ganache CLI Installation",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "233332f5-a951-4432-822e-9a5499e6c3a3",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "**Step 1:** Install the ganache CLI",
                "**Step 2:** Look through the accounts, blocks, transactions, logs, and details within each.",
                "**Step 3:** Compare this to the functionality that was originally provided by Metamask"
              ],
              "positive_feedback": "Great! You have the option to choose between either of these versions of the tool for your own local blockchain.",
              "video_feedback": null,
              "description": "If helpful, you can use this checklist to keep track of your progress on the steps listed below."
            },
            {
              "id": 782768,
              "key": "d5b58377-4785-4122-ad84-10d05d49184b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "npm install -g ganache-cli\n\nOnce installed, run the following command in your terminal to start ganache.\n\nganache-cli\n\nAfter running this command your terminal should look similar to the one shown below.\n\n",
              "instructor_notes": ""
            },
            {
              "id": 778728,
              "key": "6be3914a-f54b-4d71-8c56-fbaac9f618ba",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5bdf3aeb_screen-shot-2018-11-04-at-10.30.43-am/screen-shot-2018-11-04-at-10.30.43-am.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/6be3914a-f54b-4d71-8c56-fbaac9f618ba",
              "caption": "",
              "alt": "",
              "width": 2756,
              "height": 1880,
              "instructor_notes": null
            },
            {
              "id": 780527,
              "key": "84098cad-67b1-413a-aba7-4aff7d469c1d",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "84098cad-67b1-413a-aba7-4aff7d469c1d",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of the following is the correct RPC SERVER for the ganache CLI?",
                "answers": [
                  {
                    "id": "a1541569652534",
                    "text": "HTTP://127.0.0.1:8545",
                    "is_correct": true
                  },
                  {
                    "id": "a1541569663591",
                    "text": "HTTP://127.0.0.1:7545",
                    "is_correct": false
                  },
                  {
                    "id": "a1541569664001",
                    "text": "HTTP://127.0.0.1:9545",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 779582,
              "key": "0f641df8-3f42-484d-927f-cc906ef7a4b0",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/0f641df8-3f42-484d-927f-cc906ef7a4b0",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779032,
              "key": "1aed8660-7ed9-4052-b4ed-f11b2bbc828a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Review\n___\n\nHere you got up and running with **Ganache**, a tool meant to help you test applications on a local Ethereum blockchain.\n",
              "instructor_notes": ""
            },
            {
              "id": 783001,
              "key": "5bf0e3a9-3280-44f9-b47d-4066bd8db2ca",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "5bf0e3a9-3280-44f9-b47d-4066bd8db2ca",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "1. Describe the importance of Ganache in developing blockchain applications.",
                "2. Install, run, and navigate the ganache graphical user interface.",
                "3. Install, run, and navigate the ganache command line interface.",
                "4. Describe why ganache is a great alternative to testing on the main or test network."
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Track the objectives you've feel you've gained the skills to complete."
            }
          ]
        },
        {
          "id": 778755,
          "key": "0fbc9ff7-809e-4c0f-aff0-d4d3afa988cd",
          "title": "Connect to Your Local Ethereum Blockchains",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "0fbc9ff7-809e-4c0f-aff0-d4d3afa988cd",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 779038,
              "key": "0df675de-38fc-4643-a176-d1b57a47dfe8",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Connect to Your Local Ethereum Blockchain\n___\n\nHaving created a local blockchain, you can now connect to it using web3. This is similar to what you've done before and only includes one small change. \n\nI'll also show you one more trick you can use to bring everything from your terminal into your IDE or code editor. Using your IDE  or code editor rather than your terminal brings you one step closer to using this data in your own Ethereum based applications.\n\n# Objectives\n___\n\n*Our goal is to help you do the following things.*\n\n1. Connect web3 to your ganache local blockchain and run basic commands.\n2. List account information from ganache using web3.\n3. Make calls from web3 using your IDE rather than your terminal.\n\n",
              "instructor_notes": ""
            },
            {
              "id": 779584,
              "key": "d26365c6-4f0e-4e00-8825-d54bf19062ae",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/d26365c6-4f0e-4e00-8825-d54bf19062ae",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779041,
              "key": "7d7f225d-f976-4a3d-8480-41592b7a9319",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 1. Connect Ganache to Web3\n___",
              "instructor_notes": ""
            },
            {
              "id": 779875,
              "key": "0ad2934e-1011-4a1b-a629-876344311c5a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "To get started, we'll connect your local ganache blockchain to web3.",
              "instructor_notes": ""
            },
            {
              "id": 781943,
              "key": "9817fa41-5455-4354-8c3c-6f2a50500c6f",
              "title": "12.1-Connect-Web3-To-Ganache",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "KY8c_hbnnr4",
                "china_cdn_id": "KY8c_hbnnr4.mp4"
              }
            },
            {
              "id": 779876,
              "key": "6da6611f-04b7-4bb6-b6a3-cd68ca8d2d3a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "> **Note:** The details of this video are also described in the text below.",
              "instructor_notes": ""
            },
            {
              "id": 780528,
              "key": "42e8819c-d3db-42c5-b56b-4e3a93bd5fc8",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "42e8819c-d3db-42c5-b56b-4e3a93bd5fc8",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "**Step 1:** Start Ganache",
                "**Step 2:** Connect Web3 to Ganache",
                "**Step 3:** Create and change into a directory",
                "**Step 4:** Initialize an instance of npm",
                "**Step 5:** Start node in your terminal",
                "**Step 6:** Require and run web3 in node",
                "**Step 7:** Set the web3 variable to an instance of Web3 on your URL",
                "**Step 8:** Call this we3 variable to read information to your terminal",
                "**Step 9:** Test the connection by reading the list of accounts"
              ],
              "positive_feedback": "Great work! Web3 is now connected to your local blockchain!",
              "video_feedback": null,
              "description": "Complete each of the steps as described above to connect web3 to ganache."
            },
            {
              "id": 779045,
              "key": "dff26a4a-981d-48cb-9c3f-9dd6c7ac70e2",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### **Step 1:** Run Ganache\n___\n\nBefore trying to connect to ganache, it's important to remember that you are even running it. Determine which you prefer, the ganache-cli, or ganche-gui, and run that before trying to connect to it. \n",
              "instructor_notes": ""
            },
            {
              "id": 779042,
              "key": "70523f40-f0ed-4419-af3f-b118c640d9f8",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### **Step 2:** Connect Web3 to Ganache\n___\n\nConnecting ganache to web3 is simple. All we need to do is set a different ```url``` variable as our endpoint.\n\nFor convenience, I've place all of the commands below to get started. Note that there is only 1 difference between this and what we have done already. Rather than setting the variable ```url``` to our infura endpoint, we change it to the url of our ganache network. ",
              "instructor_notes": ""
            },
            {
              "id": 779043,
              "key": "548f6080-2589-4268-9f27-fe109ad1f1c1",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### **Step 3:** Create and change into a directory\n___\n    mkdir projectFolder -- <----don't name this folder web3\n    cd projectFolder\n\n#### **Step 4:** Initialize an instance of npm\n___\n    npm init -y\n    npm install web3 --save\n\n#### **Step 5:** Start node in terminal\n___\n    node\n\n#### **Step 6:** Require web3 into node\n___\n    var Web3 = require('web3')\n   \n#### **Step 7:** Set the web3 variable to an instance of Web3 on your URL\n___\n\n    var web3 = new Web3('HTTP://127.0.0.1:7545') -- // 8545 if you are using ganache-cli\n\n##### **Step 8:** Call this web3 variable to read information to your terminal\n___\n\n    web3\n\n#### **Step 9:** Test the connection by reading the list of accounts\n___\n\n    web3.eth.getAccounts().then(accounts => console.log(accounts));",
              "instructor_notes": ""
            },
            {
              "id": 779044,
              "key": "9c834aaf-e75a-4ffa-affe-1330dd107282",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "If everything worked out, you now have a connection from your local ganache blockchain to web3. You can run all of the same commands you learned previously to inspect different accounts, balances, and more. Feel free to experiment, we'll be doing that shortly as well, but before wrapping up I'll show you how to bring this functionality into your development environment.",
              "instructor_notes": ""
            },
            {
              "id": 779587,
              "key": "bfdf6c83-6901-45f3-9e5c-9c0989e25e4b",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/bfdf6c83-6901-45f3-9e5c-9c0989e25e4b",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779067,
              "key": "bc002067-7550-4fad-baa0-f6e6c56129a6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 2. Connect Web3 to Ganache from an IDE\n___\n\nNow that you've connected to ganache from your terminal, you can bring this functionality into your code editor or IDE. To do this is pretty similar to what you've done already. In the next section I'll show you how to do this.",
              "instructor_notes": ""
            },
            {
              "id": 781944,
              "key": "1e453d23-c11d-4c78-83a6-367a52e98cac",
              "title": "12.2-Connect-Web3-To-Ganache-From-An-Ide",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "E3Cry2Wk20Y",
                "china_cdn_id": "E3Cry2Wk20Y.mp4"
              }
            },
            {
              "id": 780531,
              "key": "27e7393d-8978-4f66-b9ec-4fe40cd34d2b",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "27e7393d-8978-4f66-b9ec-4fe40cd34d2b",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "**Step 1:** Create and open an app.js file in whichever directory you'd like.",
                "**Step 2:** initialize npm and save web3 as a dependency.",
                "**Step 3:** Paste the following code into your index.js file.",
                "**Step 4:** Run app.js from your terminal to execute the code"
              ],
              "positive_feedback": "Great job! You can now work with web3 directly from the files in your code editor or IDE.",
              "video_feedback": null,
              "description": "Connect your local blockchain to your IDE by completing the steps shown below."
            },
            {
              "id": 780529,
              "key": "b7d4f274-2598-438c-a29b-51510174de03",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "\nFor this example, I'll be using visual studio code with the integrated terminal they provide. Feel free to use whatever environment you prefer.\n\n#### **Step 1:** Create and open an app.js file in whichever directory you'd like.\n___\n\n    mkdir projectFolder\n    cd projectFolder\n\n#### **Step 2:** initialize npm and save web3 as a dependency. \n___\n\n    npm init\n    npm install web3 --save\n\n#### **Step 3:** Paste the following code into your ```index.js``` file.\n___\n\n    var Web3 = require('web3')\n\n    var url = 'HTTP://127.0.0.1:7545' // 8545 if using ganache-cli\n\n    var web3 = new Web3(url)\n\n    web3.eth.getAccounts().then(accounts => console.log(accounts));\n\n#### **Step 4:** Run app.js from your terminal to execute the code\n___\n\n___\n\nOnce completed, you've successfully called ganache using web3 from your development environment. Your environment should look similar to the one shown below.\n",
              "instructor_notes": ""
            },
            {
              "id": 779068,
              "key": "53f2fa53-6a21-45fb-97c1-3073d2b0d496",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5bdfe612_screen-shot-2018-11-04-at-10.40.26-pm/screen-shot-2018-11-04-at-10.40.26-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/53f2fa53-6a21-45fb-97c1-3073d2b0d496",
              "caption": "",
              "alt": "",
              "width": 3104,
              "height": 2014,
              "instructor_notes": null
            },
            {
              "id": 780533,
              "key": "2a4b7ab5-676b-45c9-8fee-7d527da08398",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "For more commands, try searching the [web3 documentation](https://web3js.readthedocs.io/en/1.0/index.html)",
              "instructor_notes": ""
            },
            {
              "id": 780532,
              "key": "a33eba88-a1d8-4fd7-aca1-cfb6fb57dd6d",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "a33eba88-a1d8-4fd7-aca1-cfb6fb57dd6d",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "I have successfully researched and executed a web3 command on my local blockchain."
              ],
              "positive_feedback": "Amazing work! The pieces are really coming together now :)",
              "video_feedback": null,
              "description": "Remember earlier in the lesson when you researched the different commands that exist on web3? Try executing some of those commands now on the accounts that you have access to."
            },
            {
              "id": 779588,
              "key": "6f31c75b-4e34-4b8d-9ca0-64a9ba9f06eb",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/6f31c75b-4e34-4b8d-9ca0-64a9ba9f06eb",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779070,
              "key": "b60953d2-10f9-4fbd-bec3-b3dc7030820b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Review\n___\n\nHere we went over how to connect web3 to your newly create ganache local blockchain. You also brought this functionality into your development environment. This brings you even closer to getting this type of data into your applications. Having completed this concept, you should now be able to do the following.\n",
              "instructor_notes": ""
            },
            {
              "id": 783003,
              "key": "2d26a943-7c87-4eee-8a01-c9ff73d34a80",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "2d26a943-7c87-4eee-8a01-c9ff73d34a80",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "1. Connect web3 to your ganache local blockchain.",
                "2. List account information from ganache using web3.",
                "3. Make calls from web3 using your IDE."
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Track the objectives you've feel you've gained the skills to complete."
            }
          ]
        },
        {
          "id": 778689,
          "key": "f03dfb88-1ae8-4888-af2a-370039a82cb6",
          "title": "Create Ethereum Transactions ",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f03dfb88-1ae8-4888-af2a-370039a82cb6",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 779462,
              "key": "4716b7af-03df-44cb-aaf6-522c8b3ee4f0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Create Ethereum Transactions\n___\n\nNow that you can access your local Ethereum blockchain, you can begin making transactions between it's accounts. Without ganache, this would be much more complicated. In this concept, you'll learn about different transaction types in Ethereum, then start to build transactions from your IDE.\n\n## Objectives\n___\n\n*Our goal is to help you do the following things.*\n\n1. Discuss the types of transactions and transaction fields that exist in Ethereum\n2. Create a transaction programmatically that sends Ether between 2 ganache accounts.\n\n",
              "instructor_notes": ""
            },
            {
              "id": 779589,
              "key": "27175d8b-ccc7-4027-bab3-dc97c7abf70c",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/27175d8b-ccc7-4027-bab3-dc97c7abf70c",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779463,
              "key": "7d7d4833-8150-45c3-9395-34561ed9eb02",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 1. Transaction Types\n___\n\nTo get started, we'll discuss the basic Ethereum transaction types and fields in the video below.",
              "instructor_notes": ""
            },
            {
              "id": 778737,
              "key": "cc05902a-10f7-40a7-81c7-abcf235b8dc8",
              "title": "Transactions and Messages",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "SiQPPoUfhTE",
                "china_cdn_id": "SiQPPoUfhTE.mp4"
              }
            },
            {
              "id": 779465,
              "key": "b3d799f6-2c63-4459-837c-f15c7b350430",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Summary of Transaction Types\n___\n\nBelow is an overview of the account types as shown in the previous video.",
              "instructor_notes": ""
            },
            {
              "id": 779464,
              "key": "3277d5fe-0cf8-4129-a7b2-00b087ca47ba",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5be06b4b_screen-shot-2018-11-05-at-8.09.37-am-2/screen-shot-2018-11-05-at-8.09.37-am-2.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/3277d5fe-0cf8-4129-a7b2-00b087ca47ba",
              "caption": "",
              "alt": "",
              "width": 1920,
              "height": 1080,
              "instructor_notes": null
            },
            {
              "id": 780534,
              "key": "887c9cb2-eca8-4b55-b18b-63268c5f09ac",
              "title": "Reflect",
              "semantic_type": "ReflectAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "887c9cb2-eca8-4b55-b18b-63268c5f09ac",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "title": null,
                "semantic_type": "TextQuestion",
                "evaluation_id": null,
                "text": "In 3 sentences or less, describe the difference between message call transactions and contract creation transactions."
              },
              "answer": {
                "text": "Great job! If you're not clear on the difference quite yet, that's okay. We'll be jumping into the code next which could help clarify some of the differences for you.",
                "video": null
              }
            },
            {
              "id": 779467,
              "key": "b131b532-a1f9-4b02-a427-6163179b324a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Transaction Fields\n___\n\nBelow is a summary of the transaction fields as shown in the previous video.",
              "instructor_notes": ""
            },
            {
              "id": 779466,
              "key": "d366e933-5e32-4c11-839c-64e552a18e01",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5be06b85_screen-shot-2018-11-05-at-8.10.36-am-2/screen-shot-2018-11-05-at-8.10.36-am-2.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/d366e933-5e32-4c11-839c-64e552a18e01",
              "caption": "",
              "alt": "",
              "width": 1920,
              "height": 1080,
              "instructor_notes": null
            },
            {
              "id": 780535,
              "key": "7c9bbe22-3a28-4202-9d73-716dc84e9c24",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "7c9bbe22-3a28-4202-9d73-716dc84e9c24",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Match each of the transaction variables with their definition."
                },
                "concepts_label": "Definition",
                "answers_label": "Transaction Variable",
                "concepts": [
                  {
                    "text": "Transaction count from the senders account",
                    "correct_answer": {
                      "id": "a1541570888370",
                      "text": "Nonce"
                    }
                  },
                  {
                    "text": "Price per unit of gas you are willing to pay for executing the code in your smart contract",
                    "correct_answer": {
                      "id": "a1541570929309",
                      "text": "Gas price"
                    }
                  },
                  {
                    "text": "Specifies the max number of computational steps the transaction is allowed.",
                    "correct_answer": {
                      "id": "a1541570954591",
                      "text": "Gas limit"
                    }
                  },
                  {
                    "text": "The amount of Ether you want to send.",
                    "correct_answer": {
                      "id": "a1541570988804",
                      "text": "Value"
                    }
                  },
                  {
                    "text": "Information used to record the creation and execution of smart contracts.",
                    "correct_answer": {
                      "id": "a1541570997343",
                      "text": "Data, Init"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1541570988804",
                    "text": "Value"
                  },
                  {
                    "id": "a1541570888370",
                    "text": "Nonce"
                  },
                  {
                    "id": "a1541570929309",
                    "text": "Gas price"
                  },
                  {
                    "id": "a1541570997343",
                    "text": "Data, Init"
                  },
                  {
                    "id": "a1541570954591",
                    "text": "Gas limit"
                  }
                ]
              }
            },
            {
              "id": 779591,
              "key": "956b3396-9418-4af5-943b-6644c2313515",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/956b3396-9418-4af5-943b-6644c2313515",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779468,
              "key": "5f66ab6d-b469-4094-b0ba-b12cd4fa340c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 2. Create a Transaction\n___\n\nUsing similar fields to the transaction shown above, we can construct transactions for ourselves. Using the pre-loaded test accounts and free Ether in our local blockchain, we'll be able to create transactions however we like.\n\nIn the video below, we'll go over exactly how to do this using the following steps.\n\n* Install a transaction helper library known as ```ethereumjs-tx```\n* Configure connections between necessary tooling\n* Build the transaction\n* Sign the transaction",
              "instructor_notes": ""
            },
            {
              "id": 781945,
              "key": "35261e11-0719-42e1-9178-0ac3a70f89ad",
              "title": "13.2-Create-A-Transaction",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "yQ54sALbe24",
                "china_cdn_id": "yQ54sALbe24.mp4"
              }
            },
            {
              "id": 779470,
              "key": "e72358ef-8ff9-4221-8495-c67cb966a82c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "> **Note:** You can use the code below to follow along with this video. A more concise version of this code will be provided in the following concept. For now, you can comment out the functionality you don't need as shown in the demonstration.",
              "instructor_notes": ""
            },
            {
              "id": 779471,
              "key": "f2920b6d-4424-4098-b357-fd827aa9a398",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Text Overview: Create Transactions\n___",
              "instructor_notes": ""
            },
            {
              "id": 780536,
              "key": "decb1f64-3742-4348-9934-b5553f02476c",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "decb1f64-3742-4348-9934-b5553f02476c",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Step 1: Set up the appropriate configuration",
                "Step 2: Set the sending and receiving addresses for the transaction.",
                "Step 3: Check the balances of each address",
                "Step 4: Set up the transaction using the transaction variables as shown",
                "Step 5: View the raw transaction",
                "Step 6: Check the new account balances (they should be the same)",
                "Step 7: Sign the transaction with the Hex value of the private key of the sender",
                "Step 8: Send the serialized signed transaction to the Ethereum network."
              ],
              "positive_feedback": "Amazing! You just created your own transaction and sent it to your local blockchain.",
              "video_feedback": null,
              "description": "Follow the steps from previous video using the code below to create and sign a transaction."
            },
            {
              "id": 782771,
              "key": "dd14e4fb-e628-4c9e-8fbe-4db8d224f0cf",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Before making the transaction, ensure you have installed both dependencies to your npm initialization.\n\n    npm install ethereumjs-tx --save\n    npm install web3 --save\n\nNext, paste this code into your .js file and use the video to follow along.\n",
              "instructor_notes": ""
            },
            {
              "id": 779071,
              "key": "f81b9d31-ab02-4479-94cb-f0a56fe28dbb",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "\n/*##########################\n##     CONFIGURATION      ##\n##########################*/\n\n//  -- Step 1: Set up the appropriate configuration\nvar Web3 = require(\"web3\")\nvar EthereumTransaction = require(\"ethereumjs-tx\")\nvar web3 = new Web3('HTTP://127.0.0.1:7545')\n\n// -- Step 2: Set the sending and receiving addresses for the transaction.\nvar sendingAddress = 'ADDRESS FROM GANACHE GOES HERE'\nvar receivingAddress = 'ANOTHER ADDRESS FROM GANACHE GOES HERE'\n\n// -- Step 3: Check the balances of each address\nweb3.eth.getBalance(sendingAddress).then(console.log)\nweb3.eth.getBalance(receivingAddress).then(console.log)\n\n/*##########################\n##  CREATE A TRANSACTION  ##\n##########################*/\n\n// -- Step 4: Set up the transaction using the transaction variables as shown\nvar rawTransaction = {\n    nonce: 0,\n    to: receivingAddress,\n    gasPrice: 20000000,\n    gasLimit: 30000,\n    value: 1,\n    data: \"\"\n}\n\n// -- Step 5: View the raw transaction\nrawTransaction\n\n// -- Step 6: Check the new account balances (they should be the same)\nweb3.eth.getBalance(sendingAddress).then(console.log)\nweb3.eth.getBalance(receivingAddress).then(console.log)\n\n// Note: They haven't changed because they need to be signed...\n\n/*##########################\n##  Sign the Transaction  ##\n##########################*/\n\n// -- Step 7: Sign the transaction with the Hex value of the private key of the sender\nvar privateKeySender = 'PRIVATE KEY OF SENDER GOES HERE'\nvar privateKeySenderHex = new Buffer(privateKeySender, 'hex')\nvar transaction = new EthereumTransaction(rawTransaction)\ntransaction.sign(privateKeySenderHex)\n\n/*#########################################\n##  Send the transaction to the network  ##\n#########################################*/\n\n// -- Step 8: Send the serialized signed transaction to the Ethereum network.\nvar serializedTransaction = transaction.serialize();\nweb3.eth.sendSignedTransaction(serializedTransaction);\n\n\n",
              "instructor_notes": ""
            },
            {
              "id": 782749,
              "key": "9b082b5c-9f2e-415a-9b79-6adaeb6acfb4",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Optional Exercises\n___\n\nThere's many ways to help get more familiar with these new ideas. Below are a couple of things you can try to start confidently making transactions for yourself.",
              "instructor_notes": ""
            },
            {
              "id": 780537,
              "key": "f4065bc7-a8f4-41b5-b1c5-4307e0b7815b",
              "title": "Refactoring Challenge",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "f4065bc7-a8f4-41b5-b1c5-4307e0b7815b",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Refactor the code to a more concise version for future transactions.",
                "Practice creating a few different transactions with difference values"
              ],
              "positive_feedback": "Amazing work!",
              "video_feedback": null,
              "description": "The code provided has a lot of extra code used for demonstration purposes. Things like console logs, over commenting, and long variable names. See if you can refactor this code down to a concise way to create your future transactions. Then try it out!"
            },
            {
              "id": 780538,
              "key": "f21f47e8-372b-4ea0-b4ad-5069a2b8bdc1",
              "title": "Test network Challenge",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "f21f47e8-372b-4ea0-b4ad-5069a2b8bdc1",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Create another Metamask account to receive the ether from your original account.",
                "Update the RPC server utilizing Infura to access the test net",
                "Update the account names, transaction values, private keys, and anything else you'll need to the appropriate values.",
                "Send the transaction!",
                "Practice finding the transaction and account values for these accounts using etherscan and web3."
              ],
              "positive_feedback": "This was a tough one, hopefully you learned a lot while walking through these steps!",
              "video_feedback": null,
              "description": "Here's a tough challenge you can try! Remember when you got test ether onto an account earlier using Metamask? You can also use these coins to make transactions. Follow the steps below to try making and viewing live testnet transactions."
            },
            {
              "id": 779592,
              "key": "075a9749-28fb-4a7a-a722-113d05968fbb",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/075a9749-28fb-4a7a-a722-113d05968fbb",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779472,
              "key": "388d3579-2a66-4a0f-9837-6ffa23991bd0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Review\n___\n\nHere you were introduced to the different Ethereum transaction types and built some transactions for yourself.\n",
              "instructor_notes": ""
            },
            {
              "id": 783005,
              "key": "f91f147b-44fa-4f73-a09e-26242f9ad353",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "f91f147b-44fa-4f73-a09e-26242f9ad353",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "1. Discuss the types of transactions and transaction fields that exist in Ethereum",
                "2. Create a transaction programmatically that sends Ether between 2 ganache accounts."
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Track the objectives you've feel you've gained the skills to complete."
            }
          ]
        },
        {
          "id": 778690,
          "key": "6442f41e-2581-4238-8c38-6dcf416b97bf",
          "title": "Ethereum Gas and Fees",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "6442f41e-2581-4238-8c38-6dcf416b97bf",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 779479,
              "key": "853ba871-a4cb-4788-8e36-dd720143c923",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Ethereum Gas and Fees\n___\n\nEvery transaction in Ethereum costs a certain amount of gas. Here you'll learn about what this means and how it affects the transactions you make on the network.\n\n## Objectives\n___\n\n*Our goal is to help you do the following things.*\n\n1. Discuss the basics of how gas and fees work on the Ethereum network.\n2. Show the effects of gas cost and fees using an example transaction.\n\n\n",
              "instructor_notes": ""
            },
            {
              "id": 779593,
              "key": "d7e941d7-4a42-43f9-8390-462ea1f7f9b1",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/d7e941d7-4a42-43f9-8390-462ea1f7f9b1",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779491,
              "key": "63fca494-a8c7-40ad-aa1d-79566be34751",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 1. Introduction to Gas and Fees\n___\n\nIn this video I'll discuss what gas is, why it's important, and how it helps verify transactions on the Ethereum Blockchain.",
              "instructor_notes": ""
            },
            {
              "id": 778738,
              "key": "adc504e2-0d1d-4799-885d-4bc952e9296e",
              "title": "Ethereum Gas and Fees",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "WoYQQi0I4Dk",
                "china_cdn_id": "WoYQQi0I4Dk.mp4"
              }
            },
            {
              "id": 780541,
              "key": "2ccb2fbf-c579-44f5-ba35-247874d5e613",
              "title": "Reflect",
              "semantic_type": "ReflectAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "2ccb2fbf-c579-44f5-ba35-247874d5e613",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "title": null,
                "semantic_type": "TextQuestion",
                "evaluation_id": null,
                "text": "In 3 sentences or less, describe the purpose of gas on the Ethereum network."
              },
              "answer": {
                "text": "Thanks for your response! Gas is needed to incentivize miners to pick up and validate transactions. It's a small fee paid for the cost of each bit of code executed to complete a smart contract. While the gas is specific to execution costs, it can be converted to its equivalent value in ether and given to the miner as reward for their effort.",
                "video": null
              }
            },
            {
              "id": 779594,
              "key": "8654d4bb-8f43-4fe1-bd26-760d80239186",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/8654d4bb-8f43-4fe1-bd26-760d80239186",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779493,
              "key": "135a1a3d-fa2f-491a-96cc-79a6f94f2013",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 2. View the Gas Cost\n___\n\nNow that you understand the importance of gas and fees in Ethereum, we'll revisit a transaction we created previously. After reconstructing this transaction, we'll note something we overlooked before related to the gas and fees for the transaction.",
              "instructor_notes": ""
            },
            {
              "id": 781946,
              "key": "e7f1d060-7e58-4561-938a-4a56a3e70841",
              "title": "14.2-Gas-And-Fees",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "pknwdO_hc0c",
                "china_cdn_id": "pknwdO_hc0c.mp4"
              }
            },
            {
              "id": 779481,
              "key": "980d3cd6-3664-4d19-a4c7-05a219ceb948",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Create a transaction\n___\n\nWritten below is a more concise version of the transaction created previously. Replace the missing fields with those from your own ganache instance to run this transaction locally.",
              "instructor_notes": ""
            },
            {
              "id": 780542,
              "key": "f2548eac-ad5c-42ca-ad81-5ca64aa7cc96",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "f2548eac-ad5c-42ca-ad81-5ca64aa7cc96",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "**Step 1:** Execute the provided code in your project file.",
                "**Step 2:** View the balance of each account to view the difference in the sending accounts value.",
                "**Step 3:** Add the gas limit to the sending address total to prove that the difference is the gas cost."
              ],
              "positive_feedback": "Awesome job!",
              "video_feedback": null,
              "description": "Complete the steps below to create a transaction and view the effects of the gas cost."
            },
            {
              "id": 779877,
              "key": "7b4f1b86-dc6b-4008-a0ef-6cc13b1640a3",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Before running this command, make sure you have the correct dependencies installed to your project.\n\n    npm install web3 --save\n    npm install ethereumjs-tx",
              "instructor_notes": ""
            },
            {
              "id": 779878,
              "key": "de9ed68c-7751-4d22-bcde-31e21b76660d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### **Step 1:** Execute the provided code in your project file.\n___",
              "instructor_notes": ""
            },
            {
              "id": 779072,
              "key": "b955f83c-6c2d-4f34-9b09-297b89130aa2",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "    // Configuration\n    var Web3 = require(\"web3\")\n    var EthereumTransaction = require(\"ethereumjs-tx\")\n    var web3 = new Web3('HTTP://127.0.0.1:8545')\n\n    // Set Addresses\n    var sendingAddress = 'ADDRESS FROM GANACHE'\n    var receivingAddress = 'ANOTHER ADDRESS FROM GANACHE'\n  \n    // Create transaction\n    var rawTransaction = {\n        nonce: 0,\n        to: receivingAddress,\n        gasPrice: 20000000,\n        gasLimit: 30000,\n        value: 1,\n        data: \"\"\n    }\n\n    // Sign Transaction\n    var privateKeySender = 'PRIVATE KEY OF SENDER'\n    var privateKeySenderHex = new Buffer(privateKeySender, 'hex')\n    var transaction = new EthereumTransaction(rawTransaction)\n    transaction.sign(privateKeySenderHex)\n    var serializedTransaction = transaction.serialize();\n    web3.eth.sendSignedTransaction(serializedTransaction);\n\n\n",
              "instructor_notes": ""
            },
            {
              "id": 779487,
              "key": "beaad135-77cb-4003-96ad-e6847fe56410",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### **Step 2:** View the the difference in account balances\n___\n\nHaving made the transaction, you can now view the gas cost. Once the transaction goes through you can view the balance of each account. To do this remove (or comment out) lines 10-26 and add the following lines. \n\n    web3.eth.getBalance(sender).then(console.log)\n    web3.eth.getBalance(receiver).then(console.log)\n\nRun the file again to view the account balance of each user. Notice that the value has changed by 1 for each account, but that the sendingAddress has had more ether taken away.\n\n**Sending Address:** ```99999999579999999999```\n\n**Receiving Address:** ```100000000000000000001```\n\n#### **Step 3:** Add the gas\n___\n\nBy looking back at the gas limit, we can see how this happen. The gas limit was the cost of executing the transaction on the network. In this case it was ```gasLimit: 30000```. If we add this value to the existing balance of the ```sendingAddress``` you'll see that the correct amount of ether remains in the account.\n\n",
              "instructor_notes": ""
            },
            {
              "id": 779595,
              "key": "a62e3eef-83e9-4cbb-9c04-29a687c4cc2b",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/a62e3eef-83e9-4cbb-9c04-29a687c4cc2b",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779480,
              "key": "485ab878-afb7-4650-a70c-7b8b705982c0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Concept Review\n___\n\nHere you learned about the use of gas and fees in Ethereum. \n",
              "instructor_notes": ""
            },
            {
              "id": 783006,
              "key": "eca86f49-d67f-4256-977d-1232c3f0e792",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "eca86f49-d67f-4256-977d-1232c3f0e792",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "1. Discuss the basics of how gas and fees work on the Ethereum network.",
                "2. Show the effects of gas cost and fees using an example transaction."
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Track the objectives you've feel you've gained the skills to complete."
            }
          ]
        },
        {
          "id": 778691,
          "key": "2ac3150a-17b8-4d13-a988-270bdc66fbd2",
          "title": "Explore Ethereum Metrics",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "2ac3150a-17b8-4d13-a988-270bdc66fbd2",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 779499,
              "key": "05049cfa-2d95-4830-85bd-245252068de8",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Explore Ethereum Metrics\n\nNow that you have some background in Ethereum, we'll take a look at Ethereum blockchain metrics. \n\nThis is a great way to monitor important metrics about the Ethereum blockchain as you developing applications. Using these metrics, you'll also gain a better understanding of metrics that you can read into your own applications.\n\n## Objectives\n___\n\n*Our goal is to help you do the following things.*\n\n1. Explain a variety of network statistics relating to it's performance. \n2. Utilize the web3 library documentation to search basic Ethereum statistics from your local environment.\n\n\n",
              "instructor_notes": ""
            },
            {
              "id": 779596,
              "key": "111e49d2-40fd-4056-9256-f3104048f3b8",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/111e49d2-40fd-4056-9256-f3104048f3b8",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779500,
              "key": "ad5b1f73-f103-402e-925d-0bea46b7114e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Ethereum Network Statistics\n___\n\nIn this video, PK walks through this important information using a website [ethstats.net](https://ethstats.net/) to show you some of the most important stats available about the Ethereum network.",
              "instructor_notes": ""
            },
            {
              "id": 778740,
              "key": "33d43088-2c02-48e4-9ba6-3b861c9b1bfb",
              "title": "Ethereum Network Performance",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "zx-kd-xgX3s",
                "china_cdn_id": "zx-kd-xgX3s.mp4"
              }
            },
            {
              "id": 779497,
              "key": "898e144d-81a2-4609-bdcc-f6a5e4df5ec5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Resources\n___\n\nIf you haven't already, feel free to go to ethstats.net to check out some of the current data about the Ethereum network.\n\n> [Ethstats](https://ethstats.net/)\n\nIf you are unfamiliar with Ether denominations, you can check out the latest denominations using the Ethereum documentation. These don't tend to change but this is a helpful resource you can use to understand what the existing denominations are. Most often you will hear us speak in terms of either Ether or Wei.\n\n> [Ether denominations](http://ethdocs.org/en/latest/ether.html)\n\n",
              "instructor_notes": ""
            },
            {
              "id": 780543,
              "key": "12e61e5b-9512-4fd7-91d7-4a2059ab65f0",
              "title": "Block Related Network Statistics",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "12e61e5b-9512-4fd7-91d7-4a2059ab65f0",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Connect the following block related statistics to their definitions."
                },
                "concepts_label": "Definition",
                "answers_label": "Term",
                "concepts": [
                  {
                    "text": "The highest block number of the longest valid chain, said differently it is heavy with cumulative difficulty.",
                    "correct_answer": {
                      "id": "a1541572646326",
                      "text": "Best Block"
                    }
                  },
                  {
                    "text": "Orphaned blocks and unlike other blockchains, in Ethereum they are included and rewarded. The dashboard displays current block uncle count and that from last 50 blocks.",
                    "correct_answer": {
                      "id": "a1541572688247",
                      "text": "Uncles"
                    }
                  },
                  {
                    "text": "The time since the last mined block in seconds.",
                    "correct_answer": {
                      "id": "a1541572688894",
                      "text": "LastBlock"
                    }
                  },
                  {
                    "text": "Average time between two block (excl. uncles) - should display 15 seconds unless the network is really slow.",
                    "correct_answer": {
                      "id": "a1541572689486",
                      "text": "AverageBlock"
                    }
                  },
                  {
                    "text": "Also known as the mining difficulty to find a new block.",
                    "correct_answer": {
                      "id": "a1541572742999",
                      "text": "Difficulty"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1541572688894",
                    "text": "LastBlock"
                  },
                  {
                    "id": "a1541572742999",
                    "text": "Difficulty"
                  },
                  {
                    "id": "a1541572689486",
                    "text": "AverageBlock"
                  },
                  {
                    "id": "a1541572688247",
                    "text": "Uncles"
                  },
                  {
                    "id": "a1541572646326",
                    "text": "Best Block"
                  }
                ]
              }
            },
            {
              "id": 780544,
              "key": "6ce22685-e18d-4f77-8bc2-cabb1b10909e",
              "title": "Gas Related Network Statistics",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "6ce22685-e18d-4f77-8bc2-cabb1b10909e",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Connect the following gas related statistics to their definitions."
                },
                "concepts_label": "Definition",
                "answers_label": "Term",
                "concepts": [
                  {
                    "text": "The price miners are currently accepting. Currently it is ~40 gwei, which is 40 giga wei, which is 40 billion wei. The default is 20 gwei.",
                    "correct_answer": {
                      "id": "a1541572787282",
                      "text": "GasPrice"
                    }
                  },
                  {
                    "text": "Correlated to Transactions Chart and displays the amount of spent gas.",
                    "correct_answer": {
                      "id": "a1541572818195",
                      "text": "GasSpendingChart"
                    }
                  },
                  {
                    "text": "Dynamic in nature and shows Gas Limit for the previous blocks.",
                    "correct_answer": {
                      "id": "a1541572829147",
                      "text": "GasLimitChart"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1541572829147",
                    "text": "GasLimitChart"
                  },
                  {
                    "id": "a1541572818195",
                    "text": "GasSpendingChart"
                  },
                  {
                    "id": "a1541572787282",
                    "text": "GasPrice"
                  }
                ]
              }
            },
            {
              "id": 780546,
              "key": "53bcc126-308f-49cd-a129-e6aceadfbfd1",
              "title": "General Network Statistics",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "53bcc126-308f-49cd-a129-e6aceadfbfd1",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Connect the following network related statistics to their definitions."
                },
                "concepts_label": "Definition",
                "answers_label": "Term",
                "concepts": [
                  {
                    "text": "For the nodes connected to the dashboard, it is how fast blocks are shared/propagated between nodes.",
                    "correct_answer": {
                      "id": "a1541572872986",
                      "text": "BlockPropogationChart"
                    }
                  },
                  {
                    "text": "The number of nodes connected to the dashboard. The total number of active connected nodes powering the network is quite high.",
                    "correct_answer": {
                      "id": "a1541572919348",
                      "text": "ActiveNodes"
                    }
                  },
                  {
                    "text": "Number of hashes spent by miners to find a new block. 250 TH/s is 250 trillion network hash power per second.",
                    "correct_answer": {
                      "id": "a1541572964879",
                      "text": "AverageNetworkHashRate"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1541572964879",
                    "text": "AverageNetworkHashRate"
                  },
                  {
                    "id": "a1541572919348",
                    "text": "ActiveNodes"
                  },
                  {
                    "id": "a1541572872986",
                    "text": "BlockPropogationChart"
                  }
                ]
              }
            },
            {
              "id": 779598,
              "key": "aab38f23-0dfa-4003-b9ca-259d7365f919",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/aab38f23-0dfa-4003-b9ca-259d7365f919",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779502,
              "key": "dc7846da-59ee-44f6-8c70-32239633ea33",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 3. Use Network Statistics\n___\n\nKnowing the range of network statistics, you can now start utilizing some of them for yourself using the web3 library. Try using the techniques described earlier to bring this data into your own environment. Most of this can be found through searching the documentation, but here are some examples to help get you started.\n",
              "instructor_notes": ""
            },
            {
              "id": 780547,
              "key": "4db905ba-7f54-4927-9baf-a60000ca0bd9",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "4db905ba-7f54-4927-9baf-a60000ca0bd9",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "**Example 1:** getGasPrice",
                "**Example 2:** Get Uncle",
                "**Example 3:** Get Block Transaction Count"
              ],
              "positive_feedback": "Great work reading network statistics!",
              "video_feedback": null,
              "description": "Try running each of the commands below to get a variety of network statistics using web3."
            },
            {
              "id": 782773,
              "key": "ea3a27b1-8c70-4699-a8c2-1b3ee0409549",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "\n#### **Example 1:** getGasPrice [found here](https://web3js.readthedocs.io/en/1.0/web3-eth.html?highlight=getgasprice#getgasprice)\n___\n\n    web3.eth.getGasPrice([callback])\n\n#### **Example 2:** Get Uncle [found here](https://web3js.readthedocs.io/en/1.0/web3-eth.html?highlight=blocks#getuncle)\n___\n\n    eb3.eth.getUncle(blockHashOrBlockNumber, uncleIndex [, returnTransactionObjects] [, callback])\n\n\n#### **Example 3:** Get Block Transaction Count [found here](https://web3js.readthedocs.io/en/1.0/web3-eth.html?highlight=blocks#getblocktransactioncount)\n___\n\n    web3.eth.getBlockTransactionCount(blockHashOrBlockNumber [, callback])",
              "instructor_notes": ""
            },
            {
              "id": 779599,
              "key": "faf1c18a-1c31-4ab0-8be1-724463274728",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/faf1c18a-1c31-4ab0-8be1-724463274728",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779501,
              "key": "255de518-8e47-4f42-a7dc-d68e8bd2d32b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Review\n___\n\nHere we took a broad look at some important Ethereum Network Statistics.\n",
              "instructor_notes": ""
            },
            {
              "id": 783007,
              "key": "fe1907a2-49a8-4d44-aa55-a0f74dcf3fdf",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "fe1907a2-49a8-4d44-aa55-a0f74dcf3fdf",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "1. Explain a variety of network statistics relating to it's performance.",
                "2. Utilize the web3 library documentation to search basic Ethereum statistics from your local environment."
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Track the objectives you've feel you've gained the skills to complete."
            }
          ]
        },
        {
          "id": 781365,
          "key": "9b327cad-f609-4651-8d8d-d4e4758eb4fe",
          "title": "First Dapp Revisited",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "9b327cad-f609-4651-8d8d-d4e4758eb4fe",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 781969,
              "key": "925284f7-899e-4c35-8ef3-847c1ab9aa75",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# First Dapp Revisited\n___\n\nHere we'll look back at the smart contract you created earlier in the lesson. Using the new tools you've learned, we can supercharge this and bring it one step closer to becoming a full dapp.\n\n## Objectives\n___\n\n*Our goal is to help you do the following things.*\n\n1. Deploy your smart contract to your local blockchain and web3\n2. Log information about your contract to the DOM of a simple website using HTML and JavaScript.\n\n\n",
              "instructor_notes": ""
            },
            {
              "id": 781970,
              "key": "1025acbd-fde0-44bb-bc6c-7f4a0d5386e6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 1. Deploy to Your Local Blockchain\n___\n\nConnecting the tools you've learned so far is a big part of creating dapps. In the next video, I'll show you how deploy a contract from remix that connects to ganache and your code editor using web3.\n",
              "instructor_notes": ""
            },
            {
              "id": 781947,
              "key": "019ecf57-e8fe-47b7-ab64-a76e4b0dfb8f",
              "title": "16-Deploy-To-Your-Local-Blockchain",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "hTbWPG-cNkM",
                "china_cdn_id": "hTbWPG-cNkM.mp4"
              }
            },
            {
              "id": 781972,
              "key": "ad9c661f-cf58-430a-af4a-530190a5951e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Smart Contract code\nHere is the code from the smart contract we're using in the video above.\n\n    pragma solidity ^0.4.24;\n\n    contract Message {\n        string myMessage;\n\n        function setMessage(string x) public {\n            myMessage = x;\n        }\n\n        function getMessage() public view returns (string) {\n            return myMessage;\n        }\n    }",
              "instructor_notes": ""
            },
            {
              "id": 781971,
              "key": "11a16ccb-7620-4f73-991d-d366d208c855",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 2. Push Smart Contract Data to a Website\n___\n\nCreating front ends for your application is a great way to your ideas into the hands of your users. Before getting there, you'll first need to see a few of the techniques used to read data into the console of a website. In this video I'll show you one way to do that.\n",
              "instructor_notes": ""
            },
            {
              "id": 781948,
              "key": "db200bef-137b-499b-957d-5b23e5baa065",
              "title": "16.2-Smart-Contract-To-A-Website",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "yTqKQssYAYc",
                "china_cdn_id": "yTqKQssYAYc.mp4"
              }
            },
            {
              "id": 784156,
              "key": "ab1a4fa8-d3b8-423d-b4ab-863ef8c9720a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Video Code\n___\n\nBelow is the code from **index.html** shown in the previous video.\n\n    <!DOCTYPE html>\n    <html lang=\"en\">\n\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n        <title>Deploy a Remix Contract</title>\n\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"main.css\">\n\n        <script src=\"https://cdn.jsdelivr.net/gh/ethereum/web3.js/dist/web3.min.js\"></script>\n    </head>\n\n    <body>\n        <div>\n            <h1>Deploy a Remix Contract</h1>\n        </div>\n\n        <script>\n\n            // Connect a the web3 provider\n            if (typeof web3 !== 'undefined') {\n                web3 = new Web3(web3.currentProvider);\n            } else {\n                web3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:7545\"));\n            }\n\n            // Set a default account\n            web3.eth.defaultAccount = web3.eth.accounts[0];\n\n            // Get the contract address\n            var RemixContract = web3.eth.contract(CONTRACT-ABI-HERE);\n\n            // Get the contract abi\n            var myMessage = RemixContract.at('CONTRACT ADDRESS HERE');\n\n            console.log(myMessage);\n\n        </script>\n    </body>\n\n    </html>",
              "instructor_notes": ""
            },
            {
              "id": 781973,
              "key": "f07bf0d1-e7bd-43d6-b8fe-50d486c694b6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# First Dapp Revisited\n___\n\nThroughout this concept you brought back your original dapp, connected it to some of the tools you learned throughout the lesson, and even got your first data read to the DOM of a simple website.\n\n## Objectives\n___\n",
              "instructor_notes": ""
            },
            {
              "id": 783010,
              "key": "0bf4e47c-9f66-40bd-ba4a-e25dc64aff04",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "0bf4e47c-9f66-40bd-ba4a-e25dc64aff04",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "1. Deploy your smart contract to your local blockchain and web3",
                "2. Log information about your contract to the DOM of a simple website using HTML and JavaScript."
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Track the objectives you've feel you've gained the skills to complete."
            }
          ]
        },
        {
          "id": 781369,
          "key": "2b28ae63-efdb-4ae4-b500-3a18a016f43e",
          "title": "Ethereum Secret Messenger",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "2b28ae63-efdb-4ae4-b500-3a18a016f43e",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 782127,
              "key": "638b619b-d282-4e93-9538-29e3df94637e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Ethereum Secret Messenger\n___\n\nHere you'll work towards setting up your blockchain to connect with a front end application. You'll start by using an HTML file, then switch to serving this live on our local host. \n\nFrom there, I'll help you address some issues that come up and point out things to consider when building your own applications. Finally, you'll wire everything up correctly and have a live decentralized application.\n\n## Objectives\n___\n\n*Our goal is to help you do the following things.*\n\n1. Connect the functions of your blockchain to a front end that users can interact with.\n2. Fix some of the issues that come up needed to make this DApp live.\n3. Deploy your DApp to the test network and view the results\n\n\n",
              "instructor_notes": ""
            },
            {
              "id": 782572,
              "key": "bad84439-7aca-44d0-ae42-a4f9acda4a91",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Connect a Front End\n___",
              "instructor_notes": ""
            },
            {
              "id": 782126,
              "key": "f30e40db-815a-4c9c-989c-0b5bdd9840dd",
              "title": "17-Ethereum-Secret-Messenger",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "GzzuVd4jIeQ",
                "china_cdn_id": "GzzuVd4jIeQ.mp4"
              }
            },
            {
              "id": 784157,
              "key": "7f9f0456-0dd8-4c23-a80d-4b725c2f452c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Index.html\n___\n\nHere is the **index.html** file as shown in the video above.\n\n    <!DOCTYPE html>\n    <html lang=\"en\">\n\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n        <title>Deploy a Remix Contract</title>\n\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"main.css\">\n\n        <script src=\"https://cdn.jsdelivr.net/gh/ethereum/web3.js/dist/web3.min.js\"></script>\n    </head>\n\n    <body>\n        <div>\n            <h1>Ethereum Secret Messenger</h1>\n            <hr>\n\n            <label for=\"message\">This site writes a secret message to the Ethereum\n                blockchain!</label>\n            <input id=\"userInput\" type=\"text\">\n\n            <button id=\"setMessageButton\">Set secret message</button>\n        </div>\n\n        <script src=\"https://code.jquery.com/jquery-3.2.1.slim.min.js\"></script>\n\n        <script>\n\n            // Connect a the web3 provider\n            if (typeof web3 !== 'undefined') {\n                web3 = new Web3(web3.currentProvider);\n            } else {\n                web3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:7545\"));\n            }\n\n            // Set a default account\n            web3.eth.defaultAccount = web3.eth.accounts[0];\n\n            // Get the contract address\n            var RemixContract = web3.eth.contract(CONTRACT-ABI-HERE);\n\n            // Get the contract abi\n            var myMessage = RemixContract.at('CONTRACT ADDRESS HERE');\n\n            console.log(myMessage);\n\n            $(\"#setMessageButton\").click(function () {\n                myMessage.setMessage($(\"#userInput\").val());\n                console.log($(\"#userInput\").val())\n            });\n\n        </script>\n    </body>\n\n    </html>",
              "instructor_notes": ""
            },
            {
              "id": 784158,
              "key": "cf5b809d-fe19-4ec2-b00a-516f6dadf436",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### main.css\n___\n\nHere is the **main.css** file as shown in the video above. \n\n    body {\n        background-color:#F0F0F0;\n        padding: 2em;\n        font-family: 'Raleway','Source Sans Pro', 'Arial';\n    }\n\n    label {\n        display:block;\n        margin-bottom:10px;\n    }\n    input {\n        padding:10px;\n        width: 50%;\n        margin-bottom: 1em;\n    }\n\n    button {\n        margin: 2em 0;\n        padding: 1em 4em;\n        display:block;\n        background-color: #00BCD4 \n    }\n\n    #setMessageButton {\n        padding:1em;\n        background-color:#fff;\n        margin: 1em 0;\n        background-color: #00BCD4;\n        color: #fff \n    }",
              "instructor_notes": ""
            },
            {
              "id": 782573,
              "key": "e06ed6be-af39-498b-9dce-1ffa3085746b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 2. First Try at a Live Server\n___",
              "instructor_notes": ""
            },
            {
              "id": 782654,
              "key": "4ebb840f-baf2-4278-9c16-db0382d92d65",
              "title": "2. First Try At A Live Server",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "AoBjcs4xXko",
                "china_cdn_id": "AoBjcs4xXko.mp4"
              }
            },
            {
              "id": 784159,
              "key": "ed98743f-d568-4b53-a06e-db250d78756d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Updates to index.html\n___\n\nHere is a summary of the changes made to **index.html** throughout the previous video\n\n    $(\"#setMessageButton\").click(function () {\n        message = $(\"#userInput\").val()\n        myMessage.setMessage(message, (error, result) => {message = result});\n        console.log($(\"#userInput\").val())\n    });",
              "instructor_notes": ""
            },
            {
              "id": 782575,
              "key": "96b99ff3-dc42-4e4a-be76-dc6b6c6abd13",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Fix the Errors: DApp on a Local Blockchain\n___\n",
              "instructor_notes": ""
            },
            {
              "id": 782655,
              "key": "7ceb4b59-1f22-44f2-be92-fb3d95619a49",
              "title": "Fix The Errors DApp On A Local Blockchain",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "bQhCcJgf4-s",
                "china_cdn_id": "bQhCcJgf4-s.mp4"
              }
            },
            {
              "id": 782577,
              "key": "22ef48cd-6621-43d3-98f0-923efee389ad",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 3. DApp on the Test Net\n___",
              "instructor_notes": ""
            },
            {
              "id": 782656,
              "key": "5241ff76-50f0-4a34-a0e4-0b8cb081147f",
              "title": "3. DApp On The Test Net",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "mZlbtW_HmDA",
                "china_cdn_id": "mZlbtW_HmDA.mp4"
              }
            },
            {
              "id": 782603,
              "key": "b67da46b-655d-4e22-b011-103e7013b08a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "To get your DApp on the Ethereum Test Network will take a bit of re-organizing and the ability to adjust a few connections with tools that you already know. Throughout this section, we'll get you set up with the test network using the following tools\n\n* Node.js\n* Web3\n* Remix\n* Infura\n\nYou won't need ganache to connect to the test network. If you'd like to follow along, you can close ganache for now. \n",
              "instructor_notes": ""
            },
            {
              "id": 782775,
              "key": "f864973f-d49e-4fc1-a03e-bcf120746f9d",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "f864973f-d49e-4fc1-a03e-bcf120746f9d",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "**Step 1:** Connect to Infura",
                "**Step 2:** Connect Metamask to the Test Network",
                "**Step 3:** Deploy your Smart Contract to the Test Network",
                "**Step 4:** Update the Contract Address",
                "**Step 5:** Test the DApp"
              ],
              "positive_feedback": "Great job!",
              "video_feedback": null,
              "description": "You can use this checklist to keep track of your progress on the steps listed below."
            },
            {
              "id": 782776,
              "key": "01302b3a-7a36-4e04-9cf2-8d0373762dd8",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "\n#### **Step 1:** Connect to Infura\n___\n\nNavigate back to your [Infura dashboard](https://infura.io/dashboard), change the endpoint to configure to the Rinkeby Test Network, and copy the link they provide. This link will give web3 access to the Test Network. \n\n\n",
              "instructor_notes": ""
            },
            {
              "id": 782605,
              "key": "03a0cfd7-2cb0-4631-9e43-a5d5aba8f1a9",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Next, go back to your code editor and replace the URL that connects you to ganache with this new endpoint url. \n\n    web3 = new Web3(new Web3.providers.HttpProvider(\"https://rinkeby.infura.io/v3/YOUR-CONNECTION\"));\n\nYour DApp is now set up to connect to the Test Network.",
              "instructor_notes": ""
            },
            {
              "id": 782606,
              "key": "2c1209a6-2aa8-4ef9-8e42-3b9dc72b8d44",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Step 2: Connect Metamask to the Test  Network\n___\n\nNext, you'll need to connect Metamask to the test network. To do this, click on the extension icon, select the dropdown, and choose **Rinkeby Test Network.**",
              "instructor_notes": ""
            },
            {
              "id": 782607,
              "key": "050f51c2-e4d9-4c39-bb05-d93f3d281bca",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5be894a4_screen-shot-2018-11-11-at-12.43.49-pm/screen-shot-2018-11-11-at-12.43.49-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/050f51c2-e4d9-4c39-bb05-d93f3d281bca",
              "caption": "",
              "alt": "",
              "width": 356,
              "height": 340,
              "instructor_notes": null
            },
            {
              "id": 782608,
              "key": "2260cd5d-77ba-4e33-a8ca-badc82e51eef",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Step 3: Deploy your Smart Contract to the Test Network\n___\n\nIn this step, navigate back to remix to deploy your smart contract to the test network. First, check to ensure that the environment is connected to the injected web3 provider. This connects Remix to the web3 provider injected by Metamask which is giving you a connection to the test network. \n\nOnce it's connected, hit deploy to deploy this to the test network. You should see a notification come up confirming that you want to complete this transaction. Hit confirm and your contract will now wait to be confirmed by the network. \n\nYou can view this transaction on Etherscan by selecting the link provided in Remix or in Metamask.",
              "instructor_notes": ""
            },
            {
              "id": 782609,
              "key": "7d1e69be-f0d5-4b19-939a-f2fdee041ed0",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5be89598_screen-shot-2018-11-11-at-12.47.52-pm/screen-shot-2018-11-11-at-12.47.52-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/7d1e69be-f0d5-4b19-939a-f2fdee041ed0",
              "caption": "",
              "alt": "",
              "width": 3104,
              "height": 2016,
              "instructor_notes": null
            },
            {
              "id": 782610,
              "key": "f4452d30-8b60-4343-9ce8-0ac93e00391f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Step 4: Update the Contract Address\n___\n\nWhen you deployed this contract, you made a new contract address that needs to be updated in your code editor. To update your contract address, copy it from the deployed contract in Remix and paste it into your editor. \n\n    var myMessage = RemixContract.at('YOUR NEW CONTRACT ADDRESS);",
              "instructor_notes": ""
            },
            {
              "id": 782611,
              "key": "36a0af6a-f170-4270-b984-2c30991a0d39",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Step 5: Test the DApp\n___\n\nNow that you've set up your connections, you're ready to test your DApp. Head back to your site, refresh the page, and try sending a secret message. When you do, Metamask should pop up asking you to confirm your transaction to send it to the test network. ",
              "instructor_notes": ""
            },
            {
              "id": 782615,
              "key": "3275ec83-19c4-4259-b45d-406e390ec3a1",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5be89779_screen-shot-2018-11-11-at-12.54.25-pm/screen-shot-2018-11-11-at-12.54.25-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/3275ec83-19c4-4259-b45d-406e390ec3a1",
              "caption": "",
              "alt": "",
              "width": 2032,
              "height": 1192,
              "instructor_notes": null
            },
            {
              "id": 782613,
              "key": "ba862051-2510-408e-a141-571aa29a9f87",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "\n> **Note:** If you try this immediately after deploying your contract, you may get an error. In some cases, the Infura network needs time to sync your contract to their copy of the test network. This should probably not take more than 5-10 minutes.\n\nOnce this transaction is confirmed you've officially deployed a DApp to the test network and made your first transaction.\n",
              "instructor_notes": ""
            },
            {
              "id": 782662,
              "key": "a8327016-dd84-4dbd-b20e-1abf4ee00a19",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Review\n___",
              "instructor_notes": ""
            },
            {
              "id": 783011,
              "key": "60ea79a6-a4e9-4805-b204-3eb5d1bf5869",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "60ea79a6-a4e9-4805-b204-3eb5d1bf5869",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "1. Discuss the basics of how gas and fees work on the Ethereum network.",
                "2. Show the effects of gas cost and fees using an example transaction."
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Track the objectives you've feel you've gained the skills to complete."
            }
          ]
        },
        {
          "id": 781367,
          "key": "6b419fc9-dda7-4bba-91c0-5d9792eaa1c3",
          "title": "Improved Deployment Process",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "6b419fc9-dda7-4bba-91c0-5d9792eaa1c3",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 781370,
              "key": "0ee92f51-4f04-4678-a18f-366469dad798",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Improve the Deployment Process\n___\n\nUntil now, you've been deploying contracts using Remix from the web browser. While this is an excellent way to get started, there are more effective ways to deploy contracts. In this section, I'll show you how you can improve the deployment process using a tool known as Truffle.\n\n## Objectives\n___\n\n*Our goal is to help you do the following things.*\n\n1. Identify ways that Truffle can improve the smart contract creation and deployment process.\n2. Install truffle to your local environment.\n3. Set up a truffle environment and deploy your first contract.",
              "instructor_notes": ""
            },
            {
              "id": 781371,
              "key": "0cdefe70-5dc1-4b58-a878-4831346f6df7",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/0cdefe70-5dc1-4b58-a878-4831346f6df7",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 781372,
              "key": "95409279-1afe-4a8f-8d79-82d5628e158f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 1. How Truffle Improves the Deployment Process\n___\n\nIn the following video, we'll go over ways that truffle can help you improve the contract deployment process. ",
              "instructor_notes": ""
            },
            {
              "id": 781949,
              "key": "f9a33b58-ed81-45dc-88e6-b6c9f9d71851",
              "title": "17.1-How-Truffle-Improves-The-Deployment-Process",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "w-Oag-hugcc",
                "china_cdn_id": "w-Oag-hugcc.mp4"
              }
            },
            {
              "id": 781374,
              "key": "4706f5aa-0adc-4574-ac75-47ce8a6c63a0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "You can find the truffle homepage [here](https://truffleframework.com/)",
              "instructor_notes": ""
            },
            {
              "id": 781375,
              "key": "28826185-fe3b-45bd-802e-04155d23f570",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/28826185-fe3b-45bd-802e-04155d23f570",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 781376,
              "key": "67da4253-fa32-414b-b3f6-247586ad94c9",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 2. Get Started with Truffle\n___\n\nGetting started with Truffle is simple. In next video, I'll go over how you can get up and running with your first contract.\n\n",
              "instructor_notes": ""
            },
            {
              "id": 782128,
              "key": "a8364363-d8f9-4f6b-9367-5c0f6f0052be",
              "title": "18.2-Get-Started-With-Truffle",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "E2YMUl26YVc",
                "china_cdn_id": "E2YMUl26YVc.mp4"
              }
            },
            {
              "id": 781378,
              "key": "83a5580c-fee5-442d-a132-2337c7cd31fc",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "#### Resources\n* [Truffle Installation Instructions](https://truffleframework.com/truffle)",
              "instructor_notes": ""
            },
            {
              "id": 782778,
              "key": "ebe70465-e24e-4a32-8881-0537b93f0f32",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "ebe70465-e24e-4a32-8881-0537b93f0f32",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "**Step 1:** Install Truffle",
                "**Step 2:** Set up a project directory",
                "**Step 3:** Initialize Truffle"
              ],
              "positive_feedback": "Great job!",
              "video_feedback": null,
              "description": "You can use this checklist to keep track of your progress on the steps listed below."
            },
            {
              "id": 781379,
              "key": "8e348b58-9386-49de-90ab-0b2d04034ce0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Here is a walkthrough of how to get started with your truffle development environment.\n\n#### **Step 1:** Install Truffle\n___\n\n    npm install truffle -g\n\n#### **Step 2:** Set up a project directory\n___\n\n    mkdir myProject\n    cd myProject\n\n#### **Step 3:** Initialize Truffle \n___\n\n    truffle init\n\nThis creates a initializes a truffle project for you. Open your project directory to view the file structure. It should look similar to the image below.\n",
              "instructor_notes": ""
            },
            {
              "id": 781380,
              "key": "16a3911b-e792-4aeb-8005-d92c97da5e16",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5be45e29_screen-shot-2018-11-06-at-12.41.18-pm/screen-shot-2018-11-06-at-12.41.18-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/16a3911b-e792-4aeb-8005-d92c97da5e16",
              "caption": "",
              "alt": "",
              "width": 3104,
              "height": 2014,
              "instructor_notes": null
            },
            {
              "id": 781381,
              "key": "51083aae-79b5-4952-b79e-d16dad166482",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "As you can see, it created a few files and folders for you. You can view the video above for details on the structure provided.",
              "instructor_notes": ""
            },
            {
              "id": 781382,
              "key": "97d5145a-7e65-42dc-99a7-560babd676e1",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "##### Set up the Configuration\nTo set up the connection between truffle and your local blockchain, you'll need to set up the configuration file. Navigate to truffle.js (mac), or truffle-config.js (windows) and paste in the following code as the module exports folder.\n\n    module.exports = {\n        networks: {\n        development: {\n        host: \"127.0.0.1\",\n        port: 8545,\n        network_id: \"*\" // Match any network id\n        }\n      }\n    }; ",
              "instructor_notes": ""
            },
            {
              "id": 781383,
              "key": "e32a04fd-7a9e-47bd-8266-7ea21c78e5f1",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "For more details on this process, you can view the [truffle advanced configuration](https://truffleframework.com/docs/truffle/reference/configuration) site as shown in the configuration file.  At this point, your are fully configured to deploy to your local blockchain using truffle.",
              "instructor_notes": ""
            },
            {
              "id": 781384,
              "key": "a197b25d-ea6c-4f2d-83aa-5dc2beb3cc75",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Truffle Console\n___\n\n",
              "instructor_notes": ""
            },
            {
              "id": 781385,
              "key": "a18e5c09-04f3-4a3c-811b-ebc5a904bb3e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "To deploy your contracts, you'll be using the **truffle console**.\n\nType ```truffle``` from your terminal to see the commands available to you. We won't be going over all of these, but you can see more information about each of these commands in the [truffle documentation ](http://truffleframework.com/docs).",
              "instructor_notes": ""
            },
            {
              "id": 781387,
              "key": "9da6b84a-453d-46b0-afba-bc28a07271da",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5be45e64_screen-shot-2018-11-06-at-12.51.05-pm/screen-shot-2018-11-06-at-12.51.05-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/9da6b84a-453d-46b0-afba-bc28a07271da",
              "caption": "",
              "alt": "",
              "width": 1764,
              "height": 1132,
              "instructor_notes": null
            },
            {
              "id": 782777,
              "key": "cde4a922-42ed-4b02-b0c7-203cf1fe58d2",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "cde4a922-42ed-4b02-b0c7-203cf1fe58d2",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "**Step 1:** Enter the truffle console",
                "**Step 2:** Compile your contract",
                "**Step 3:** Migrate Your Contract"
              ],
              "positive_feedback": "Great job!",
              "video_feedback": null,
              "description": "You can use this checklist to keep track of your progress on the steps listed below."
            },
            {
              "id": 781388,
              "key": "89d29606-a032-41e6-b844-28e9b114ff30",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "For now, we'll focus on using the ```truffle console``` to compile and migrate our smart contract. \n\n#### **Step 1:** Enter the truffle console\n___\n\n    truffle console\n\n#### **Step 2:** Compile your contract\n___\n\nA test contract has been created when you initialized truffle. You can compile this contract using the following command.\n\n    compile\n\n\n\n#### **Step 3:** Migrate Your Contract\n___\nOnce compiled, the contract will need to be migrated. You can do this by running the following command.\n\n    migrate\n\n\nThis is similar to the process you did earlier where you were pasting the ABI from remix into your editor. Once your migration is complete, you can view the contract ABI in a newly created build folder.\n\n\n\n",
              "instructor_notes": ""
            },
            {
              "id": 781389,
              "key": "44dd72e4-60d1-4fa3-a070-3c3e12b78a56",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/November/5be45e7b_screen-shot-2018-11-06-at-1.02.17-pm/screen-shot-2018-11-06-at-1.02.17-pm.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/44dd72e4-60d1-4fa3-a070-3c3e12b78a56",
              "caption": "",
              "alt": "",
              "width": 1552,
              "height": 1007,
              "instructor_notes": null
            },
            {
              "id": 781390,
              "key": "c45cc33e-e7e8-4869-847f-9fcb18d48bcd",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/c45cc33e-e7e8-4869-847f-9fcb18d48bcd",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 781391,
              "key": "4b3856b3-149b-4dee-972d-1c5b7b5a5eac",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Review\n___\n\nHere you learned to improve the deployment process using a tool named truffle. At this point, you have installed, configured, and deployed a contract using truffle. We'll use this knowledge to deploy your previous contract in the next concept.\n",
              "instructor_notes": ""
            },
            {
              "id": 783013,
              "key": "4a9cebf5-df97-41b4-b8b5-0af2ab849f56",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "4a9cebf5-df97-41b4-b8b5-0af2ab849f56",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "1. Identify ways that Truffle can improve the smart contract creation and deployment process.",
                "2. Install truffle to your local environment.",
                "3. Set up a truffle environment and deploy your first contract."
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Track the objectives you've feel you've gained the skills to complete."
            }
          ]
        },
        {
          "id": 782571,
          "key": "09e0373c-6243-4fc2-8807-065e10e9cec7",
          "title": "DApps Next Steps",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "09e0373c-6243-4fc2-8807-065e10e9cec7",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 782580,
              "key": "58ebd5a7-cfc8-45d5-8d25-ddb0d611f7a5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# DApps Next Steps\n___\n\nBy getting set up with Truffle, you're well on your way to making full stack DApps. The last piece is to bridge the gap between what you already know, and to apply this to your new Truffle environment. In this concept, I'll go through an amazing resource you can use to get started, and overview some ways to help improve your skills as an Ethereum Blockchain Developer.\n\n## Objectives\n___\n\n*Our goal is to help you do the following things.*\n\n1. Understand the purpose of truffle boxes and how to get started.\n2. Decide on the next steps you'd like to take to build a DApp using truffle boxes.\n3. Explore truffle 5 beta to get a head start on the latest tools.",
              "instructor_notes": ""
            },
            {
              "id": 782661,
              "key": "3052488c-d053-4aaa-a3ce-07ac424d41d8",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Truffle Boxes and More\n___",
              "instructor_notes": ""
            },
            {
              "id": 782660,
              "key": "2ebe5859-b179-4d00-8448-19fe3b14bf6e",
              "title": "Truffle-Wrap-Up",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "58y25M-_1Tg",
                "china_cdn_id": "58y25M-_1Tg.mp4"
              }
            },
            {
              "id": 782663,
              "key": "bffb1a87-2a70-4a05-a6ea-9cc9eebad300",
              "title": "Next Steps Checklist",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "bffb1a87-2a70-4a05-a6ea-9cc9eebad300",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "In the video, I mentioned some ways you can use Truffle boxes to continue learning about DApps with this tool. Do any of these stand out as projects you'd like to take on next?",
                "answers": [
                  {
                    "id": "a1542000700497",
                    "text": "Complete the Pet Shop truffle box tutorial",
                    "is_correct": true
                  },
                  {
                    "id": "a1542000775861",
                    "text": "Revamp the pet shop truffle box into your own type of shop",
                    "is_correct": false
                  },
                  {
                    "id": "a1542000811872",
                    "text": "Complete the tutorial token tutorial to make your own token",
                    "is_correct": false
                  },
                  {
                    "id": "a1542000847612",
                    "text": "Convert the Ethereum Secret Message DApp into a truffle DApp.",
                    "is_correct": false
                  },
                  {
                    "id": "a1542000887622",
                    "text": "Check out Truffle V5 Beta to stay on top of the latest tools.",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 782587,
              "key": "ec6e2f07-1cc6-4523-b759-67d5c4bdc143",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Review\n___\n\nHere you were introduced to a number of helpful tools that you can start to experiment with. The goal was to help you take your next step in developing DApps, and help get you started with some ideas that haven't been explored in the lesson. \n",
              "instructor_notes": ""
            },
            {
              "id": 783015,
              "key": "df6b696b-d0b3-487f-8ea4-0c8957f426e7",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "df6b696b-d0b3-487f-8ea4-0c8957f426e7",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "1. Understand the purpose of truffle boxes and how to get started.",
                "2. Decide on the next steps you'd like to take to build a DApp using truffle boxes.",
                "3. Explore truffle 5 beta to get a head start on the latest tools."
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Track the objectives you've feel you've gained the skills to complete."
            }
          ]
        },
        {
          "id": 781366,
          "key": "9da8fb23-37fe-4767-93ea-49d9e7e3edae",
          "title": "Optional: Full Ethereum Nodes",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "9da8fb23-37fe-4767-93ea-49d9e7e3edae",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 781412,
              "key": "83e5f0a6-2784-48bb-a8b1-a5d5a15e197b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Optional: Full Ethereum Nodes\n___\n\nOne final way to interact with the Ethereum blockchain is to become a local node for yourself. As you know, all blockchains are made up of a series of distributed nodes on a network. Ethereum is no different, and in this section we'll show you how download your own Ethereum node.\n\n## Objectives\n___\n\n*Our goal is to help you do the following things.*\n\n1. Install and interact with the Geth CLI. \n2. Install and Interact with the Geth GUI",
              "instructor_notes": ""
            },
            {
              "id": 781413,
              "key": "22ab8571-8843-4d44-a686-a97b5221b5b2",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 1. Ethereum Command Line Interface\n___\n\nThere are many tools available to help you develop using Ethereum. On extremely important tool is the Ethereum client, which includes a CLI that you can use to interact with the Ethereum blockchain (in this course we will be using the Ethereum CLI called Geth).\n\nIn this section, PK goes over how to get started with the CLI on your computer. Later in the program, we'll be using this tool extensively, but first it's important to get it up and running for yourself.\n\n### What is Geth?\nGeth is a multipurpose command line tool that runs a full Ethereum node implemented in the programming language Go. It has three interfaces - an interactive console, the command line subcommands and options, and a json-rpc server.",
              "instructor_notes": ""
            },
            {
              "id": 781414,
              "key": "e7680bc9-e90a-4b80-b3d2-bbe76961382c",
              "title": "Ethereum Command Line Interface CLI",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "OKTjNZjhCA4",
                "china_cdn_id": "OKTjNZjhCA4.mp4"
              }
            },
            {
              "id": 781415,
              "key": "09d8ddc9-71ac-4424-b763-ac651c7f8101",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Resources\n___\n\nGeth is such an important tool for developers.  For that reason, there are many resources and communities involved with the research, upkeep, and use of this tool. Below we put together a list of resources you can use to stay involved with everything going on in this space. Feel free to explore each of these resources yourself, and if you're ready, jump in and join the community!\n\n> [Geth Website](https://ethereum.github.io/go-ethereum/)\n\n> [Geth Github](https://github.com/ethereum/go-ethereum)\n\n> [Geth Wiki](https://github.com/ethereum/go-ethereum/wiki/geth)\n\n> [Geth Community](https://gitter.im/ethereum/go-ethereum)\n\n> [Download Geth](https://ethereum.github.io/go-ethereum/downloads/)\n\n> [Installation instructions for Mac](https://github.com/ethereum/go-ethereum/wiki/Installation-Instructions-\nfor-Mac)\n\n> [Command Line Options](https://github.com/ethereum/go-ethereum/wiki/Command-Line-Options)\n\n> [Etherescan - Rinkeby](https://rinkeby.etherscan.io/blocks)\n\n> [Rinkeby IO](https://www.rinkeby.io/#stats)",
              "instructor_notes": ""
            },
            {
              "id": 781416,
              "key": "519765ac-b634-44f0-9914-6ef97a601732",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 2. Ethereum Graphical User Interface\n___\n\nAs well as a CLI, Ethereum also provides a GUI to help you work with their platform more easily. This provides many of the same features of the CLI in a friendlier environment. In this section, PK shows you how to get started with the Ethereum GUI for yourself.",
              "instructor_notes": ""
            },
            {
              "id": 781417,
              "key": "2fbcd92f-babc-45ad-92f4-f870c725ac33",
              "title": "Ethereum Graphical User Interface GUI",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "__cAuQeUphk",
                "china_cdn_id": "__cAuQeUphk.mp4"
              }
            },
            {
              "id": 781418,
              "key": "b26a8b05-5ddd-4220-8e9a-6994cac679af",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Resources\n___\n\nThis section provided you the steps needed to get up and running with the with the Ethereum GUI. Once getting started, you'll want to continue exploring resources available for these tools. When you get some time, continue exploring these resources to learn even more about the tools you'll be working with.\n\n> [Mist / Ethereum Wallet](http://ethdocs.org/en/latest/ethereum-clients/choosing-a-client.html#what-should-i-install-on-my-desktop-laptop)\n\n> [Ethereum GUI - Mist](https://ethereum.org/)\n\n> [See other GUI versions](https://github.com/ethereum/mist/releases/tag/v0.11.1)",
              "instructor_notes": ""
            },
            {
              "id": 781419,
              "key": "0478141e-c8c1-4292-b058-b6e1ae2102b3",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Concept Review\n___\n\n\nHere we went over how you can get set up with a full Ethereum node on your local computer using geth.\n",
              "instructor_notes": ""
            },
            {
              "id": 783018,
              "key": "4298651f-58c6-438a-844c-345174e88075",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "4298651f-58c6-438a-844c-345174e88075",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "1. Install and interact with the Geth CLI.",
                "2. Install and Interact with the Geth GUI"
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Track the objectives you've feel you've gained the skills to complete."
            }
          ]
        },
        {
          "id": 778694,
          "key": "de4af724-856e-42ae-80a7-6e729d24732d",
          "title": "Lesson Recap",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "de4af724-856e-42ae-80a7-6e729d24732d",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 779622,
              "key": "646bdb79-9455-48a9-8c95-7dbcde928406",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Congratulations!\n___\n\nAmazing job making it through this Introduction to Ethereum! Here's a look back at what you've accomplished, and how it relates to the rest of your journey.\n",
              "instructor_notes": ""
            },
            {
              "id": 781950,
              "key": "c15cf8f1-ec2c-45bc-b979-890fe2f2462c",
              "title": "C4L1-18 HS-A Lesson Recap",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "2Kh4MXWfnXY",
                "china_cdn_id": "2Kh4MXWfnXY.mp4"
              }
            },
            {
              "id": 783019,
              "key": "c947a4a3-ded1-4453-b4f0-4d82fcf01fc4",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "c947a4a3-ded1-4453-b4f0-4d82fcf01fc4",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Understand what Ethereum is, why it's important, and how it's different from other Blockchain platforms.",
                "Connect to the Ethereum tools and community available to you as an Ethereum blockchain developer.",
                "Create a simple decentralized application that connects to the Ethereum blockchain."
              ],
              "positive_feedback": "We are happy to hear about the skills you now feel confident in!",
              "video_feedback": null,
              "description": "Track the objectives you've feel you've gained the skills to complete."
            },
            {
              "id": 779626,
              "key": "90e6c845-f696-4aa3-a477-72829c80853a",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/90e6c845-f696-4aa3-a477-72829c80853a",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 779625,
              "key": "c7a48f32-7a46-491a-8e66-17e1ac3edf1b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## What's next?\n___\n\nThis lesson is focused on getting you introduced to the Ethereum platform as a whole. We didn't yet cover the details of smart contracts or the solidity programming language. That will be covered in the next lesson, Lesson 02: Introduction to Solidity!\n\nWhen you're ready, feel free to get started with the next lesson. See you there!\n\n",
              "instructor_notes": ""
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    }
  ]
}