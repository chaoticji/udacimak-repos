{
  "data": {
    "lesson": {
      "id": 713437,
      "key": "d2f7eb7c-0368-4f3f-9288-39069990a0e3",
      "title": "Decentralized Star Notary Service Project",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "For your next project, you will create a DApp by adding functionality with your smart contract and deploy it on the public testnet. ",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/d2f7eb7c-0368-4f3f-9288-39069990a0e3/713437/1555417436953/Decentralized+Star+Notary+Service+Project+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/d2f7eb7c-0368-4f3f-9288-39069990a0e3/713437/1555417434389/Decentralized+Star+Notary+Service+Project+Subtitles.zip"
          },
          {
            "name": "Starter Code - Project: Decentralized Star Notary with/without Zeppelin",
            "uri": "https://video.udacity-data.com/topher/2018/September/5ba55d78_project-5-starter-code/project-5-starter-code.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": {
        "key": "7fec2502-fb41-4d9c-bef8-e912475f46a9",
        "version": "1.0.0",
        "locale": "en-us",
        "duration": 30240,
        "semantic_type": "Project",
        "title": "Build CryptoStar Dapp on Ethereum",
        "description": "## Project 5 Instructions\n\n## Task 1\n#### Your Project is to Modify the StarNotary version 2 contract code to achieve the following:\n\n\n- Add a name and a symbol for your starNotary tokens. [Resource](https://classroom.udacity.com/nanodegrees/nd1309/parts/2e478a90-310b-4703-aa20-efec12eb258c/modules/f1d81730-f430-46fb-a490-0f260a65f997/lessons/70703034-f10d-45a9-9979-fa8afc8ea42c/concepts/e987f2c0-addc-470b-b180-d72139d1e71b)\n\n\n- Add a function lookUptokenIdToStarInfo, that looks up the stars using the Token ID, and then returns the name of the star.\n\n\n- Add a function called exchangeStars, so 2 users can exchange their star tokens...Do not worry about the price, just write code to exchange stars between users.\n\n\n- Write a function to Transfer a Star. The function should transfer a star from the address of the caller. The function should accept 2 arguments, the address to transfer the star to, and the token ID of the star.\n\n## Task 2\n#### Add supporting unit tests, to test the following:\n\n- The token name and token symbol are added properly.\n\n\n- 2 users can exchange their stars.\n\n\n- Stars Tokens can be transferred from one address to another.\n\n## Task 3\n#### Deploy your Contract to Rinkeby\n\n- Edit the truffle.config file to add settings to deploy your contract to the Rinkeby Public Network.   \n\n \n##### *Helper Points: *\n\n- Command used to deploy to Rinkeby   `truffle migrate --reset --network rinkeby`\n\n\n- You will need to have your Metamask’s seed and  Infura setup.\n\n\n- This was shown to you in detail in the lesson on Solidity, while creating ERC-20 tokens on Rinkeby.\n\n## Task 4\n\n#### Modify the front end of the DAPP to achieve the following: \n\n- Lookup a star by ID using tokenIdToStarInfo() (you will have to add code for this in your index.html and index.js files)\n\n\n## Project Submission Instructions:\n\n- Inside your project folder, create a Readme.md file. The readme.md file should include the following:\n\n - Specify the Truffle version and OpenZeppelin version used in the project.\n - Your ERC-721 Token Name\n - Your ERC-721 Token Symbol\n - Your “Token Address” on the Rinkeby Network\n\n\n- Upload your folder to GitHub.\n\n- Submit your GitHub Repository Link.\n\n\n## Evaluation\n\nYour project will be evaluated by a Udacity reviewer according to the [Project Rubric](https://review.udacity.com/#!/rubrics/2297/view). Be sure to review it thoroughly before you submit. All criteria must \"meet specifications\" in order to pass.\n\n\n## What's next?\n\nOnce your project is submitted it will be picked up by one of our project reviewers. They will provide detailed feedback based on your submission and get back to you within 24 hours. Once your feedback is complete, you will receive an email with details about your project review.\n\n## Project Submission Checklist\n\n**Before submitting your project, please review and confirm the following items.** \n<input type=\"checkbox\"> I am confident all rubric items have been met and my project will pass as submitted. (If not, I will discuss with my mentor prior to submitting.)\n<input type=\"checkbox\"> Project builds correctly without errors and runs.\n<input type=\"checkbox\"> All required functionality exists and my project behaves as expected per the project's specifications.\n\n**Once you have checked all these items, you are ready to submit!**\n",
        "is_public": true,
        "summary": null,
        "forum_path": "",
        "rubric_id": "2297",
        "terminal_project_id": null,
        "resources": null,
        "image": {
          "url": "https://s3.amazonaws.com/video.udacity-data.com/topher/2019/January/5c5349c1_build-cryptostar-dapp-on-ethereum/build-cryptostar-dapp-on-ethereum.png",
          "width": 1160,
          "height": 384
        }
      },
      "lab": null,
      "concepts": [
        {
          "id": 801248,
          "key": "93920597-bde4-4974-b4b7-742fe4b6201f",
          "title": "Project Instructions",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "93920597-bde4-4974-b4b7-742fe4b6201f",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 801249,
              "key": "159a7311-be9f-4f41-a859-61b14635e511",
              "title": "C4L3 49 Project 5 Instructions Explained",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "hL-3l9tW8mU",
                "china_cdn_id": "hL-3l9tW8mU.mp4"
              }
            }
          ]
        },
        {
          "id": 801250,
          "key": "de9350d4-1962-4c75-b339-c3185486e001",
          "title": "Project BoilerPlate Code",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "de9350d4-1962-4c75-b339-c3185486e001",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 814573,
              "key": "eb314183-3a94-4933-96e9-3580ff4b896d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# DAPP Project 5 Boilerplate Code\n---",
              "instructor_notes": ""
            },
            {
              "id": 814574,
              "key": "13dac9ee-8a2f-403f-bd67-7d8eaa0bed32",
              "title": "Setting Environment P5",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Or4hGw_9e9Y",
                "china_cdn_id": "Or4hGw_9e9Y.mp4"
              }
            },
            {
              "id": 801251,
              "key": "03d669ec-f096-456f-b920-53f40b9ba015",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "This Starter Code has already implemented the functionalities you implemented in the StarNotary (Version 2) exercise, and have comments in all the files you need to implement your tasks.\n\nYou will need to have the latest version of Truffle (V5...) and the latest version of Metamask Chrome extension installed.",
              "instructor_notes": ""
            },
            {
              "id": 813987,
              "key": "e9fb9e81-7415-4495-a2ad-a07831a78c01",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/December/5c0adddf_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/e9fb9e81-7415-4495-a2ad-a07831a78c01",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 813988,
              "key": "91ef44b8-8e30-4f86-ae77-1be178b19857",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Instructions\n---\n\n\n- Starter code is available at \n\n   [Download here the Starter Code](https://s3.amazonaws.com/video.udacity-data.com/topher/2019/January/5c51c4c0_project-5-starter-code/project-5-starter-code.zip)\n\n\n- Open the **package-lock.json** and verify that `truffle-hdwallet-provider` and `openzeppelin-solidity` dependencies are installed. If not you can always install it with the commands:\n\n   `npm install --save truffle-hdwallet-provider`\n\n    `npm install --save openzeppelin-solidity`\n\n- For starting the development console, run:\n\n    `truffle develop`\n\n- For compiling the contract, inside the development console, run:\n\n    `compile`\n\n- For migrating the contract to the locally running Ethereum network, inside the development console, run:\n\n    `migrate --reset`\n\n- For running unit tests the contract, inside the development console, run:\n\n    `test`\n\n\n- For running the Front End of the DAPP, open another terminal window and go inside the project directory, and run:\n\n    `cd app`\n\n    `npm run dev`\n",
              "instructor_notes": ""
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    }
  ]
}