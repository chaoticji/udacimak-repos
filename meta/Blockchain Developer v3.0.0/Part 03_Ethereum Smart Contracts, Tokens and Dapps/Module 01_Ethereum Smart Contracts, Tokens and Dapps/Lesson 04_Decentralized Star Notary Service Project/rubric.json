{
  "id": 2297,
  "project_id": 526,
  "upload_types": [
    "repo"
  ],
  "file_filter_regex": "\\A(?!(((.*/)?(__MACOSX|\\.git|node_modules|bower_components|jspm_packages|\\.idea|build|.ipynb_checkpoints|\\.Trash-0|logs)(\\Z|/))))((.*\\.(css|docx|gradle|htm|html|java|js|markdown|md|pdf|py|rmd|rst|sol|sql|swift|txt|xml|yaml|yml)\\Z)|((.*/)?(README|Readme|readme|Makefile)\\Z))",
  "nomination_eligible": false,
  "stand_out": "",
  "hide_criteria": false,
  "created_at": "2018-09-10T14:29:06.282Z",
  "updated_at": "2019-07-18T08:19:33.413Z",
  "hashtag": "",
  "max_upload_size_mb": 500,
  "estimated_sla": null,
  "project_assistant_enabled": false,
  "checkmate_enabled": false,
  "checkmate_metadata": null,
  "available_for_cert_project": false,
  "classroom_node_id": 713438,
  "classroom_project_key": "7fec2502-fb41-4d9c-bef8-e912475f46a9",
  "language": "en-us",
  "ndkeys": [
    "nd1309-mena-connect",
    "nd1309",
    "nd1309-beta",
    "nd1309-ent",
    "nd1309-cn"
  ],
  "coursekeys": [],
  "sections": [
    {
      "id": 4889,
      "name": "Add Smart Contract Functions",
      "created_at": "2018-09-12T23:07:36.330Z",
      "updated_at": "2018-12-26T20:55:29.774Z",
      "deleted_at": null,
      "position": 0,
      "rubric_id": 2297,
      "rubric_items": [
        {
          "id": 14197,
          "section_id": 4889,
          "passed_description": "Add a name and a symbol to the starNotary tokens.\nIn the Starter Code (StarNotary.sol file) you implement:\n```\n// Implement Task 1 Add a name and symbol properties\n// name: Is a short name to your token\n// symbol: Is a short string like 'USD' -> 'American Dollar'\n```",
          "exceeded_description": "",
          "created_at": "2018-09-12T23:08:03.026Z",
          "updated_at": "2019-01-29T18:23:26.332Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "The smart contract tokens should have a name and a symbol.",
          "exceedable": false
        },
        {
          "id": 14198,
          "section_id": 4889,
          "passed_description": "Add a function `lookUptokenIdToStarInfo`, that looks up the stars using the Token ID, and then returns the name of the star.",
          "exceeded_description": "",
          "created_at": "2018-09-12T23:08:18.339Z",
          "updated_at": "2019-01-29T18:23:26.364Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Implement the function: **lookUptokenIdToStarInfo** in StarNotary.sol file\n\n```\n// Implement Task 1 lookUptokenIdToStarInfo\nfunction lookUptokenIdToStarInfo (uint _tokenId) public view returns (string memory) {\n        \n }\n```",
          "exceedable": false
        },
        {
          "id": 14199,
          "section_id": 4889,
          "passed_description": "Add a function called `exchangeStars`, so 2 users can exchange their star tokens. Do not worry about the price, just write code to exchange stars between users.",
          "exceeded_description": "",
          "created_at": "2018-09-12T23:08:32.054Z",
          "updated_at": "2019-01-29T18:34:15.619Z",
          "deleted_at": null,
          "optional": false,
          "position": 2,
          "criteria": "Implement the function: **exchangeStars** in StarNotary.sol file.\n```\n// Implement Task 1 Exchange Stars function\nfunction exchangeStars(uint256 _tokenId1, uint256 _tokenId2) public {\n      \n }\n```",
          "exceedable": false
        },
        {
          "id": 14200,
          "section_id": 4889,
          "passed_description": "Write a function to Transfer a Star. The function should transfer a star from the address of the caller. The function should accept 2 arguments, the address to transfer the star to, and the token ID of the star.",
          "exceeded_description": "",
          "created_at": "2018-09-12T23:08:46.115Z",
          "updated_at": "2019-01-29T18:34:15.625Z",
          "deleted_at": null,
          "optional": false,
          "position": 3,
          "criteria": "Implement the function **transferStar** in StarNotary.sol file.\n```\nfunction transferStar(address _to1, uint256 _tokenId) public {\n        \n    }\n```",
          "exceedable": false
        }
      ]
    },
    {
      "id": 4890,
      "name": "Add supporting Unit Tests",
      "created_at": "2018-09-12T23:09:12.074Z",
      "updated_at": "2018-12-26T20:55:29.838Z",
      "deleted_at": null,
      "position": 1,
      "rubric_id": 2297,
      "rubric_items": [
        {
          "id": 14201,
          "section_id": 4890,
          "passed_description": "Tests for:\n\n1) The token name and token symbol are added properly.\n```\nit('can add the star name and star symbol properly', async() => {\n    \n});\n```\n2) 2 users can exchange their stars.\n```\nit('lets 2 users exchange stars', async() => {\n\n});\n```\n3) Stars Tokens can be transferred from one address to another.\n```\nit('lets a user transfer a star', async() => {\n\n});\n```",
          "exceeded_description": "",
          "created_at": "2018-09-12T23:09:17.011Z",
          "updated_at": "2019-01-29T18:34:15.629Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Add supporting Unit Tests in **TestStarNotary.js** file.",
          "exceedable": false
        }
      ]
    },
    {
      "id": 4891,
      "name": "Deploy your Contract to Rinkeby",
      "created_at": "2018-09-12T23:10:30.967Z",
      "updated_at": "2018-12-26T20:55:29.853Z",
      "deleted_at": null,
      "position": 2,
      "rubric_id": 2297,
      "rubric_items": [
        {
          "id": 14203,
          "section_id": 4891,
          "passed_description": "`truffle-config.js` file should have settings to deploy the contract to the Rinkeby Public Network.\n\nInfura should be used in the truffle-config.js file for deployment to Rinkeby.",
          "exceeded_description": "",
          "created_at": "2018-09-12T23:10:39.043Z",
          "updated_at": "2019-01-30T15:55:10.018Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "File truffle-config.js is configured to support deploying the contract to Rinkeby Public Network.",
          "exceedable": false
        }
      ]
    },
    {
      "id": 4892,
      "name": "Modify the front end of the DAPP",
      "created_at": "2018-09-12T23:11:16.833Z",
      "updated_at": "2018-12-26T20:55:29.869Z",
      "deleted_at": null,
      "position": 3,
      "rubric_id": 2297,
      "rubric_items": [
        {
          "id": 14206,
          "section_id": 4892,
          "passed_description": "When you click on the button \"Look Up a Star\" the application shows in the status the Star information.",
          "exceeded_description": "",
          "created_at": "2018-09-12T23:11:25.898Z",
          "updated_at": "2019-01-29T18:34:15.635Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Implement the front-end function **lookUp** in the index.js file. \n```\nlookUp: async function (){\n    \n  }\n```",
          "exceedable": false
        }
      ]
    },
    {
      "id": 5255,
      "name": "Add a Readme.md file",
      "created_at": "2018-12-26T20:56:31.062Z",
      "updated_at": "2019-01-02T13:27:07.641Z",
      "deleted_at": null,
      "position": 5,
      "rubric_id": 2297,
      "rubric_items": [
        {
          "id": 15208,
          "section_id": 5255,
          "passed_description": "The readme.md file should include the following:\n\n1) Your ERC-721 Token Name\n2) Your ERC-721 Token Symbol\n3) Version of the Truffle and OpenZeppelin used",
          "exceeded_description": null,
          "created_at": "2018-12-26T20:56:50.351Z",
          "updated_at": "2019-01-29T18:34:15.641Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Inside your project folder, create a `readme.md` file. ",
          "exceedable": false
        }
      ]
    }
  ],
  "project": {
    "id": 526,
    "name": "Decentralized Star Notary",
    "nanodegree_key": "nd1309",
    "is_cert_project": false,
    "audit_project_id": null,
    "hashtag": null,
    "audit_rubric_id": 1144,
    "entitlement_required": false,
    "is_career": false,
    "recruitment_family_id": 10,
    "awaiting_review_count": 0,
    "awaiting_review_count_by_language": {},
    "awaiting_audit_count": 0,
    "awaiting_quality_audit_count": 0,
    "awaiting_training_audit_count": 0,
    "created_at": "2018-09-11T18:57:51.144Z",
    "updated_at": "2020-05-01T17:20:15.952Z",
    "price": "8.0",
    "ungradeable_price": "3.0",
    "audit_price": null
  }
}