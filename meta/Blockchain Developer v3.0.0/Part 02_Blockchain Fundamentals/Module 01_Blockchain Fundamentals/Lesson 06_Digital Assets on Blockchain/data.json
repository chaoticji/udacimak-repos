{
  "data": {
    "lesson": {
      "id": 703482,
      "key": "907321be-73ee-42d5-9b0d-5cf1175f9af5",
      "title": "Digital Assets on Blockchain",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "Work with digital assets programmatically using your terminal and javascript. ",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/907321be-73ee-42d5-9b0d-5cf1175f9af5/703482/1555417402620/Web+Services+%26+Digital+Assets+with+Blockchain+Identity+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/907321be-73ee-42d5-9b0d-5cf1175f9af5/703482/1555417394317/Web+Services+%26+Digital+Assets+with+Blockchain+Identity+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 703485,
          "key": "d687af37-127b-453f-8fa6-0c1948962fde",
          "title": "Lesson Overview",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "d687af37-127b-453f-8fa6-0c1948962fde",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 840633,
              "key": "1615f9a8-5b92-43b8-ae36-6c9590f695b3",
              "title": "Lesson Overview",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "fHTsmi77bPU",
                "china_cdn_id": "fHTsmi77bPU.mp4"
              }
            },
            {
              "id": 703486,
              "key": "dca0eb2c-1f40-464f-8f88-811af016ea72",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Lesson Goals\nThroughout this lesson, you will be working with digital assets programmatically using your terminal and javascript. This is meant to help prepare you for the next project where you will utilize these skills in your own private blockchain.\n\nAlso you will familiarize with some ideas on how to expose your Blockchain functionalities to your clients using RESTApi's.\n\n**Digital Assets**\n- Discuss what digital assets are and how they are related to the blockchain\n\n**Encode/Decode Data**\n- Learn to explain the purpose that encoding, decoding, and what this purpose this serves for digital\n- Generate raw data from different types of digital assets from the terminal\n- Learn to generate raw data from different types of digital assets using Javascript\n\n**Proof of Existence** \n- Learn a new concept \"proof of existence\" and see one way this is implemented using an online service known as poex.\n\n**Secure Assets Using Your Digital Identity**\n- Understand how a identity can be used to secure digital assets and why this is helpful\n\n**Blockchain Generations**\n- Discuss digital asset management and how it fits into the overall scheme of blockchain generations",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 703487,
          "key": "cfb764b9-a4cb-4811-901f-6e4559c2b222",
          "title": "Digital Assets",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "cfb764b9-a4cb-4811-901f-6e4559c2b222",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 703496,
              "key": "c1cc02b7-68b0-46c9-9c1f-5b57ebb64f38",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Digital Assets\nWelcome to this section on **digital assets**! In this section we'll go over some of the basic ideas behind digital assets like what they are, why they're important, and how they are related to the blockchain. The goal is to help get you prepared to work with digital assets for yourself using your own private blockchain. ",
              "instructor_notes": ""
            },
            {
              "id": 703497,
              "key": "fea8c72e-98af-4f02-9f50-42eac50f50cc",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/August/5b86cc6e_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/fea8c72e-98af-4f02-9f50-42eac50f50cc",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 703498,
              "key": "b76f80ee-c646-4ca7-a4df-92c6efcaf725",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Digital Assets Overview\nIn this video, we'll cover the basic ideas and terminology related to digital assets.",
              "instructor_notes": ""
            },
            {
              "id": 840634,
              "key": "b6e5c207-c025-4214-bb6d-acb99030d869",
              "title": "Digital Assets",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "gqy4xEntqT8",
                "china_cdn_id": "gqy4xEntqT8.mp4"
              }
            },
            {
              "id": 703499,
              "key": "bb6c9aef-523d-4741-9ee6-e7a230579327",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/August/5b86cc8c_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/bb6c9aef-523d-4741-9ee6-e7a230579327",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 703500,
              "key": "4c7089e4-718a-40c0-93fb-adbb18504004",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Key Terms\n> **Digital Asset** - Digitally stored content or online account owned by an individual\n\n# Resources\n> [Gif](https://techterms.com/definition/gif)\n\n> [JPG](https://techterms.com/definition/jpeg)\n\n> [MP3](https://techterms.com/definition/mp3)",
              "instructor_notes": ""
            },
            {
              "id": 703502,
              "key": "da015825-59cf-47a2-b21e-a29afb3ea769",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/August/5b86cca4_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/da015825-59cf-47a2-b21e-a29afb3ea769",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 703503,
              "key": "12fac5fd-7f33-45c6-9bae-025d2751f49f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Wrap Up\n\nNow that we went over some of the fundamental concepts behind digital assets, we'll move onto some new ideas related to how these assets stored and transferred online. The core idea here is around encoding and decoding and we'll discuss more about that in the next section. ",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 703510,
          "key": "e5c8fef4-380c-4f3a-b38b-8836038a00b0",
          "title": "Encode and Decode Basics",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e5c8fef4-380c-4f3a-b38b-8836038a00b0",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 703511,
              "key": "185c28a3-8484-4767-834e-9c18d4684412",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Encoding and Decoding \nIn this section, we'll tie together the ideas of digital assets and take the first step toward implementing them in the blockchain. We'll discuss how assets are encoded and decoded to help facilitate communications between people and computers. \n\nThe goal is to set you up for the next section where you'll start to encode and decode text and images for yourself.",
              "instructor_notes": ""
            },
            {
              "id": 703513,
              "key": "b0cb96ca-b758-42ef-a48b-7fe1d0aeffa0",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/August/5b86cd46_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/b0cb96ca-b758-42ef-a48b-7fe1d0aeffa0",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 703515,
              "key": "ad2f8619-b496-4a27-abc2-51e2becdfc6d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Encoding and Decoding Basics",
              "instructor_notes": ""
            },
            {
              "id": 703516,
              "key": "ed007b4c-3463-479e-9e45-5311fe7435eb",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "In this video, we'll overview what encoding and decoding are, define each of these terms more specifically, then go over a few examples of each.",
              "instructor_notes": ""
            },
            {
              "id": 840635,
              "key": "c3b110d4-96a1-41e2-8a6d-4e50f0259bbc",
              "title": "Encode And Decode Data - Part 1",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "WVqO1tJPhlg",
                "china_cdn_id": "WVqO1tJPhlg.mp4"
              }
            },
            {
              "id": 703518,
              "key": "859ba517-fc5a-4cb4-b55f-79c2d18d53e3",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/August/5b86cd85_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/859ba517-fc5a-4cb4-b55f-79c2d18d53e3",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 703519,
              "key": "844f5dc8-4e75-48b1-b1ef-dc0a5528df3f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Key Terms\n> **Encode** - Process of putting a sequence of characters into a specialized format for efficient transmission or storage\n\n> **Decode** - Takes encoded, raw, unreadable files and converts them back into human readable format",
              "instructor_notes": ""
            },
            {
              "id": 703520,
              "key": "23aa16a2-4381-4cf1-b83b-81c405ca442a",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/August/5b86cd9c_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/23aa16a2-4381-4cf1-b83b-81c405ca442a",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 703521,
              "key": "fa64a7cb-23f6-4345-8128-b6e0d534beee",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Types of Encoding and Decoding\nIn the previous video we mentioned a few encoding schemes like ASCII, hexadecimal, and Base64. In this next video, we'll explore each of these in a little more detail.",
              "instructor_notes": ""
            },
            {
              "id": 840636,
              "key": "f22ca596-e174-4a42-a871-62883a36b03d",
              "title": "Encode and Decode Data - Part 2",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "5Qgnm3ZlHuI",
                "china_cdn_id": "5Qgnm3ZlHuI.mp4"
              }
            },
            {
              "id": 703523,
              "key": "0d2e190a-049f-4b40-a7ae-d8fbe8fb9eb6",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Key Terms\n> **ASCII** - American Standard Code for Information Interchange\n\n> **Hexadecimal** - More concise and human readable representation of binary\n\n> **Base64** - Encoding scheme meant to represent data as numbers in a string format\n",
              "instructor_notes": ""
            },
            {
              "id": 703524,
              "key": "ff5340a9-40a6-4e3c-b681-e2ca24a90555",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Resources\nIn the previous video, we went through a few different quick demonstrations and I referenced some resources you can use to learn more about each of these encoding schemes. While a deeper understanding of each of these isn't really necessary right now, it's always great to explore! Feel free to check out some of these resources and experiment for yourself with each of the demonstrations.\n\n> **ASCII**  \n* [How numbers are encoded as character is ASCII](http://www.asciitable.com/)\n* [Text to ASCII Converter](http://www.unit-conversion.info/texttools/ascii/)\n* [ASCII Wiki](https://en.wikipedia.org/wiki/ASCII)\n\n> **Hexadecimal**\n* [How do HEX color codes work?](https://www.youtube.com/watch?v=c56x1aj2CPA)\n* [Text to Hex Converter](http://www.convertstring.com/EncodeDecode/HexEncode)\n* [Hexadecimal Wiki](https://en.wikipedia.org/wiki/Hexadecimal)\n\n> **Base64**\n* [Base64 Encoding](https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding)\n* [Text to Base64 Converter](https://www.base64encode.org/)\n* [Base64 Wiki](https://en.wikipedia.org/wiki/Base64)",
              "instructor_notes": ""
            },
            {
              "id": 703525,
              "key": "bb40404b-6c7f-437d-b441-c8b4812bbf8f",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/August/5b86cded_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/bb40404b-6c7f-437d-b441-c8b4812bbf8f",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 703526,
              "key": "af8d0743-9565-4fbe-a27c-7ce36558824e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Wrap Up\n\nHopefully you now have a decent understanding of what digital assets are and how encoding and decoding are related to helping send and receive these assets. Coming up, you'll try to encode and decode some information yourself using the terminal.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 703504,
          "key": "dbd37af1-662a-4ed3-a7c1-ecfc92565c19",
          "title": "Encode and Decode from Terminal",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "dbd37af1-662a-4ed3-a7c1-ecfc92565c19",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 703505,
              "key": "4a1c4d25-afcb-44a3-9217-f13d23ecac42",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Encode and Decode Demonstration\n\nAt this point we've gone over some theory behind digital assets, encoding, and decoding. Now it's time to put some of this new knowledge into practice. In this section, we'll start putting these ideas into practice to encode and decode our own assets!",
              "instructor_notes": ""
            },
            {
              "id": 703507,
              "key": "8c865b76-4221-412f-b68f-8d60c87919f9",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/August/5b86cce0_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/8c865b76-4221-412f-b68f-8d60c87919f9",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 703509,
              "key": "c518d3ac-8687-4db6-b37a-dd9c57ce4474",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Encode and Decode Information from the Terminal\n\nIn this video, we'll go over 3 demonstrations.\n* Encode and decode **text** within the terminal\n* Encode and decode **text files** from the terminal\n* Encode and decode **image files** from the terminal\n\nIf you're following along, you can use the code snippets from below the video, or you can try it for yourself using your own files and images.",
              "instructor_notes": ""
            },
            {
              "id": 840637,
              "key": "70fe3cd7-ce41-4611-97f6-b01d2dd90ab3",
              "title": "Encode and Decode Data Demonstration",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "hsf5h10Arro",
                "china_cdn_id": "hsf5h10Arro.mp4"
              }
            },
            {
              "id": 703528,
              "key": "f8b201da-8811-4ffe-bd42-7baa61506185",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/August/5b86ce35_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/f8b201da-8811-4ffe-bd42-7baa61506185",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 703529,
              "key": "9160991e-2b83-45db-bd40-5668dbcb45df",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Encode and Decode Text from Terminal\n* String to hex: ``` xxd -p <<< \"Blockchain Developer\"```\n* Hex to string: ```echo 426c6f636b636861696e20446576656c6f7065720a|xxd -r -p```\n\n## Encode and Decode Text from Terminal Using Files\n\n* Create file: ```touch hello.txt```\n* Add text to file\n* String to Hex: ```xxd -p hello.txt helloEncoded.txt```\n* Hex to String: ```xxd -p -r helloEncoded.txt helloDecoded.txt```\n\n## Encode and Decode Image from Terminal Using Files\n* Find image file and place in directory\n* Image to Hex: ```xxd  -p cat.png cat.txt```\n* Hex to Image: ```xxd  -p -r cat.txt catDecoded.png```",
              "instructor_notes": ""
            },
            {
              "id": 703531,
              "key": "8d6d6234-db64-4116-acb1-362c37986f97",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/August/5b86ce51_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/8d6d6234-db64-4116-acb1-362c37986f97",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 703530,
              "key": "c46cb0a0-6c6e-4142-9bde-ed49117eb279",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Wrap Up\n\nCongratulations, you can now encode and decode both text and images. That's a great start! Remember that the goal here is to get this type of functionality to help support our blockchain application. To do that, we'll first need to do this in **node.js**. That's what we'll work on next!",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 676130,
          "key": "f3253332-e5b1-44bd-9e1b-e1f252cdfc09",
          "title": "Encode and Decode with Node.js ",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f3253332-e5b1-44bd-9e1b-e1f252cdfc09",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 676667,
              "key": "e1c5d8e3-2023-4e25-ba70-8cd7f82a6dbe",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Encoding and Decoding Image Data with Node.js\n\nIn this section we'll focus on the same ideas of encoding and decoding digital assets using node.js rather than the terminal. This will allow us to work with this functionality in a way that we can integrate with our private blockchain. \n\nOnce we have this we’ll use a similar method to add this type of data onto a block on our blockchain.\nTo do that we’ll need to get a digital asset, write a few lines of javascript, then look at the output to see our encoded asset.\n",
              "instructor_notes": ""
            },
            {
              "id": 676746,
              "key": "d55db653-2e09-48c4-835b-db0bdee90f4c",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/d55db653-2e09-48c4-835b-db0bdee90f4c",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 676668,
              "key": "0fce8ccc-d0a9-4551-b349-674aac88483a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Encode and Decode an Image\n\nFor this demonstration, we’ll focus on converting an image into hex. You can use any image you'd like, but here’s a look at the image we’ll use, named **test-pattern.jpg**.\n\n*Note: If you use a different image, either rename the file **test-pattern.jpg** or update the code to match whatever file name you prefer.*",
              "instructor_notes": ""
            },
            {
              "id": 676677,
              "key": "800c6836-9763-4fc8-a54b-61952d9781f4",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b4fa793_test-pattern/test-pattern.jpg",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/800c6836-9763-4fc8-a54b-61952d9781f4",
              "caption": "",
              "alt": "",
              "width": 760,
              "height": 267,
              "instructor_notes": null
            },
            {
              "id": 676670,
              "key": "c016eeec-6736-45aa-a5ce-adac0168738d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Getting Started\n\nTo start, open up your code editor, create a project directory, and create a file named **img2hex.js**.\n\nTo convert this image to a hex file we have a few basic goals.\n\n* Step 1: Get access to the file system. \n\n* Step 2: Read the image file.\n\n* Step 3: Encode the image as hex.\n\n* Step 4: Output the encoded data to the console.\n\nAs a first step, it helps to lay out these goals as comments you can place directly into your code. We'll do that next.\n",
              "instructor_notes": ""
            },
            {
              "id": 676678,
              "key": "9d184fd8-389a-4827-8cf8-1391f4454562",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Code Structure\n\nTo get started, you can paste the comments from below to help guide you. Down below, we'll give the solution to this. Feel free to get started on your own if you'd like, or follow along with us as we encode and decode this image!",
              "instructor_notes": ""
            },
            {
              "id": 676671,
              "key": "3f989b60-181b-4281-81be-5cfbbe2b715b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "```\n// Require file system access\n\n// Read file buffer \n\n// Encode image buffer to hex\n\n// Output encoded data to console\n```",
              "instructor_notes": ""
            },
            {
              "id": 676672,
              "key": "b9043974-67f8-4886-858c-a49641afa8ee",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Encode the Image",
              "instructor_notes": ""
            },
            {
              "id": 676673,
              "key": "e078bec4-ec7e-48c9-b59e-c968d0f3f897",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Here is how we filled in the rest of this code. Don't worry if you didn't get it, we haven't taught this yet but thought you might like to give it a shot!",
              "instructor_notes": ""
            },
            {
              "id": 676674,
              "key": "2dc3a30c-17ba-4c23-b2aa-a9256fce402f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "```\n// Require file system access\nfs = require('fs');\n\n// Read file buffer \nimgReadBuffer = fs.readFileSync('test-pattern.jpg');\n\n\n// Encode image buffer to hex\nimgHexEncode = new Buffer(imgReadBuffer).toString('hex');\n\n// Output encoded data to console\nconsole.log(imgHexEncode);\n```",
              "instructor_notes": ""
            },
            {
              "id": 676675,
              "key": "d9a22e35-0962-4b56-905b-e5da128f681a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Now run this from your terminal and you should see the that it's been encoded as hex. Pretty cool!",
              "instructor_notes": ""
            },
            {
              "id": 676747,
              "key": "b6ae579f-7f16-4eef-9c36-944e7071b62c",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/b6ae579f-7f16-4eef-9c36-944e7071b62c",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 676680,
              "key": "3f79631e-d088-46cd-b3e4-493bf56dc4c7",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Decode the Image\nNow that we've encoded the image, it's useful to know how to decode it. Like before, here are the comments that can help guide you if you'd like to try this for yourself.",
              "instructor_notes": ""
            },
            {
              "id": 676681,
              "key": "92b7d743-ce6b-4519-87b6-638e0fe6a025",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Code Structure\n\nHere is the structure of the solution for how to decode the image file. If you'd like, try finding the solution for yourself, or scroll down to get the code.\n\n``` \n// Decode hex\n\n// Save decoded file file system \n```",
              "instructor_notes": ""
            },
            {
              "id": 676682,
              "key": "a7530269-9f28-4e57-834e-02b817b2c8a7",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Stop here if you'd like to try coding this, scroll down if you'd like to see the answer!",
              "instructor_notes": ""
            },
            {
              "id": 676683,
              "key": "3360bd43-5bfb-454c-a983-975783523848",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Decode the Image\n\nHere is the code for how to decode this image. Run this in your file to see the decoded image in your project directory.\n\n```\n// Decode hex\nvar imgHexDecode = new Buffer(imgHexEncode, 'hex');\n\n// Save decoded file file system \nfs.writeFileSync('decodedHexImage.jpg', imgHexDecode);\n\n```",
              "instructor_notes": ""
            },
            {
              "id": 676685,
              "key": "8fb9699b-6975-4504-8af2-4480c5151b81",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "By running this you should create a file of the decoded image named **decodedHexImage.jpg**. Awesome!",
              "instructor_notes": ""
            },
            {
              "id": 676748,
              "key": "76a845b5-b005-4a95-a84e-c5c95102df77",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b442765_block-line-fill-small/block-line-fill-small.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/76a845b5-b005-4a95-a84e-c5c95102df77",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 676676,
              "key": "ac9a2221-902c-49f3-9a7c-9690adb23503",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Wrap Up\n\nThat’s all there is to it! \n\nIn just a few lines of code you’re able to take an image and encode it as a hex string. \nThis is a huge step toward getting this functionality into your own private blockchain. Throughout the project, you'll bridge the gap between doing this in node.js and establishing this functionality in your own private blockchain.\n\nBefore we do that, there's a few more topics we'd like to go over a new topic known as **Proof of Existence**.\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 703533,
          "key": "4263f803-9a14-4c7b-b04f-1785799222f8",
          "title": "Proof of Existence",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "4263f803-9a14-4c7b-b04f-1785799222f8",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 703534,
              "key": "96df38e6-a298-4605-8757-44dab90700ce",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Proof of Existence\nIn this video, we'll define what **proof of existence** is and how it works.",
              "instructor_notes": ""
            },
            {
              "id": 840638,
              "key": "0fe167c0-6da3-4241-88ac-3da28f4844d2",
              "title": "Proof of Existence Overview",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "_dr5Zf6vvxo",
                "china_cdn_id": "_dr5Zf6vvxo.mp4"
              }
            },
            {
              "id": 703536,
              "key": "56081c9f-e216-41a6-b7e4-710e253d6eb4",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/August/5b86ced3_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/56081c9f-e216-41a6-b7e4-710e253d6eb4",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 703537,
              "key": "03a8c98a-75d3-4f27-9826-4df9196e34a7",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Poex.io Demo\nIn this video, we'll demonstrate proof of existence using an online service known as poex.",
              "instructor_notes": ""
            },
            {
              "id": 840639,
              "key": "f5e4fe31-0339-41a5-8058-fcccadf9a4e4",
              "title": "Poex.io Demo",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "U5kmGRDVP1I",
                "china_cdn_id": "U5kmGRDVP1I.mp4"
              }
            },
            {
              "id": 703539,
              "key": "79a01939-4ef9-420e-88b9-52f07e066e55",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/August/5b86ceff_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/79a01939-4ef9-420e-88b9-52f07e066e55",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 703540,
              "key": "b3640388-ad98-46bf-a464-5d02eb5453bc",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Methods of POE\n\nWe just saw how to use a pre-created notarization service. What’s really cool is that it’s possible for anyone, including us, to create a web application that verifies the existence of digital assets this same way.\n\nFor example, there are other services in the space such as Factom, OriginTimestamp, and Florincoin. Feel free to check some of these out!\n\n##### Proof of Existence Services\n\n> [Factom](http://factom.org/)\n\n> [Origin Timestamp](http://www.originstamp.org/)\n\n> [Floricoin](http://florincoin.org/)\n\n\n\n",
              "instructor_notes": ""
            },
            {
              "id": 703541,
              "key": "ecbfa51f-0fdc-481b-b854-075bed90bf6d",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/August/5b86cf17_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/ecbfa51f-0fdc-481b-b854-075bed90bf6d",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 703542,
              "key": "3ce48cff-6ca4-4c7b-a354-731dca7074b4",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Why do we need POE\n\nBefore trying to use this for ourselves, here’s a few quick ideas over why you might even want to to do this in the first place.\n\n**Helps you demonstrate data ownership without revealing actual data.** \n* This is useful for things like copyrighted material or patents.\n\n**Checks for the integrity of your digital asset. Any proof of existence will recognize your document FOREVER.** \n* Even the slightest difference will be recognized allowing you to be sure your asset hasn’t changed.\n\n**Provides document Time stamping.** You can use this to prove certain information existed at a certain time. \n* This can be useful in cases where you want to prove who was the original owner of the document.\n\n**Certifies the existence of the document without the need for a central authority.** \n* Similar to many blockchain concepts this decentralized proof can’t be erased or modified by anyone.",
              "instructor_notes": ""
            },
            {
              "id": 703543,
              "key": "4b556284-d607-4887-a163-3adab33c48d1",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/August/5b86cf2b_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/4b556284-d607-4887-a163-3adab33c48d1",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 703544,
              "key": "ae6dfa05-25ce-4e41-9d1c-2d734edbcbba",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# POE Algorithms\n\nThere are a different of algorithms to demonstrate Proof of Existence. The two we have chosen to focus on here are SHA256 and MD5. \n\nThey both serve the same purpose. They’re a way to hash a digital asset so it can be embedded in a transaction in the blockchain. This allows people to verify that a document existed at a certain point in time.\n\n### SHA256\n\nThis is an algorithm we’ve seen already in several different parts of the Bitcoin network. It’s used in mining as part of the proof of work algorithm. \n\nIt’s also used to create secured bitcoin addresses. \n\nSHA256 stands for Secure Hash Algorithm. It is a one-way hashing function that takes in any piece of data and produces a unique hash.\n\nThis is the algorithm POEX uses to secure their digital documents.\n\n### MD5\n\nNext, the MD5 algorithm is a hash function that takes in a String input and produces a 128-bit hash value. This value is usually shown as a 32-character hexadecimal number that humans can read.\n\n#### Goals of POE Algorithms\n\nWhile each method does things a bit differently, the important thing to remember is their purpose. \n\nThey hash digital assets to hide the actual content. Once the hashed data is embedded in a transaction in the blockchain, the existence of that transaction in the blockchain proves that the document existed at the time the transaction got included into a block. \n",
              "instructor_notes": ""
            },
            {
              "id": 703545,
              "key": "30320dba-284c-4e6e-8a0f-0078457b8829",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/August/5b86cf3e_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/30320dba-284c-4e6e-8a0f-0078457b8829",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 703546,
              "key": "5c892565-3878-4459-a8cf-1cfc2b52c5cc",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Wrap Up\n\nTo recap, in this section we covered:\n* **Proof of Existence:** The concept that publicly proving and authenticating any digital asset on the blockchain by verifying its hash.\n* We saw a demo using the POEX online document notarization service.\n*  Lastly, we discussed different algorithms commonly used for proof of existence such as SHA256 and MD5.\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 783710,
          "key": "f0086810-be11-4243-9e39-786864b0e302",
          "title": "Interview: Proof of Existence",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f0086810-be11-4243-9e39-786864b0e302",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 783888,
              "key": "9620d07b-9e26-4625-add1-da3cf870c7cf",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Proof of Existence\n---\nWe just learned how proof of existence is used to verify and protect intellectual property whether that's a documents, media file, or another piece of digital data. Proof of existence relies on timestamped transactions on the blockchain. Let's hear from [Jarrod Dicker](https://www.linkedin.com/in/jarroddicker/), CEO of [Po.et](https://www.po.et/) which is  decentralized protocol for content ownership, discovery\nand monetization in media. \n\nLet's hear what he has to say about the power of proof of existence to help content creators get the appropriate attribution for their work. ",
              "instructor_notes": ""
            },
            {
              "id": 783893,
              "key": "b9ec14b7-c3f7-495a-b9bf-55fbfbee5e5a",
              "title": "Interview with Jarrod Dicker, CEO of Po.et",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "O7F-1AaFoqc",
                "china_cdn_id": "O7F-1AaFoqc.mp4"
              }
            }
          ]
        },
        {
          "id": 703547,
          "key": "09d2bb5c-78ae-4c56-9b8c-3323d22127ff",
          "title": "Securing Assets Using Your Digital Identity",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "09d2bb5c-78ae-4c56-9b8c-3323d22127ff",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 703548,
              "key": "8823b41f-6ab4-41f3-bb07-45141a5ea62d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Secure Assets Using a Digital Identity\n\nIn this video, we'll go over how an identity can be used to secure digital assets and why this is helpful.",
              "instructor_notes": ""
            },
            {
              "id": 840640,
              "key": "ac2a3347-5e5e-4769-9bcd-8fbbf8816fb9",
              "title": " Securing Assets Using Your Digital Identity",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "LYtxxrroQvc",
                "china_cdn_id": "LYtxxrroQvc.mp4"
              }
            }
          ]
        },
        {
          "id": 690481,
          "key": "87e71ad5-ab47-4309-a045-aec0c76e7158",
          "title": "Web Service with Blockchain Considerations",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "87e71ad5-ab47-4309-a045-aec0c76e7158",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 842849,
              "key": "cf33fe25-7970-4547-acf6-537fc1b4790e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Web Service with Blockchain\n---\n\nDuring the next four concepts we want to show you how to you can expose your Blockchain data to a third party applications or clients applications. In the next project, you won't need to implement your Web service using RESTApi's because we are going to provide it for you, but will be very important for you to understand how a web service can be planned and implemented to be successful in your project and in your future career. ",
              "instructor_notes": ""
            },
            {
              "id": 690492,
              "key": "3454fab7-fbd0-4aeb-bc65-fad5d594ee12",
              "title": "Web Service With Blockchain Considerations",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "N9LEB9zYnT4",
                "china_cdn_id": "N9LEB9zYnT4.mp4"
              }
            },
            {
              "id": 728517,
              "key": "f7ad2feb-0718-4ca4-8d90-5b9334b1f5aa",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Do you really need a blockchain?\n---\nIn addition to the questions Jessica covered, here are some helpful questions to help determine if you really need a blockchain. These questions were originally put together by [Viant](https://viant.io/), a [ConsenSys incubated company](https://new.consensys.net/), that built an asset and domain agnostic blockchain-based supply chain platform [TraSeable Solutions](https://traseable.com/).\n\n### Problem of Value Identification\n1. Is there a need to **share information, credentials or value** with others?\n2. Is **trust** a critical requirement to the process?\n3. Do you need to **prove** to others you are **transacting/reporting** accurately?\n4. Is there **potential to monetize** the data or digital asset in the value chain?\n5. Who **owns** the **problem**? Individual or industry wide challenges?\n\n### Stakeholders buy in\n1. Is there a **network** of stakeholders (i.e. more than 2)?\n2. Is there a **dependency on others** for information?\n3. Does **more than one participant** need to **update** the data?\n4. Is there **scope to open up the ecosystem to ancillary parties** in the future?\n5. Are you **working with other industry players** on any activities?\n\n### Technical considerations\n1. Is there any ongoing need or future requirements for **high data throughput**?\n2. Do you **rely or use public data sources** to make decisions?\n3. Do you need to **store a particularly rich/complex data structure**?\n4. Do you need to **digitize assets** in your value chain?\n5. Do you **need transaction privacy**? Do you need **anonymity**?",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 690482,
          "key": "d60ad466-c0e1-40f5-afe6-8b70468b4de4",
          "title": "Planning Web Services with Our Private Blockchain",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "d60ad466-c0e1-40f5-afe6-8b70468b4de4",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 690498,
              "key": "69eb6262-86a4-4ef5-a03c-6450a24ccd16",
              "title": "Planning Web Services With Our Private Blockchain",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "L3wA8FRFiew",
                "china_cdn_id": "L3wA8FRFiew.mp4"
              }
            },
            {
              "id": 690493,
              "key": "c6ac769f-a0c6-492a-8ff8-59faecadd2d7",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Resources\n\nNeed a review for Web Services or Javascript? Checkout these courses:\n\n- [Designing Restful APIs Course](https://www.udacity.com/course/designing-restful-apis--ud388)\n- [Web Servers Course](https://www.udacity.com/course/http-web-servers--ud303)\n- [Intro to Javascript](https://www.udacity.com/course/intro-to-javascript--ud803)",
              "instructor_notes": ""
            },
            {
              "id": 690496,
              "key": "ad65bea5-63cc-434e-8793-da691580f441",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Upcoming plan to build web service with private blockchain\n\n- Configure API web service with GET/POST endpoints\n  - Build and deploy local web service with Node.js\n  - Configure API endpoints with static mock data for testing\n   - GET - Block by ID\n   - POST - New Block\n- Migrate your private blockchain to your API web service\n  - Configure API endpoints to interact with your private blockchain\n   - GET - Block by ID\n   - POST - New Block\n  - Create a method to validate blockchain health",
              "instructor_notes": ""
            },
            {
              "id": 785458,
              "key": "5b9bf2c7-3d46-4427-846f-b479fa474792",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/August/5b86cf17_blockchain-line/blockchain-line.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/5b9bf2c7-3d46-4427-846f-b479fa474792",
              "caption": "",
              "alt": "",
              "width": 75,
              "height": 75,
              "instructor_notes": null
            },
            {
              "id": 785459,
              "key": "788305e3-590e-46f9-8c25-47161074fd27",
              "title": "Get vs POST",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "788305e3-590e-46f9-8c25-47161074fd27",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Match the concept with the definition"
                },
                "concepts_label": "Concept",
                "answers_label": "Definition",
                "concepts": [
                  {
                    "text": "GET",
                    "correct_answer": {
                      "id": "a1543246213223",
                      "text": "Is used to request data from a specified resource"
                    }
                  },
                  {
                    "text": "POST",
                    "correct_answer": {
                      "id": "a1543246286001",
                      "text": "Is used to send data to a server to create a resource"
                    }
                  },
                  {
                    "text": "PUT",
                    "correct_answer": {
                      "id": "a1543246309382",
                      "text": "Is used to send data to a server to update a resource"
                    }
                  },
                  {
                    "text": "DEL",
                    "correct_answer": {
                      "id": "a1543246361941",
                      "text": "Delete method deletes the specified resource"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1543246309382",
                    "text": "Is used to send data to a server to update a resource"
                  },
                  {
                    "id": "a1543246286001",
                    "text": "Is used to send data to a server to create a resource"
                  },
                  {
                    "id": "a1543246361941",
                    "text": "Delete method deletes the specified resource"
                  },
                  {
                    "id": "a1543246213223",
                    "text": "Is used to request data from a specified resource"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 690575,
          "key": "d583e9cf-1ea3-405e-a648-620000b1b2d7",
          "title": "RESTful APIs with Node.js Frameworks",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "d583e9cf-1ea3-405e-a648-620000b1b2d7",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 690578,
              "key": "cdeb370b-2ed7-4499-8728-80935d0e463b",
              "title": "RESTful Frameworks",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "3VpiWpMpaYY",
                "china_cdn_id": "3VpiWpMpaYY.mp4"
              }
            },
            {
              "id": 690576,
              "key": "5cc17c85-c253-4e13-8d9b-edd1a46c37da",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Reading\n\nNode.js is commonly used in the world of web development, so it's no surprise there are many frameworks, platforms, and libraries that leverage it for building Web APIs. Here's an article discussing 13 important ones:\n\n[13 Node.js Frameworks to Build Web APIs](https://nordicapis.com/13-node-js-frameworks-to-build-web-apis/)",
              "instructor_notes": ""
            },
            {
              "id": 690579,
              "key": "7bd3e10b-ebf7-4497-9c32-88001fd4aa78",
              "title": "BDND-C3L2-02.1 Framework Overview V4",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "p6KGXYwOiwM",
                "china_cdn_id": "p6KGXYwOiwM.mp4"
              }
            },
            {
              "id": 690577,
              "key": "c956774e-87ec-44f0-a63e-d68e02ee23f5",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Framework Homepages\n\n[Expressjs.com](https://expressjs.com/)\n\n[Sailsjs.com](https://sailsjs.com/)\n\n[Hapijs.com](https://hapijs.com/)",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 690580,
          "key": "67a26b72-07df-4289-9dc8-94ad8e014abc",
          "title": "Express.js",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "67a26b72-07df-4289-9dc8-94ad8e014abc",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 690581,
              "key": "b9b0b2b0-1815-4a48-8686-4e13104a5c19",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Express.js Overview\n\nWelcome to this section on express.js!\n\nIn this section, we’ll create our own hello world express application. To do that we’ve broken the section up into 3 main sections.\n\n* **Getting started**: In the first video, we’ll take a look at www.expressjs.com, and check out some of the resources and documentation. \n\n* **Hello World**: In the second video, you’ll get express.js installed locally and get your ‘hello world’ application up and running.\n\n* **Code Overview**: Finally, we’ll go back into the local environment and walk through each line of code to better understand what’s going on with our new application.\n\n## System Requirements\n\nExpressjs should hopefully be simple to install and get started with. It is compatible with any operating system and only requires some space in your working directory to install its dependencies.\n\n\nWhen you’re ready, come see the next video where we overview expressjs.com. ",
              "instructor_notes": ""
            },
            {
              "id": 690582,
              "key": "0533d497-9a2f-4fa2-b70d-f4f1172a4479",
              "title": "Express.Js Getting Started",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "rs7tvfjszdA",
                "china_cdn_id": "rs7tvfjszdA.mp4"
              }
            },
            {
              "id": 690583,
              "key": "f0bd6b04-93a7-4f92-96c8-65fe21047de0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Prepare for Express “Hello World”.\n\nIt can be difficult to manage so many different files and windows, especially when trying to watch videos in the classroom.\n\nTo help out, I listed each of the different applications we’ll be using. Hopefully this helps you collect your tabs, windows, and applications in a way that you can more easily navigate between them.\n\nIn the next video, we’ll be jumping around between windows a lot. Here’s a list of tools and you can expect to use. \n\n### Tools we’ll use\n\n* Expressjs.com for documentation\n* Your Local Desktop\n* A Terminal Window\n* Code Editor (I’m using VS Code)\n* Another Browser window (to view your application)\n\nA lot of the struggle here getting started is just being able to move between these tools efficiently. Once this is organized, it’s a lot easier to focus on what’s happening with the code. \n\nLet’s make our ‘Hello World’ application!",
              "instructor_notes": ""
            },
            {
              "id": 690584,
              "key": "8530e91b-67e6-4334-9c34-f30d87c6d4bf",
              "title": "Express.Js Hello World",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "9acoSLSygQ8",
                "china_cdn_id": "9acoSLSygQ8.mp4"
              }
            },
            {
              "id": 690586,
              "key": "9db3d77e-b4df-4d59-9afb-2ca4e0112550",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Express.js Hello World Code\n\nHere is the code that was used to create the index.js file in the previous video.\n\n```\nconst express = require('express')\nconst app = express()\n\napp.get('/', (req, res) => res.send('Hello World!'))\n\napp.listen(3000, () => console.log('Example app listening on port 3000!'))\n```\n\nExpress.js: [Get Started](https://expressjs.com/en/starter/hello-world.html)",
              "instructor_notes": ""
            },
            {
              "id": 690589,
              "key": "2975243b-29c3-418f-842f-e62c9f73274b",
              "title": "Express.Js Code Walkthrough",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Y575BVGM7Ig",
                "china_cdn_id": "Y575BVGM7Ig.mp4"
              }
            },
            {
              "id": 690603,
              "key": "092f5fcb-90bd-4002-a9e1-47c768e82787",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Express.js Documentation \nThe express.js code description can be found here. [here](https://expressjs.com/en/guide/writing-middleware.html).\n\n# Express.js Conclusion\n\nIn this section, you worked through creating your first expressjs application. \n\nYou went through some of the documentation, built a hello world app, then went into your project files to look through the code.\n\nThis is an extremely powerful framework and there are many resources to help you get started. If you’re interested in learning more, they provide a great list of books and blogs on their site [here](https://expressjs.com/en/resources/books-blogs.html). \n\nAlso, each of the modules along with their documentation are listed [here](https://expressjs.com/en/resources/middleware.html). \n\nNow you are to go and understand the RESTApi we created for you in your next project.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 703550,
          "key": "4cee9f53-4f95-445e-9f64-9eee5a5b345f",
          "title": "Blockchain Generations",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "4cee9f53-4f95-445e-9f64-9eee5a5b345f",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 703551,
              "key": "091abf55-95c5-4eee-8a68-f156d61b7181",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Blockchain Generations\n\nIn this video, we'll discuss digital asset management and how it fits into the overall scheme of blockchain generations.",
              "instructor_notes": ""
            },
            {
              "id": 840641,
              "key": "070ef7ea-e38a-449e-bc1a-d0ada4898452",
              "title": "Blockchain Generations",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "7RmRVq9RdeE",
                "china_cdn_id": "7RmRVq9RdeE.mp4"
              }
            }
          ]
        },
        {
          "id": 703553,
          "key": "764be870-e9da-4213-b326-630c0f4a2b01",
          "title": "Lesson Recap",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "764be870-e9da-4213-b326-630c0f4a2b01",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 840642,
              "key": "e60254de-255c-473e-8949-3f8c1923cb15",
              "title": "Lesson Recap",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "XT7buWXBCR8",
                "china_cdn_id": "XT7buWXBCR8.mp4"
              }
            },
            {
              "id": 703555,
              "key": "0125aa7b-703f-4071-b498-8070ff06fe53",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Lesson Goals\nThroughout this lesson, you worked with digital assets programmatically using your terminal and javascript. This is meant to help prepare you for the next project where you will utilize these skills in your own private blockchain.\n\n* **Digital Assets**\n  * Discuss what digital assets are and how they are related to the blockchain.\n* **Encode/Decode Data**\n * Explain the purpose that encoding, decoding, and what this purpose this serves for digital assets.\n * Generate raw data from different types of digital assets from the terminal.\n * Learn to generate raw data from different types of digital assets using Javascript\n* **Proof of Existence**\n * Learn a new concept \"proof of existence\" and see one way this is implemented using an online service known as poex.\n* **Secure Assets Using Your Digital Identity**\n * Understand how a identity can be used to secure digital assets and why this is helpful.\n* **Blockchain Generations**\n * Discuss digital asset management and how it fits into the overall scheme of blockchain generations.",
              "instructor_notes": ""
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    }
  ]
}